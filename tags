!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
entry	obj/kern/kernel.asm	/^entry:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 10 18 00       	mov    $0x181000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 a0 11 f0       	mov    $0xf011a000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 02 00 00 00       	call   f0100040 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <i386_init>:$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	e8 1b 01 00 00       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f010004c	obj/kern/kernel.asm	/^f010004c:	81 c3 d4 ff 07 00    	add    $0x7ffd4,%ebx$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	c7 c0 e0 2f 18 f0    	mov    $0xf0182fe0,%eax$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	c7 c2 e0 20 18 f0    	mov    $0xf01820e0,%edx$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	29 d0                	sub    %edx,%eax$/;"	l
f0100060	obj/kern/kernel.asm	/^f0100060:	50                   	push   %eax$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	6a 00                	push   $0x0$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	52                   	push   %edx$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	e8 71 4c 00 00       	call   f0104cda <memset>$/;"	l
f0100069	obj/kern/kernel.asm	/^f0100069:	e8 4e 05 00 00       	call   f01005bc <cons_init>$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100071	obj/kern/kernel.asm	/^f0100071:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	8d 83 00 51 f8 ff    	lea    -0x7af00(%ebx),%eax$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	50                   	push   %eax$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 33 39 00 00       	call   f01039b5 <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	e8 55 13 00 00       	call   f01013dc <mem_init>$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	e8 a2 32 00 00       	call   f010332e <env_init>$/;"	l
f010008c	obj/kern/kernel.asm	/^f010008c:	e8 d7 39 00 00       	call   f0103a68 <trap_init>$/;"	l
f0100091	obj/kern/kernel.asm	/^f0100091:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094:	6a 00                	push   $0x0$/;"	l
f0100096	obj/kern/kernel.asm	/^f0100096:	ff b3 f4 ff ff ff    	pushl  -0xc(%ebx)$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	e8 90 34 00 00       	call   f0103531 <env_create>$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	83 c4 04             	add    $0x4,%esp$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	c7 c0 28 23 18 f0    	mov    $0xf0182328,%eax$/;"	l
f01000aa	obj/kern/kernel.asm	/^f01000aa:	ff 30                	pushl  (%eax)$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	e8 21 38 00 00       	call   f01038d2 <env_run>$/;"	l
f01000b1	obj/kern/kernel.asm	/^f01000b1 <_panic>:$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
f01000b1	obj/kern/kernel.asm	/^f01000b1:	55                   	push   %ebp$/;"	l
f01000b2	obj/kern/kernel.asm	/^f01000b2:	89 e5                	mov    %esp,%ebp$/;"	l
f01000b4	obj/kern/kernel.asm	/^f01000b4:	57                   	push   %edi$/;"	l
f01000b5	obj/kern/kernel.asm	/^f01000b5:	56                   	push   %esi$/;"	l
f01000b6	obj/kern/kernel.asm	/^f01000b6:	53                   	push   %ebx$/;"	l
f01000b7	obj/kern/kernel.asm	/^f01000b7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	e8 a8 00 00 00       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f01000bf	obj/kern/kernel.asm	/^f01000bf:	81 c3 61 ff 07 00    	add    $0x7ff61,%ebx$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01000c8	obj/kern/kernel.asm	/^f01000c8:	c7 c0 e4 2f 18 f0    	mov    $0xf0182fe4,%eax$/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	74 0f                	je     f01000e2 <_panic+0x31>$/;"	l
dead	obj/kern/kernel.asm	/^dead:$/;"	l
f01000d3	obj/kern/kernel.asm	/^f01000d3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	6a 00                	push   $0x0$/;"	l
f01000d8	obj/kern/kernel.asm	/^f01000d8:	e8 5b 07 00 00       	call   f0100838 <monitor>$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000e0	obj/kern/kernel.asm	/^f01000e0:	eb f1                	jmp    f01000d3 <_panic+0x22>$/;"	l
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
f01000e2	obj/kern/kernel.asm	/^f01000e2:	89 38                	mov    %edi,(%eax)$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4:	fa                   	cli    $/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	fc                   	cld    $/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f01000e9	obj/kern/kernel.asm	/^f01000e9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01000ec	obj/kern/kernel.asm	/^f01000ec:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	8d 83 1b 51 f8 ff    	lea    -0x7aee5(%ebx),%eax$/;"	l
f01000f8	obj/kern/kernel.asm	/^f01000f8:	50                   	push   %eax$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	e8 b7 38 00 00       	call   f01039b5 <cprintf>$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	56                   	push   %esi$/;"	l
f0100102	obj/kern/kernel.asm	/^f0100102:	57                   	push   %edi$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	e8 76 38 00 00       	call   f010397e <vcprintf>$/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	8d 83 2a 60 f8 ff    	lea    -0x79fd6(%ebx),%eax$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	e8 9f 38 00 00       	call   f01039b5 <cprintf>$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	eb b8                	jmp    f01000d3 <_panic+0x22>$/;"	l
f010011b	obj/kern/kernel.asm	/^f010011b <_warn>:$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
f010011b	obj/kern/kernel.asm	/^f010011b:	55                   	push   %ebp$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	89 e5                	mov    %esp,%ebp$/;"	l
f010011e	obj/kern/kernel.asm	/^f010011e:	56                   	push   %esi$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	53                   	push   %ebx$/;"	l
f0100120	obj/kern/kernel.asm	/^f0100120:	e8 42 00 00 00       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0100125	obj/kern/kernel.asm	/^f0100125:	81 c3 fb fe 07 00    	add    $0x7fefb,%ebx$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	8d 75 14             	lea    0x14(%ebp),%esi$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100134	obj/kern/kernel.asm	/^f0100134:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	8d 83 33 51 f8 ff    	lea    -0x7aecd(%ebx),%eax$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d:	50                   	push   %eax$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	e8 72 38 00 00       	call   f01039b5 <cprintf>$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100146	obj/kern/kernel.asm	/^f0100146:	56                   	push   %esi$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	e8 2f 38 00 00       	call   f010397e <vcprintf>$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	8d 83 2a 60 f8 ff    	lea    -0x79fd6(%ebx),%eax$/;"	l
f0100155	obj/kern/kernel.asm	/^f0100155:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	e8 58 38 00 00       	call   f01039b5 <cprintf>$/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100160	obj/kern/kernel.asm	/^f0100160:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	5b                   	pop    %ebx$/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	5e                   	pop    %esi$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	5d                   	pop    %ebp$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	c3                   	ret    $/;"	l
f0100167	obj/kern/kernel.asm	/^f0100167 <__x86.get_pc_thunk.bx>:$/;"	l
f0100167	obj/kern/kernel.asm	/^f0100167:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	c3                   	ret    $/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b <serial_proc_data>:$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	55                   	push   %ebp$/;"	l
f010016c	obj/kern/kernel.asm	/^f010016c:	89 e5                	mov    %esp,%ebp$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	ec                   	in     (%dx),%al$/;"	l
f0100174	obj/kern/kernel.asm	/^f0100174:	a8 01                	test   $0x1,%al$/;"	l
f0100176	obj/kern/kernel.asm	/^f0100176:	74 0b                	je     f0100183 <serial_proc_data+0x18>$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010017d	obj/kern/kernel.asm	/^f010017d:	ec                   	in     (%dx),%al$/;"	l
f010017e	obj/kern/kernel.asm	/^f010017e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	5d                   	pop    %ebp$/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182:	c3                   	ret    $/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	eb f7                	jmp    f0100181 <serial_proc_data+0x16>$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a <cons_intr>:$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	55                   	push   %ebp$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	89 e5                	mov    %esp,%ebp$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	56                   	push   %esi$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	53                   	push   %ebx$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	e8 d3 ff ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0100194	obj/kern/kernel.asm	/^f0100194:	81 c3 8c fe 07 00    	add    $0x7fe8c,%ebx$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	89 c6                	mov    %eax,%esi$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	ff d6                	call   *%esi$/;"	l
f010019e	obj/kern/kernel.asm	/^f010019e:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	74 2e                	je     f01001d1 <cons_intr+0x47>$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	85 c0                	test   %eax,%eax$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	74 f5                	je     f010019c <cons_intr+0x12>$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	8b 8b e4 22 00 00    	mov    0x22e4(%ebx),%ecx$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	89 93 e4 22 00 00    	mov    %edx,0x22e4(%ebx)$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	88 84 0b e0 20 00 00 	mov    %al,0x20e0(%ebx,%ecx,1)$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	75 d7                	jne    f010019c <cons_intr+0x12>$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	c7 83 e4 22 00 00 00 	movl   $0x0,0x22e4(%ebx)$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	00 00 00 $/;"	l
f01001cf	obj/kern/kernel.asm	/^f01001cf:	eb cb                	jmp    f010019c <cons_intr+0x12>$/;"	l
f01001d1	obj/kern/kernel.asm	/^f01001d1:	5b                   	pop    %ebx$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	5e                   	pop    %esi$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	5d                   	pop    %ebp$/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	c3                   	ret    $/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5 <kbd_proc_data>:$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	55                   	push   %ebp$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	89 e5                	mov    %esp,%ebp$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	56                   	push   %esi$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	53                   	push   %ebx$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	e8 88 ff ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df:	81 c3 41 fe 07 00    	add    $0x7fe41,%ebx$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	ec                   	in     (%dx),%al$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	a8 01                	test   $0x1,%al$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	0f 84 06 01 00 00    	je     f01002f9 <kbd_proc_data+0x124>$/;"	l
f01001f3	obj/kern/kernel.asm	/^f01001f3:	a8 20                	test   $0x20,%al$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	0f 85 05 01 00 00    	jne    f0100300 <kbd_proc_data+0x12b>$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f0100200	obj/kern/kernel.asm	/^f0100200:	ec                   	in     (%dx),%al$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	89 c2                	mov    %eax,%edx$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100205	obj/kern/kernel.asm	/^f0100205:	0f 84 93 00 00 00    	je     f010029e <kbd_proc_data+0xc9>$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	84 c0                	test   %al,%al$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	0f 88 a0 00 00 00    	js     f01002b3 <kbd_proc_data+0xde>$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	8b 8b c0 20 00 00    	mov    0x20c0(%ebx),%ecx$/;"	l
f0100219	obj/kern/kernel.asm	/^f0100219:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	74 0e                	je     f010022c <kbd_proc_data+0x57>$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	89 c2                	mov    %eax,%edx$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	89 8b c0 20 00 00    	mov    %ecx,0x20c0(%ebx)$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010022f	obj/kern/kernel.asm	/^f010022f:	0f b6 84 13 80 52 f8 	movzbl -0x7ad80(%ebx,%edx,1),%eax$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	ff $/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	0b 83 c0 20 00 00    	or     0x20c0(%ebx),%eax$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	0f b6 8c 13 80 51 f8 	movzbl -0x7ae80(%ebx,%edx,1),%ecx$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	ff $/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	31 c8                	xor    %ecx,%eax$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	89 83 c0 20 00 00    	mov    %eax,0x20c0(%ebx)$/;"	l
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
f010024d	obj/kern/kernel.asm	/^f010024d:	89 c1                	mov    %eax,%ecx$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	8b 8c 8b 00 20 00 00 	mov    0x2000(%ebx,%ecx,4),%ecx$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	a8 08                	test   $0x8,%al$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	74 0d                	je     f0100271 <kbd_proc_data+0x9c>$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	89 f2                	mov    %esi,%edx$/;"	l
f0100266	obj/kern/kernel.asm	/^f0100266:	8d 4e 9f             	lea    -0x61(%esi),%ecx$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	77 7a                	ja     f01002e8 <kbd_proc_data+0x113>$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	83 ee 20             	sub    $0x20,%esi$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	f7 d0                	not    %eax$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	a8 06                	test   $0x6,%al$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	75 33                	jne    f01002aa <kbd_proc_data+0xd5>$/;"	l
f0100277	obj/kern/kernel.asm	/^f0100277:	81 fe e9 00 00 00    	cmp    $0xe9,%esi$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	75 2b                	jne    f01002aa <kbd_proc_data+0xd5>$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100282	obj/kern/kernel.asm	/^f0100282:	8d 83 4d 51 f8 ff    	lea    -0x7aeb3(%ebx),%eax$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	50                   	push   %eax$/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	e8 27 37 00 00       	call   f01039b5 <cprintf>$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	ee                   	out    %al,(%dx)$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	83 c4 10             	add    $0x10,%esp$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	eb 0c                	jmp    f01002aa <kbd_proc_data+0xd5>$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	83 8b c0 20 00 00 40 	orl    $0x40,0x20c0(%ebx)$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01002aa	obj/kern/kernel.asm	/^f01002aa:	89 f0                	mov    %esi,%eax$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01002af	obj/kern/kernel.asm	/^f01002af:	5b                   	pop    %ebx$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	5e                   	pop    %esi$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	5d                   	pop    %ebp$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	c3                   	ret    $/;"	l
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
f01002b3	obj/kern/kernel.asm	/^f01002b3:	8b 8b c0 20 00 00    	mov    0x20c0(%ebx),%ecx$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	89 ce                	mov    %ecx,%esi$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	83 e6 40             	and    $0x40,%esi$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01002c1	obj/kern/kernel.asm	/^f01002c1:	85 f6                	test   %esi,%esi$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	0f b6 84 13 80 52 f8 	movzbl -0x7ad80(%ebx,%edx,1),%eax$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	ff $/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	83 c8 40             	or     $0x40,%eax$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	f7 d0                	not    %eax$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	21 c8                	and    %ecx,%eax$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	89 83 c0 20 00 00    	mov    %eax,0x20c0(%ebx)$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	eb c2                	jmp    f01002aa <kbd_proc_data+0xd5>$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	83 ea 41             	sub    $0x41,%edx$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	8d 4e 20             	lea    0x20(%esi),%ecx$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	83 fa 1a             	cmp    $0x1a,%edx$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	0f 42 f1             	cmovb  %ecx,%esi$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	e9 78 ff ff ff       	jmp    f0100271 <kbd_proc_data+0x9c>$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	eb aa                	jmp    f01002aa <kbd_proc_data+0xd5>$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	eb a3                	jmp    f01002aa <kbd_proc_data+0xd5>$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307 <cons_putc>:$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	55                   	push   %ebp$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	89 e5                	mov    %esp,%ebp$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	57                   	push   %edi$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	56                   	push   %esi$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	53                   	push   %ebx$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	e8 52 fe ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	81 c3 0b fd 07 00    	add    $0x7fd0b,%ebx$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	eb 09                	jmp    f0100338 <cons_putc+0x31>$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	ec                   	in     (%dx),%al$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	ec                   	in     (%dx),%al$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	ec                   	in     (%dx),%al$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	ec                   	in     (%dx),%al$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	89 fa                	mov    %edi,%edx$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	ec                   	in     (%dx),%al$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	a8 20                	test   $0x20,%al$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	75 08                	jne    f0100347 <cons_putc+0x40>$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	7e e8                	jle    f010032f <cons_putc+0x28>$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	89 f8                	mov    %edi,%eax$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	88 45 e3             	mov    %al,-0x1d(%ebp)$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	ee                   	out    %al,(%dx)$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	eb 09                	jmp    f010036f <cons_putc+0x68>$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	89 ca                	mov    %ecx,%edx$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	ec                   	in     (%dx),%al$/;"	l
f0100369	obj/kern/kernel.asm	/^f0100369:	ec                   	in     (%dx),%al$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	ec                   	in     (%dx),%al$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	ec                   	in     (%dx),%al$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	83 c6 01             	add    $0x1,%esi$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	89 fa                	mov    %edi,%edx$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	ec                   	in     (%dx),%al$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	81 fe ff 31 00 00    	cmp    $0x31ff,%esi$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	7f 04                	jg     f010037e <cons_putc+0x77>$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	84 c0                	test   %al,%al$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	79 e8                	jns    f0100366 <cons_putc+0x5f>$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	ee                   	out    %al,(%dx)$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	ee                   	out    %al,(%dx)$/;"	l
f0100393	obj/kern/kernel.asm	/^f0100393:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	ee                   	out    %al,(%dx)$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	89 fa                	mov    %edi,%edx$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01003a4	obj/kern/kernel.asm	/^f01003a4:	89 f8                	mov    %edi,%eax$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	80 cc 07             	or     $0x7,%ah$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	85 d2                	test   %edx,%edx$/;"	l
f01003ab	obj/kern/kernel.asm	/^f01003ab:	0f 45 c7             	cmovne %edi,%eax$/;"	l
f01003ae	obj/kern/kernel.asm	/^f01003ae:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	0f 84 b9 00 00 00    	je     f0100476 <cons_putc+0x16f>$/;"	l
f01003bd	obj/kern/kernel.asm	/^f01003bd:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	7e 74                	jle    f0100436 <cons_putc+0x12f>$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	0f 84 9e 00 00 00    	je     f0100469 <cons_putc+0x162>$/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	0f 85 d9 00 00 00    	jne    f01004ad <cons_putc+0x1a6>$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	0f b7 83 e8 22 00 00 	movzwl 0x22e8(%ebx),%eax$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	66 89 83 e8 22 00 00 	mov    %ax,0x22e8(%ebx)$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	66 81 bb e8 22 00 00 	cmpw   $0x7cf,0x22e8(%ebx)$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	cf 07 $/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	0f 87 d4 00 00 00    	ja     f01004d4 <cons_putc+0x1cd>$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	8b 8b f0 22 00 00    	mov    0x22f0(%ebx),%ecx$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010040b	obj/kern/kernel.asm	/^f010040b:	89 ca                	mov    %ecx,%edx$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	ee                   	out    %al,(%dx)$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	0f b7 9b e8 22 00 00 	movzwl 0x22e8(%ebx),%ebx$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100418	obj/kern/kernel.asm	/^f0100418:	89 d8                	mov    %ebx,%eax$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	89 f2                	mov    %esi,%edx$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	ee                   	out    %al,(%dx)$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	89 ca                	mov    %ecx,%edx$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	ee                   	out    %al,(%dx)$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	89 d8                	mov    %ebx,%eax$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	89 f2                	mov    %esi,%edx$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	ee                   	out    %al,(%dx)$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	5b                   	pop    %ebx$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	5e                   	pop    %esi$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	5f                   	pop    %edi$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	5d                   	pop    %ebp$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	c3                   	ret    $/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	75 72                	jne    f01004ad <cons_putc+0x1a6>$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	0f b7 83 e8 22 00 00 	movzwl 0x22e8(%ebx),%eax$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	66 85 c0             	test   %ax,%ax$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	74 b9                	je     f0100400 <cons_putc+0xf9>$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	66 89 83 e8 22 00 00 	mov    %ax,0x22e8(%ebx)$/;"	l
f0100451	obj/kern/kernel.asm	/^f0100451:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	0f b7 55 e4          	movzwl -0x1c(%ebp),%edx$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	b2 00                	mov    $0x0,%dl$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	83 ca 20             	or     $0x20,%edx$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	8b 8b ec 22 00 00    	mov    0x22ec(%ebx),%ecx$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	eb 88                	jmp    f01003f1 <cons_putc+0xea>$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	66 83 83 e8 22 00 00 	addw   $0x50,0x22e8(%ebx)$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	50 $/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	e9 5e ff ff ff       	jmp    f01003d4 <cons_putc+0xcd>$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	e8 87 fe ff ff       	call   f0100307 <cons_putc>$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	e8 7d fe ff ff       	call   f0100307 <cons_putc>$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	e8 73 fe ff ff       	call   f0100307 <cons_putc>$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	e8 69 fe ff ff       	call   f0100307 <cons_putc>$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	e8 5f fe ff ff       	call   f0100307 <cons_putc>$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	e9 44 ff ff ff       	jmp    f01003f1 <cons_putc+0xea>$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	0f b7 83 e8 22 00 00 	movzwl 0x22e8(%ebx),%eax$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	66 89 93 e8 22 00 00 	mov    %dx,0x22e8(%ebx)$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	8b 93 ec 22 00 00    	mov    0x22ec(%ebx),%edx$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	0f b7 7d e4          	movzwl -0x1c(%ebp),%edi$/;"	l
f01004cb	obj/kern/kernel.asm	/^f01004cb:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01004cf	obj/kern/kernel.asm	/^f01004cf:	e9 1d ff ff ff       	jmp    f01003f1 <cons_putc+0xea>$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	8b 83 ec 22 00 00    	mov    0x22ec(%ebx),%eax$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	68 00 0f 00 00       	push   $0xf00$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	52                   	push   %edx$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	50                   	push   %eax$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	e8 38 48 00 00       	call   f0104d27 <memmove>$/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef:	8b 93 ec 22 00 00    	mov    0x22ec(%ebx),%edx$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f0100501	obj/kern/kernel.asm	/^f0100501:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	83 c0 02             	add    $0x2,%eax$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	39 d0                	cmp    %edx,%eax$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	75 f4                	jne    f0100504 <cons_putc+0x1fd>$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	66 83 ab e8 22 00 00 	subw   $0x50,0x22e8(%ebx)$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	50 $/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	e9 e3 fe ff ff       	jmp    f0100400 <cons_putc+0xf9>$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d <serial_intr>:$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	e8 e7 01 00 00       	call   f0100709 <__x86.get_pc_thunk.ax>$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	05 fe fa 07 00       	add    $0x7fafe,%eax$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	80 b8 f4 22 00 00 00 	cmpb   $0x0,0x22f4(%eax)$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	75 02                	jne    f0100532 <serial_intr+0x15>$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	f3 c3                	repz ret $/;"	l
f0100532	obj/kern/kernel.asm	/^f0100532:	55                   	push   %ebp$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	89 e5                	mov    %esp,%ebp$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	8d 80 4b 01 f8 ff    	lea    -0x7feb5(%eax),%eax$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	e8 47 fc ff ff       	call   f010018a <cons_intr>$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	c9                   	leave  $/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	c3                   	ret    $/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545 <kbd_intr>:$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	55                   	push   %ebp$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	89 e5                	mov    %esp,%ebp$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	e8 b9 01 00 00       	call   f0100709 <__x86.get_pc_thunk.ax>$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	05 d0 fa 07 00       	add    $0x7fad0,%eax$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	8d 80 b5 01 f8 ff    	lea    -0x7fe4b(%eax),%eax$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	e8 2a fc ff ff       	call   f010018a <cons_intr>$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	c9                   	leave  $/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	c3                   	ret    $/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562 <cons_getc>:$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	55                   	push   %ebp$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	89 e5                	mov    %esp,%ebp$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	53                   	push   %ebx$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100569	obj/kern/kernel.asm	/^f0100569:	e8 f9 fb ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f010056e	obj/kern/kernel.asm	/^f010056e:	81 c3 b2 fa 07 00    	add    $0x7fab2,%ebx$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	e8 a4 ff ff ff       	call   f010051d <serial_intr>$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	e8 c7 ff ff ff       	call   f0100545 <kbd_intr>$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	8b 93 e0 22 00 00    	mov    0x22e0(%ebx),%edx$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100589	obj/kern/kernel.asm	/^f0100589:	3b 93 e4 22 00 00    	cmp    0x22e4(%ebx),%edx$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	74 19                	je     f01005aa <cons_getc+0x48>$/;"	l
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
f0100591	obj/kern/kernel.asm	/^f0100591:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	89 8b e0 22 00 00    	mov    %ecx,0x22e0(%ebx)$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	0f b6 84 13 e0 20 00 	movzbl 0x20e0(%ebx,%edx,1),%eax$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	00 $/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	74 06                	je     f01005b0 <cons_getc+0x4e>$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	83 c4 04             	add    $0x4,%esp$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	5b                   	pop    %ebx$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	5d                   	pop    %ebp$/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	c3                   	ret    $/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	c7 83 e0 22 00 00 00 	movl   $0x0,0x22e0(%ebx)$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	00 00 00 $/;"	l
f01005ba	obj/kern/kernel.asm	/^f01005ba:	eb ee                	jmp    f01005aa <cons_getc+0x48>$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc <cons_init>:$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	55                   	push   %ebp$/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	89 e5                	mov    %esp,%ebp$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	57                   	push   %edi$/;"	l
f01005c0	obj/kern/kernel.asm	/^f01005c0:	56                   	push   %esi$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	53                   	push   %ebx$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	e8 9d fb ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	81 c3 56 fa 07 00    	add    $0x7fa56,%ebx$/;"	l
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
f01005d0	obj/kern/kernel.asm	/^f01005d0:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	5a a5 $/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01005eb	obj/kern/kernel.asm	/^f01005eb:	0f 84 bc 00 00 00    	je     f01006ad <cons_init+0xf1>$/;"	l
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
f01005f1	obj/kern/kernel.asm	/^f01005f1:	c7 83 f0 22 00 00 b4 	movl   $0x3b4,0x22f0(%ebx)$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	03 00 00 $/;"	l
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
f01005fb	obj/kern/kernel.asm	/^f01005fb:	c7 45 e4 00 00 0b f0 	movl   $0xf00b0000,-0x1c(%ebp)$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	8b bb f0 22 00 00    	mov    0x22f0(%ebx),%edi$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010060d	obj/kern/kernel.asm	/^f010060d:	89 fa                	mov    %edi,%edx$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	ee                   	out    %al,(%dx)$/;"	l
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
f0100610	obj/kern/kernel.asm	/^f0100610:	8d 4f 01             	lea    0x1(%edi),%ecx$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	89 ca                	mov    %ecx,%edx$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	ec                   	in     (%dx),%al$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	0f b6 f0             	movzbl %al,%esi$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	89 fa                	mov    %edi,%edx$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	ee                   	out    %al,(%dx)$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	89 ca                	mov    %ecx,%edx$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	ec                   	in     (%dx),%al$/;"	l
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
f0100627	obj/kern/kernel.asm	/^f0100627:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	89 bb ec 22 00 00    	mov    %edi,0x22ec(%ebx)$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	09 c6                	or     %eax,%esi$/;"	l
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
f0100635	obj/kern/kernel.asm	/^f0100635:	66 89 b3 e8 22 00 00 	mov    %si,0x22e8(%ebx)$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	89 c8                	mov    %ecx,%eax$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	ee                   	out    %al,(%dx)$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	bf fb 03 00 00       	mov    $0x3fb,%edi$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	89 fa                	mov    %edi,%edx$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	ee                   	out    %al,(%dx)$/;"	l
f0100656	obj/kern/kernel.asm	/^f0100656:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f010065b	obj/kern/kernel.asm	/^f010065b:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	ee                   	out    %al,(%dx)$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	be f9 03 00 00       	mov    $0x3f9,%esi$/;"	l
f0100666	obj/kern/kernel.asm	/^f0100666:	89 c8                	mov    %ecx,%eax$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	89 f2                	mov    %esi,%edx$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	ee                   	out    %al,(%dx)$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	89 fa                	mov    %edi,%edx$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	ee                   	out    %al,(%dx)$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f0100678	obj/kern/kernel.asm	/^f0100678:	89 c8                	mov    %ecx,%eax$/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	ee                   	out    %al,(%dx)$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100680	obj/kern/kernel.asm	/^f0100680:	89 f2                	mov    %esi,%edx$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	ee                   	out    %al,(%dx)$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	ec                   	in     (%dx),%al$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	89 c1                	mov    %eax,%ecx$/;"	l
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
f010068b	obj/kern/kernel.asm	/^f010068b:	3c ff                	cmp    $0xff,%al$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	0f 95 83 f4 22 00 00 	setne  0x22f4(%ebx)$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	ec                   	in     (%dx),%al$/;"	l
f010069a	obj/kern/kernel.asm	/^f010069a:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	ec                   	in     (%dx),%al$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	74 25                	je     f01006ca <cons_init+0x10e>$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	5b                   	pop    %ebx$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	5e                   	pop    %esi$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	5f                   	pop    %edi$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	5d                   	pop    %ebp$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	c3                   	ret    $/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
f01006b4	obj/kern/kernel.asm	/^f01006b4:	c7 83 f0 22 00 00 d4 	movl   $0x3d4,0x22f0(%ebx)$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	03 00 00 $/;"	l
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
f01006be	obj/kern/kernel.asm	/^f01006be:	c7 45 e4 00 80 0b f0 	movl   $0xf00b8000,-0x1c(%ebp)$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	e9 38 ff ff ff       	jmp    f0100602 <cons_init+0x46>$/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	8d 83 59 51 f8 ff    	lea    -0x7aea7(%ebx),%eax$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	50                   	push   %eax$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	e8 dc 32 00 00       	call   f01039b5 <cprintf>$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	eb c7                	jmp    f01006a5 <cons_init+0xe9>$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de <cputchar>:$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	55                   	push   %ebp$/;"	l
f01006df	obj/kern/kernel.asm	/^f01006df:	89 e5                	mov    %esp,%ebp$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006e4	obj/kern/kernel.asm	/^f01006e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	e8 1b fc ff ff       	call   f0100307 <cons_putc>$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	c9                   	leave  $/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	c3                   	ret    $/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee <getchar>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	55                   	push   %ebp$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	89 e5                	mov    %esp,%ebp$/;"	l
f01006f1	obj/kern/kernel.asm	/^f01006f1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	e8 69 fe ff ff       	call   f0100562 <cons_getc>$/;"	l
f01006f9	obj/kern/kernel.asm	/^f01006f9:	85 c0                	test   %eax,%eax$/;"	l
f01006fb	obj/kern/kernel.asm	/^f01006fb:	74 f7                	je     f01006f4 <getchar+0x6>$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	c9                   	leave  $/;"	l
f01006fe	obj/kern/kernel.asm	/^f01006fe:	c3                   	ret    $/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff <iscons>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	55                   	push   %ebp$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	89 e5                	mov    %esp,%ebp$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	5d                   	pop    %ebp$/;"	l
f0100708	obj/kern/kernel.asm	/^f0100708:	c3                   	ret    $/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709 <__x86.get_pc_thunk.ax>:$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	8b 04 24             	mov    (%esp),%eax$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	c3                   	ret    $/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d <mon_help>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	55                   	push   %ebp$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	56                   	push   %esi$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	53                   	push   %ebx$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	e8 50 fa ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	81 c3 09 f9 07 00    	add    $0x7f909,%ebx$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	8d 83 80 53 f8 ff    	lea    -0x7ac80(%ebx),%eax$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	50                   	push   %eax$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	8d 83 9e 53 f8 ff    	lea    -0x7ac62(%ebx),%eax$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	50                   	push   %eax$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	8d b3 a3 53 f8 ff    	lea    -0x7ac5d(%ebx),%esi$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	56                   	push   %esi$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	e8 7b 32 00 00       	call   f01039b5 <cprintf>$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010073d	obj/kern/kernel.asm	/^f010073d:	8d 83 0c 54 f8 ff    	lea    -0x7abf4(%ebx),%eax$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	50                   	push   %eax$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	8d 83 ac 53 f8 ff    	lea    -0x7ac54(%ebx),%eax$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	50                   	push   %eax$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	56                   	push   %esi$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	e8 64 32 00 00       	call   f01039b5 <cprintf>$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	5b                   	pop    %ebx$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	5e                   	pop    %esi$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	5d                   	pop    %ebp$/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c:	c3                   	ret    $/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d <mon_kerninfo>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	55                   	push   %ebp$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	57                   	push   %edi$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	56                   	push   %esi$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	53                   	push   %ebx$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	e8 fc f9 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	81 c3 b5 f8 07 00    	add    $0x7f8b5,%ebx$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	8d 83 b5 53 f8 ff    	lea    -0x7ac4b(%ebx),%eax$/;"	l
f0100777	obj/kern/kernel.asm	/^f0100777:	50                   	push   %eax$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	e8 38 32 00 00       	call   f01039b5 <cprintf>$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	ff b3 f8 ff ff ff    	pushl  -0x8(%ebx)$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	8d 83 34 54 f8 ff    	lea    -0x7abcc(%ebx),%eax$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	50                   	push   %eax$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	e8 23 32 00 00       	call   f01039b5 <cprintf>$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	c7 c7 0c 00 10 f0    	mov    $0xf010000c,%edi$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	8d 87 00 00 00 10    	lea    0x10000000(%edi),%eax$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	50                   	push   %eax$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	57                   	push   %edi$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	8d 83 5c 54 f8 ff    	lea    -0x7aba4(%ebx),%eax$/;"	l
f01007a9	obj/kern/kernel.asm	/^f01007a9:	50                   	push   %eax$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	e8 06 32 00 00       	call   f01039b5 <cprintf>$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	c7 c0 19 51 10 f0    	mov    $0xf0105119,%eax$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01007be	obj/kern/kernel.asm	/^f01007be:	52                   	push   %edx$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	50                   	push   %eax$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	8d 83 80 54 f8 ff    	lea    -0x7ab80(%ebx),%eax$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	50                   	push   %eax$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	e8 e9 31 00 00       	call   f01039b5 <cprintf>$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007cf	obj/kern/kernel.asm	/^f01007cf:	c7 c0 e0 20 18 f0    	mov    $0xf01820e0,%eax$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	52                   	push   %edx$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	50                   	push   %eax$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	8d 83 a4 54 f8 ff    	lea    -0x7ab5c(%ebx),%eax$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	50                   	push   %eax$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	e8 cc 31 00 00       	call   f01039b5 <cprintf>$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	c7 c6 e0 2f 18 f0    	mov    $0xf0182fe0,%esi$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	50                   	push   %eax$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	56                   	push   %esi$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	8d 83 c8 54 f8 ff    	lea    -0x7ab38(%ebx),%eax$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	50                   	push   %eax$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	e8 af 31 00 00       	call   f01039b5 <cprintf>$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	81 c6 ff 03 00 00    	add    $0x3ff,%esi$/;"	l
f010080f	obj/kern/kernel.asm	/^f010080f:	29 fe                	sub    %edi,%esi$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	c1 fe 0a             	sar    $0xa,%esi$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	56                   	push   %esi$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	8d 83 ec 54 f8 ff    	lea    -0x7ab14(%ebx),%eax$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	50                   	push   %eax$/;"	l
f010081c	obj/kern/kernel.asm	/^f010081c:	e8 94 31 00 00       	call   f01039b5 <cprintf>$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100826	obj/kern/kernel.asm	/^f0100826:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	5b                   	pop    %ebx$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	5e                   	pop    %esi$/;"	l
f010082b	obj/kern/kernel.asm	/^f010082b:	5f                   	pop    %edi$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	5d                   	pop    %ebp$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	c3                   	ret    $/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e <mon_backtrace>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	55                   	push   %ebp$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	5d                   	pop    %ebp$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	c3                   	ret    $/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838 <monitor>:$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	55                   	push   %ebp$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	89 e5                	mov    %esp,%ebp$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	57                   	push   %edi$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	56                   	push   %esi$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	53                   	push   %ebx$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	83 ec 68             	sub    $0x68,%esp$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	e8 21 f9 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	81 c3 da f7 07 00    	add    $0x7f7da,%ebx$/;"	l
f010084c	obj/kern/kernel.asm	/^f010084c:	8d 83 18 55 f8 ff    	lea    -0x7aae8(%ebx),%eax$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	50                   	push   %eax$/;"	l
f0100853	obj/kern/kernel.asm	/^f0100853:	e8 5d 31 00 00       	call   f01039b5 <cprintf>$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	8d 83 3c 55 f8 ff    	lea    -0x7aac4(%ebx),%eax$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	e8 4f 31 00 00       	call   f01039b5 <cprintf>$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	74 0e                	je     f010087d <monitor+0x45>$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	e8 60 35 00 00       	call   f0103dda <print_trapframe>$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	8d bb d2 53 f8 ff    	lea    -0x7ac2e(%ebx),%edi$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	eb 4a                	jmp    f01008cf <monitor+0x97>$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888:	0f be c0             	movsbl %al,%eax$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	50                   	push   %eax$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	57                   	push   %edi$/;"	l
f010088d	obj/kern/kernel.asm	/^f010088d:	e8 0b 44 00 00       	call   f0104c9d <strchr>$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	85 c0                	test   %eax,%eax$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	74 08                	je     f01008a1 <monitor+0x69>$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	c6 06 00             	movb   $0x0,(%esi)$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	eb 79                	jmp    f010091a <monitor+0xe2>$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	80 3e 00             	cmpb   $0x0,(%esi)$/;"	l
f01008a4	obj/kern/kernel.asm	/^f01008a4:	74 7f                	je     f0100925 <monitor+0xed>$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	83 7d a4 0f          	cmpl   $0xf,-0x5c(%ebp)$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	74 0f                	je     f01008bb <monitor+0x83>$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	89 4d a4             	mov    %ecx,-0x5c(%ebp)$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	89 74 85 a8          	mov    %esi,-0x58(%ebp,%eax,4)$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	eb 44                	jmp    f01008ff <monitor+0xc7>$/;"	l
f01008bb	obj/kern/kernel.asm	/^f01008bb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	6a 10                	push   $0x10$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	8d 83 d7 53 f8 ff    	lea    -0x7ac29(%ebx),%eax$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	50                   	push   %eax$/;"	l
f01008c7	obj/kern/kernel.asm	/^f01008c7:	e8 e9 30 00 00       	call   f01039b5 <cprintf>$/;"	l
f01008cc	obj/kern/kernel.asm	/^f01008cc:	83 c4 10             	add    $0x10,%esp$/;"	l
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
f01008cf	obj/kern/kernel.asm	/^f01008cf:	8d 83 ce 53 f8 ff    	lea    -0x7ac32(%ebx),%eax$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	e8 82 41 00 00       	call   f0104a65 <readline>$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	89 c6                	mov    %eax,%esi$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	85 c0                	test   %eax,%eax$/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	74 ec                	je     f01008d8 <monitor+0xa0>$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
f01008f3	obj/kern/kernel.asm	/^f01008f3:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	eb 1e                	jmp    f010091a <monitor+0xe2>$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	83 c6 01             	add    $0x1,%esi$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	84 c0                	test   %al,%al$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	74 14                	je     f010091a <monitor+0xe2>$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	0f be c0             	movsbl %al,%eax$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	50                   	push   %eax$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	57                   	push   %edi$/;"	l
f010090e	obj/kern/kernel.asm	/^f010090e:	e8 8a 43 00 00       	call   f0104c9d <strchr>$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	85 c0                	test   %eax,%eax$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	74 e2                	je     f01008fc <monitor+0xc4>$/;"	l
f010091a	obj/kern/kernel.asm	/^f010091a:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	84 c0                	test   %al,%al$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	0f 85 60 ff ff ff    	jne    f0100885 <monitor+0x4d>$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	c7 44 85 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%eax,4)$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	00 $/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	85 c0                	test   %eax,%eax$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	74 9b                	je     f01008cf <monitor+0x97>$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	8d 83 9e 53 f8 ff    	lea    -0x7ac62(%ebx),%eax$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	50                   	push   %eax$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	e8 f9 42 00 00       	call   f0104c3f <strcmp>$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	85 c0                	test   %eax,%eax$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	74 38                	je     f0100985 <monitor+0x14d>$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	8d 83 ac 53 f8 ff    	lea    -0x7ac54(%ebx),%eax$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	50                   	push   %eax$/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	e8 e0 42 00 00       	call   f0104c3f <strcmp>$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	85 c0                	test   %eax,%eax$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	74 1a                	je     f0100980 <monitor+0x148>$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	8d 83 f4 53 f8 ff    	lea    -0x7ac0c(%ebx),%eax$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	50                   	push   %eax$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	e8 3d 30 00 00       	call   f01039b5 <cprintf>$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	83 c4 10             	add    $0x10,%esp$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	e9 4f ff ff ff       	jmp    f01008cf <monitor+0x97>$/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	52                   	push   %edx$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	ff 94 83 18 20 00 00 	call   *0x2018(%ebx,%eax,4)$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	85 c0                	test   %eax,%eax$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	0f 89 28 ff ff ff    	jns    f01008cf <monitor+0x97>$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	5b                   	pop    %ebx$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	5e                   	pop    %esi$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	5f                   	pop    %edi$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	5d                   	pop    %ebp$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	c3                   	ret    $/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af <nvram_read>:$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	55                   	push   %ebp$/;"	l
f01009b0	obj/kern/kernel.asm	/^f01009b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	57                   	push   %edi$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	56                   	push   %esi$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	53                   	push   %ebx$/;"	l
f01009b5	obj/kern/kernel.asm	/^f01009b5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01009b8	obj/kern/kernel.asm	/^f01009b8:	e8 aa f7 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	81 c3 63 f6 07 00    	add    $0x7f663,%ebx$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	89 c7                	mov    %eax,%edi$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	50                   	push   %eax$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	e8 63 2f 00 00       	call   f010392e <mc146818_read>$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	89 c6                	mov    %eax,%esi$/;"	l
f01009cd	obj/kern/kernel.asm	/^f01009cd:	83 c7 01             	add    $0x1,%edi$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	e8 56 2f 00 00       	call   f010392e <mc146818_read>$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	09 f0                	or     %esi,%eax$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	5b                   	pop    %ebx$/;"	l
f01009e1	obj/kern/kernel.asm	/^f01009e1:	5e                   	pop    %esi$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	5f                   	pop    %edi$/;"	l
f01009e3	obj/kern/kernel.asm	/^f01009e3:	5d                   	pop    %ebp$/;"	l
f01009e4	obj/kern/kernel.asm	/^f01009e4:	c3                   	ret    $/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5 <check_va2pa>:$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	55                   	push   %ebp$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	56                   	push   %esi$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	53                   	push   %ebx$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	e8 ef 27 00 00       	call   f01031de <__x86.get_pc_thunk.cx>$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	81 c1 31 f6 07 00    	add    $0x7f631,%ecx$/;"	l
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
f01009f5	obj/kern/kernel.asm	/^f01009f5:	89 d3                	mov    %edx,%ebx$/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f01009fa	obj/kern/kernel.asm	/^f01009fa:	8b 04 98             	mov    (%eax,%ebx,4),%eax$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	a8 01                	test   $0x1,%al$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	74 5a                	je     f0100a5b <check_va2pa+0x76>$/;"	l
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
f0100a01	obj/kern/kernel.asm	/^f0100a01:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	89 c6                	mov    %eax,%esi$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	c7 c3 e8 2f 18 f0    	mov    $0xf0182fe8,%ebx$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	3b 33                	cmp    (%ebx),%esi$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	73 2b                	jae    f0100a40 <check_va2pa+0x5b>$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	89 c2                	mov    %eax,%edx$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100a2a	obj/kern/kernel.asm	/^f0100a2a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100a2f	obj/kern/kernel.asm	/^f0100a2f:	85 d2                	test   %edx,%edx$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	5b                   	pop    %ebx$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	5e                   	pop    %esi$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	5d                   	pop    %ebp$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	c3                   	ret    $/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	50                   	push   %eax$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	8d 81 64 55 f8 ff    	lea    -0x7aa9c(%ecx),%eax$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	50                   	push   %eax$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	68 39 03 00 00       	push   $0x339$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	8d 81 49 5d f8 ff    	lea    -0x7a2b7(%ecx),%eax$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	50                   	push   %eax$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	e8 56 f6 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	eb d7                	jmp    f0100a39 <check_va2pa+0x54>$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62 <boot_alloc>:$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	55                   	push   %ebp$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	57                   	push   %edi$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	56                   	push   %esi$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	53                   	push   %ebx$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	e8 6e 27 00 00       	call   f01031de <__x86.get_pc_thunk.cx>$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	81 c1 b0 f5 07 00    	add    $0x7f5b0,%ecx$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	83 b9 f8 22 00 00 00 	cmpl   $0x0,0x22f8(%ecx)$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	74 44                	je     f0100ac3 <boot_alloc+0x61>$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	8b b1 f8 22 00 00    	mov    0x22f8(%ecx),%esi$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	8d 94 06 ff 0f 00 00 	lea    0xfff(%esi,%eax,1),%edx$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	76 43                	jbe    f0100add <boot_alloc+0x7b>$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	c7 c3 e8 2f 18 f0    	mov    $0xf0182fe8,%ebx$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	8d ba 00 00 00 10    	lea    0x10000000(%edx),%edi$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	72 46                	jb     f0100af5 <boot_alloc+0x93>$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	85 c0                	test   %eax,%eax$/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	74 06                	je     f0100ab9 <boot_alloc+0x57>$/;"	l
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP(nextfree + n, PGSIZE);$/;"	d
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	89 91 f8 22 00 00    	mov    %edx,0x22f8(%ecx)$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	89 f0                	mov    %esi,%eax$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	5b                   	pop    %ebx$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	5e                   	pop    %esi$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	5f                   	pop    %edi$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	5d                   	pop    %ebp$/;"	l
f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	c3                   	ret    $/;"	l
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	c7 c2 e0 2f 18 f0    	mov    $0xf0182fe0,%edx$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	89 91 f8 22 00 00    	mov    %edx,0x22f8(%ecx)$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	eb a2                	jmp    f0100a7f <boot_alloc+0x1d>$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	52                   	push   %edx$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	8d 81 88 55 f8 ff    	lea    -0x7aa78(%ecx),%eax$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	50                   	push   %eax$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	6a 71                	push   $0x71$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	8d 81 49 5d f8 ff    	lea    -0x7a2b7(%ecx),%eax$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	50                   	push   %eax$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	e8 bc f5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100af8	obj/kern/kernel.asm	/^f0100af8:	8d 81 55 5d f8 ff    	lea    -0x7a2ab(%ecx),%eax$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	50                   	push   %eax$/;"	l
f0100aff	obj/kern/kernel.asm	/^f0100aff:	6a 72                	push   $0x72$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	8d 81 49 5d f8 ff    	lea    -0x7a2b7(%ecx),%eax$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	50                   	push   %eax$/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100b0a	obj/kern/kernel.asm	/^f0100b0a:	e8 a2 f5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f <check_page_free_list>:$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	55                   	push   %ebp$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	57                   	push   %edi$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	56                   	push   %esi$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	53                   	push   %ebx$/;"	l
f0100b15	obj/kern/kernel.asm	/^f0100b15:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0100b18	obj/kern/kernel.asm	/^f0100b18:	e8 c9 26 00 00       	call   f01031e6 <__x86.get_pc_thunk.di>$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	81 c7 03 f5 07 00    	add    $0x7f503,%edi$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	89 7d c4             	mov    %edi,-0x3c(%ebp)$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	84 c0                	test   %al,%al$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	0f 85 dd 02 00 00    	jne    f0100e0b <check_page_free_list+0x2fc>$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100b31	obj/kern/kernel.asm	/^f0100b31:	83 b8 fc 22 00 00 00 	cmpl   $0x0,0x22fc(%eax)$/;"	l
f0100b38	obj/kern/kernel.asm	/^f0100b38:	74 0c                	je     f0100b46 <check_page_free_list+0x37>$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	c7 45 d4 00 04 00 00 	movl   $0x400,-0x2c(%ebp)$/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	e9 2f 03 00 00       	jmp    f0100e75 <check_page_free_list+0x366>$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	8d 83 ac 55 f8 ff    	lea    -0x7aa54(%ebx),%eax$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	50                   	push   %eax$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	68 75 02 00 00       	push   $0x275$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	50                   	push   %eax$/;"	l
f0100b5f	obj/kern/kernel.asm	/^f0100b5f:	e8 4d f5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	50                   	push   %eax$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	50                   	push   %eax$/;"	l
f0100b6f	obj/kern/kernel.asm	/^f0100b6f:	6a 56                	push   $0x56$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f0100b77	obj/kern/kernel.asm	/^f0100b77:	50                   	push   %eax$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	e8 34 f5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	8b 36                	mov    (%esi),%esi$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	85 f6                	test   %esi,%esi$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	74 40                	je     f0100bc3 <check_page_free_list+0xb4>$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	89 f0                	mov    %esi,%eax$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	2b 07                	sub    (%edi),%eax$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	89 c2                	mov    %eax,%edx$/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	73 e6                	jae    f0100b7d <check_page_free_list+0x6e>$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	89 c2                	mov    %eax,%edx$/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	3b 11                	cmp    (%ecx),%edx$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	73 c1                	jae    f0100b64 <check_page_free_list+0x55>$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	68 80 00 00 00       	push   $0x80$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	68 97 00 00 00       	push   $0x97$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	50                   	push   %eax$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	e8 1c 41 00 00       	call   f0104cda <memset>$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	eb ba                	jmp    f0100b7d <check_page_free_list+0x6e>$/;"	l
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100bc8	obj/kern/kernel.asm	/^f0100bc8:	e8 95 fe ff ff       	call   f0100a62 <boot_alloc>$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	8b 97 fc 22 00 00    	mov    0x22fc(%edi),%edx$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	8b 08                	mov    (%eax),%ecx$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	c7 c0 e8 2f 18 f0    	mov    $0xf0182fe8,%eax$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	8b 00                	mov    (%eax),%eax$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	8d 1c c1             	lea    (%ecx,%eax,8),%ebx$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	e9 08 01 00 00       	jmp    f0100d07 <check_page_free_list+0x1f8>$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	8d 83 7e 5d f8 ff    	lea    -0x7a282(%ebx),%eax$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	50                   	push   %eax$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	50                   	push   %eax$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	68 8f 02 00 00       	push   $0x28f$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	50                   	push   %eax$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	e8 90 f4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	8d 83 9f 5d f8 ff    	lea    -0x7a261(%ebx),%eax$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	50                   	push   %eax$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0100c31	obj/kern/kernel.asm	/^f0100c31:	50                   	push   %eax$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	68 90 02 00 00       	push   $0x290$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	50                   	push   %eax$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	e8 6e f4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	8d 83 d0 55 f8 ff    	lea    -0x7aa30(%ebx),%eax$/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	50                   	push   %eax$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	50                   	push   %eax$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	68 91 02 00 00       	push   $0x291$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	50                   	push   %eax$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	e8 4c f4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100c68	obj/kern/kernel.asm	/^f0100c68:	8d 83 b3 5d f8 ff    	lea    -0x7a24d(%ebx),%eax$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	50                   	push   %eax$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	50                   	push   %eax$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	68 94 02 00 00       	push   $0x294$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	50                   	push   %eax$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	e8 2a f4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	8d 83 c4 5d f8 ff    	lea    -0x7a23c(%ebx),%eax$/;"	l
f0100c90	obj/kern/kernel.asm	/^f0100c90:	50                   	push   %eax$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	50                   	push   %eax$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	68 95 02 00 00       	push   $0x295$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	50                   	push   %eax$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	e8 08 f4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	8d 83 04 56 f8 ff    	lea    -0x7a9fc(%ebx),%eax$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	50                   	push   %eax$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	50                   	push   %eax$/;"	l
f0100cba	obj/kern/kernel.asm	/^f0100cba:	68 96 02 00 00       	push   $0x296$/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	50                   	push   %eax$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	e8 e6 f3 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	8d 83 dd 5d f8 ff    	lea    -0x7a223(%ebx),%eax$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	50                   	push   %eax$/;"	l
f0100cd5	obj/kern/kernel.asm	/^f0100cd5:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	50                   	push   %eax$/;"	l
f0100cdc	obj/kern/kernel.asm	/^f0100cdc:	68 97 02 00 00       	push   $0x297$/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	50                   	push   %eax$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	e8 c4 f3 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	89 c6                	mov    %eax,%esi$/;"	l
f0100cef	obj/kern/kernel.asm	/^f0100cef:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0100cf2	obj/kern/kernel.asm	/^f0100cf2:	39 75 cc             	cmp    %esi,-0x34(%ebp)$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	76 70                	jbe    f0100d67 <check_page_free_list+0x258>$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	39 45 c8             	cmp    %eax,-0x38(%ebp)$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	77 7f                	ja     f0100d80 <check_page_free_list+0x271>$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	8b 12                	mov    (%edx),%edx$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	85 d2                	test   %edx,%edx$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	0f 84 93 00 00 00    	je     f0100da2 <check_page_free_list+0x293>$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	0f 87 e8 fe ff ff    	ja     f0100bff <check_page_free_list+0xf0>$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	39 d3                	cmp    %edx,%ebx$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	0f 86 02 ff ff ff    	jbe    f0100c21 <check_page_free_list+0x112>$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	89 d0                	mov    %edx,%eax$/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	a8 07                	test   $0x7,%al$/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	0f 85 17 ff ff ff    	jne    f0100c43 <check_page_free_list+0x134>$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	85 c0                	test   %eax,%eax$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	0f 84 2b ff ff ff    	je     f0100c65 <check_page_free_list+0x156>$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	0f 84 42 ff ff ff    	je     f0100c87 <check_page_free_list+0x178>$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	0f 84 59 ff ff ff    	je     f0100ca9 <check_page_free_list+0x19a>$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	0f 84 70 ff ff ff    	je     f0100ccb <check_page_free_list+0x1bc>$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	77 8b                	ja     f0100ced <check_page_free_list+0x1de>$/;"	l
f0100d62	obj/kern/kernel.asm	/^f0100d62:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	eb 9e                	jmp    f0100d05 <check_page_free_list+0x1f6>$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	50                   	push   %eax$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	50                   	push   %eax$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	6a 56                	push   $0x56$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	50                   	push   %eax$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	e8 31 f3 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	8d 83 28 56 f8 ff    	lea    -0x7a9d8(%ebx),%eax$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	50                   	push   %eax$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	50                   	push   %eax$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	68 98 02 00 00       	push   $0x298$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	50                   	push   %eax$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	e8 0f f3 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	85 ff                	test   %edi,%edi$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	7e 1e                	jle    f0100dc7 <check_page_free_list+0x2b8>$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	85 f6                	test   %esi,%esi$/;"	l
f0100dab	obj/kern/kernel.asm	/^f0100dab:	7e 3c                	jle    f0100de9 <check_page_free_list+0x2da>$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	8d 83 70 56 f8 ff    	lea    -0x7a990(%ebx),%eax$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	50                   	push   %eax$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	e8 f6 2b 00 00       	call   f01039b5 <cprintf>$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	5b                   	pop    %ebx$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	5e                   	pop    %esi$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	5f                   	pop    %edi$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	5d                   	pop    %ebp$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	c3                   	ret    $/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	8d 83 f7 5d f8 ff    	lea    -0x7a209(%ebx),%eax$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	50                   	push   %eax$/;"	l
f0100dd1	obj/kern/kernel.asm	/^f0100dd1:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	50                   	push   %eax$/;"	l
f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	68 a0 02 00 00       	push   $0x2a0$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	50                   	push   %eax$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	e8 c8 f2 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	8d 83 09 5e f8 ff    	lea    -0x7a1f7(%ebx),%eax$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	50                   	push   %eax$/;"	l
f0100df3	obj/kern/kernel.asm	/^f0100df3:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	50                   	push   %eax$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	68 a1 02 00 00       	push   $0x2a1$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	50                   	push   %eax$/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	e8 a6 f2 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	8b 80 fc 22 00 00    	mov    0x22fc(%eax),%eax$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	85 c0                	test   %eax,%eax$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	0f 84 2a fd ff ff    	je     f0100b46 <check_page_free_list+0x37>$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	c7 c3 f0 2f 18 f0    	mov    $0xf0182ff0,%ebx$/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	89 c2                	mov    %eax,%edx$/;"	l
f0100e33	obj/kern/kernel.asm	/^f0100e33:	2b 13                	sub    (%ebx),%edx$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	0f 95 c2             	setne  %dl$/;"	l
f0100e3e	obj/kern/kernel.asm	/^f0100e3e:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	8b 00                	mov    (%eax),%eax$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	85 c0                	test   %eax,%eax$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	75 e0                	jne    f0100e31 <check_page_free_list+0x322>$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	89 10                	mov    %edx,(%eax)$/;"	l
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
f0100e62	obj/kern/kernel.asm	/^f0100e62:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	89 87 fc 22 00 00    	mov    %eax,0x22fc(%edi)$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	8b b0 fc 22 00 00    	mov    0x22fc(%eax),%esi$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	c7 c7 f0 2f 18 f0    	mov    $0xf0182ff0,%edi$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	c7 c0 e8 2f 18 f0    	mov    $0xf0182fe8,%eax$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	e9 ed fc ff ff       	jmp    f0100b7f <check_page_free_list+0x70>$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92 <page_init>:$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	55                   	push   %ebp$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	57                   	push   %edi$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	56                   	push   %esi$/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	53                   	push   %ebx$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	e8 46 23 00 00       	call   f01031e6 <__x86.get_pc_thunk.di>$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	81 c7 80 f1 07 00    	add    $0x7f180,%edi$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	89 fe                	mov    %edi,%esi$/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	8b 00                	mov    (%eax),%eax$/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	8b bf 00 23 00 00    	mov    0x2300(%edi),%edi$/;"	l
f0100ebf	obj/kern/kernel.asm	/^f0100ebf:	8b 9e fc 22 00 00    	mov    0x22fc(%esi),%ebx$/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100eca	obj/kern/kernel.asm	/^f0100eca:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	c7 c6 f0 2f 18 f0    	mov    $0xf0182ff0,%esi$/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	eb 1f                	jmp    f0100ef6 <page_init+0x64>$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	89 d1                	mov    %edx,%ecx$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	03 0e                	add    (%esi),%ecx$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	83 c0 01             	add    $0x1,%eax$/;"	l
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
f0100eed	obj/kern/kernel.asm	/^f0100eed:	89 d3                	mov    %edx,%ebx$/;"	l
f0100eef	obj/kern/kernel.asm	/^f0100eef:	03 1e                	add    (%esi),%ebx$/;"	l
f0100ef1	obj/kern/kernel.asm	/^f0100ef1:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6:	39 c7                	cmp    %eax,%edi$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	77 dd                	ja     f0100ed7 <page_init+0x45>$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	84 d2                	test   %dl,%dl$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	75 4e                	jne    f0100f4c <page_init+0xba>$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	8b 10                	mov    (%eax),%edx$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	8d 82 04 05 00 00    	lea    0x504(%edx),%eax$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	81 c2 04 08 00 00    	add    $0x804,%edx$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	66 c7 00 01 00       	movw   $0x1,(%eax)$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	83 c0 08             	add    $0x8,%eax$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	39 d0                	cmp    %edx,%eax$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	75 f4                	jne    f0100f15 <page_init+0x83>$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	e8 37 fb ff ff       	call   f0100a62 <boot_alloc>$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100f30	obj/kern/kernel.asm	/^f0100f30:	76 25                	jbe    f0100f57 <page_init+0xc5>$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	c7 c2 f0 2f 18 f0    	mov    $0xf0182ff0,%edx$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	ba 00 01 00 00       	mov    $0x100,%edx$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	eb 31                	jmp    f0100f7d <page_init+0xeb>$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	89 98 fc 22 00 00    	mov    %ebx,0x22fc(%eax)$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	eb a7                	jmp    f0100efe <page_init+0x6c>$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	50                   	push   %eax$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	50                   	push   %eax$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	68 31 01 00 00       	push   $0x131$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	50                   	push   %eax$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	e8 3e f1 ff ff       	call   f01000b1 <_panic>$/;"	l
f0100f73	obj/kern/kernel.asm	/^f0100f73:	66 c7 44 d1 04 01 00 	movw   $0x1,0x4(%ecx,%edx,8)$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	39 d0                	cmp    %edx,%eax$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	77 f2                	ja     f0100f73 <page_init+0xe1>$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	8b 9e fc 22 00 00    	mov    0x22fc(%esi),%ebx$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	c7 c7 e8 2f 18 f0    	mov    $0xf0182fe8,%edi$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	c7 c6 f0 2f 18 f0    	mov    $0xf0182ff0,%esi$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	eb 1b                	jmp    f0100fbf <page_init+0x12d>$/;"	l
f0100fa4	obj/kern/kernel.asm	/^f0100fa4:	89 d1                	mov    %edx,%ecx$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	03 0e                	add    (%esi),%ecx$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0100fae	obj/kern/kernel.asm	/^f0100fae:	89 19                	mov    %ebx,(%ecx)$/;"	l
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	89 d3                	mov    %edx,%ebx$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	03 1e                	add    (%esi),%ebx$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	83 c2 08             	add    $0x8,%edx$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	39 07                	cmp    %eax,(%edi)$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	77 e1                	ja     f0100fa4 <page_init+0x112>$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	84 c9                	test   %cl,%cl$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	75 08                	jne    f0100fcf <page_init+0x13d>$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	5b                   	pop    %ebx$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	5e                   	pop    %esi$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	5f                   	pop    %edi$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	5d                   	pop    %ebp$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	c3                   	ret    $/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	89 98 fc 22 00 00    	mov    %ebx,0x22fc(%eax)$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	eb ed                	jmp    f0100fc7 <page_init+0x135>$/;"	l
f0100fda	obj/kern/kernel.asm	/^f0100fda <page_alloc>:$/;"	l
f0100fda	obj/kern/kernel.asm	/^f0100fda:	55                   	push   %ebp$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	56                   	push   %esi$/;"	l
f0100fde	obj/kern/kernel.asm	/^f0100fde:	53                   	push   %ebx$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	e8 83 f1 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	81 c3 3c f0 07 00    	add    $0x7f03c,%ebx$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	8b b3 fc 22 00 00    	mov    0x22fc(%ebx),%esi$/;"	l
f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	85 f6                	test   %esi,%esi$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	74 14                	je     f0101008 <page_alloc+0x2e>$/;"	l
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link;$/;"	d
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	8b 06                	mov    (%esi),%eax$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	89 83 fc 22 00 00    	mov    %eax,0x22fc(%ebx)$/;"	l
f0100ffc	obj/kern/kernel.asm	/^f0100ffc:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	75 09                	jne    f0101011 <page_alloc+0x37>$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	89 f0                	mov    %esi,%eax$/;"	l
f010100a	obj/kern/kernel.asm	/^f010100a:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	5b                   	pop    %ebx$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	5e                   	pop    %esi$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	5d                   	pop    %ebp$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	c3                   	ret    $/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	89 f2                	mov    %esi,%edx$/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	2b 10                	sub    (%eax),%edx$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	89 d0                	mov    %edx,%eax$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	89 c1                	mov    %eax,%ecx$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	c7 c2 e8 2f 18 f0    	mov    $0xf0182fe8,%edx$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	73 1a                	jae    f010104c <page_alloc+0x72>$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	68 00 10 00 00       	push   $0x1000$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	6a 00                	push   $0x0$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	50                   	push   %eax$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	e8 93 3c 00 00       	call   f0104cda <memset>$/;"	l
f0101047	obj/kern/kernel.asm	/^f0101047:	83 c4 10             	add    $0x10,%esp$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	eb bc                	jmp    f0101008 <page_alloc+0x2e>$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	50                   	push   %eax$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	50                   	push   %eax$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	6a 56                	push   $0x56$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	50                   	push   %eax$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	e8 4f f0 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062 <page_free>:$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	55                   	push   %ebp$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	89 e5                	mov    %esp,%ebp$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	53                   	push   %ebx$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	e8 f9 f0 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	81 c3 b2 ef 07 00    	add    $0x7efb2,%ebx$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101077	obj/kern/kernel.asm	/^f0101077:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	75 18                	jne    f0101096 <page_free+0x34>$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	75 13                	jne    f0101096 <page_free+0x34>$/;"	l
f0101083	obj/kern/kernel.asm	/^f0101083:	8b 8b fc 22 00 00    	mov    0x22fc(%ebx),%ecx$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	89 08                	mov    %ecx,(%eax)$/;"	l
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
f010108b	obj/kern/kernel.asm	/^f010108b:	89 83 fc 22 00 00    	mov    %eax,0x22fc(%ebx)$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	c9                   	leave  $/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	c3                   	ret    $/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	8d 83 94 56 f8 ff    	lea    -0x7a96c(%ebx),%eax$/;"	l
f010109f	obj/kern/kernel.asm	/^f010109f:	50                   	push   %eax$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	68 65 01 00 00       	push   $0x165$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01010ab	obj/kern/kernel.asm	/^f01010ab:	50                   	push   %eax$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	e8 00 f0 ff ff       	call   f01000b1 <_panic>$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1 <page_decref>:$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	55                   	push   %ebp$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	89 e5                	mov    %esp,%ebp$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01010b7	obj/kern/kernel.asm	/^f01010b7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	66 85 c0             	test   %ax,%ax$/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	74 02                	je     f01010cc <page_decref+0x1b>$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	c9                   	leave  $/;"	l
f01010cb	obj/kern/kernel.asm	/^f01010cb:	c3                   	ret    $/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	52                   	push   %edx$/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0:	e8 8d ff ff ff       	call   f0101062 <page_free>$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	eb f0                	jmp    f01010ca <page_decref+0x19>$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da <pgdir_walk>:$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	55                   	push   %ebp$/;"	l
f01010db	obj/kern/kernel.asm	/^f01010db:	89 e5                	mov    %esp,%ebp$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	57                   	push   %edi$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	56                   	push   %esi$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	53                   	push   %ebx$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	e8 7f f0 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	81 c3 38 ef 07 00    	add    $0x7ef38,%ebx$/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01010f1	obj/kern/kernel.asm	/^f01010f1:	c1 ee 16             	shr    $0x16,%esi$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	c1 e6 02             	shl    $0x2,%esi$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f01010fa	obj/kern/kernel.asm	/^f01010fa:	8b 16                	mov    (%esi),%edx$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	74 49                	je     f010114a <pgdir_walk+0x70>$/;"	l
pt	obj/kern/kernel.asm	/^		pt = KADDR(PTE_ADDR(*pde)); \/\/ but what we need is virtual$/;"	d
f0101101	obj/kern/kernel.asm	/^f0101101:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	89 d0                	mov    %edx,%eax$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	c7 c1 e8 2f 18 f0    	mov    $0xf0182fe8,%ecx$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	39 01                	cmp    %eax,(%ecx)$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	76 1b                	jbe    f0101131 <pgdir_walk+0x57>$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	25 fc 0f 00 00       	and    $0xffc,%eax$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	01 d0                	add    %edx,%eax$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	5b                   	pop    %ebx$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	5e                   	pop    %esi$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	5f                   	pop    %edi$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	5d                   	pop    %ebp$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	c3                   	ret    $/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	52                   	push   %edx$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	50                   	push   %eax$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	68 95 01 00 00       	push   $0x195$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	50                   	push   %eax$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	e8 67 ef ff ff       	call   f01000b1 <_panic>$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	74 7b                	je     f01011cb <pgdir_walk+0xf1>$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	6a 01                	push   $0x1$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	e8 80 fe ff ff       	call   f0100fda <page_alloc>$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	85 c0                	test   %eax,%eax$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	74 74                	je     f01011d5 <pgdir_walk+0xfb>$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	c7 c2 f0 2f 18 f0    	mov    $0xf0182ff0,%edx$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	89 c1                	mov    %eax,%ecx$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	2b 0a                	sub    (%edx),%ecx$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	89 cf                	mov    %ecx,%edi$/;"	l
f0101173	obj/kern/kernel.asm	/^f0101173:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	c7 c2 e8 2f 18 f0    	mov    $0xf0182fe8,%edx$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	3b 3a                	cmp    (%edx),%edi$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	73 1c                	jae    f010119c <pgdir_walk+0xc2>$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	8d b9 00 00 00 f0    	lea    -0x10000000(%ecx),%edi$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	89 fa                	mov    %edi,%edx$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	81 ff ff ff ff ef    	cmp    $0xefffffff,%edi$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	76 1d                	jbe    f01011b2 <pgdir_walk+0xd8>$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	83 c9 07             	or     $0x7,%ecx$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	89 0e                	mov    %ecx,(%esi)$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	eb 80                	jmp    f010111c <pgdir_walk+0x42>$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	51                   	push   %ecx$/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	50                   	push   %eax$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	6a 56                	push   $0x56$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	50                   	push   %eax$/;"	l
f01011ad	obj/kern/kernel.asm	/^f01011ad:	e8 ff ee ff ff       	call   f01000b1 <_panic>$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	57                   	push   %edi$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	50                   	push   %eax$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	68 9f 01 00 00       	push   $0x19f$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	50                   	push   %eax$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	e8 e6 ee ff ff       	call   f01000b1 <_panic>$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	e9 54 ff ff ff       	jmp    f0101129 <pgdir_walk+0x4f>$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	e9 4a ff ff ff       	jmp    f0101129 <pgdir_walk+0x4f>$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df <boot_map_region>:$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	55                   	push   %ebp$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	89 e5                	mov    %esp,%ebp$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	57                   	push   %edi$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	56                   	push   %esi$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	53                   	push   %ebx$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	e8 f9 1f 00 00       	call   f01031e6 <__x86.get_pc_thunk.di>$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	81 c7 33 ee 07 00    	add    $0x7ee33,%edi$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	89 7d d8             	mov    %edi,-0x28(%ebp)$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
size	obj/kern/kernel.asm	/^	size =  ROUNDUP(size, PGSIZE);$/;"	d
f01011fc	obj/kern/kernel.asm	/^f01011fc:	81 c1 ff 0f 00 00    	add    $0xfff,%ecx$/;"	l
npages	obj/kern/kernel.asm	/^	npages = size\/PGSIZE;$/;"	d
f0101202	obj/kern/kernel.asm	/^f0101202:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	89 c3                	mov    %eax,%ebx$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(pgdir, (const void *)(va + i*PGSIZE), true);$/;"	d
f010120f	obj/kern/kernel.asm	/^f010120f:	89 d7                	mov    %edx,%edi$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	29 c7                	sub    %eax,%edi$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101216	obj/kern/kernel.asm	/^f0101216:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	7d 4e                	jge    f010126f <boot_map_region+0x90>$/;"	l
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(pgdir, (const void *)(va + i*PGSIZE), true);$/;"	d
f0101221	obj/kern/kernel.asm	/^f0101221:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	6a 01                	push   $0x1$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	8d 04 1f             	lea    (%edi,%ebx,1),%eax$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	50                   	push   %eax$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	e8 a8 fe ff ff       	call   f01010da <pgdir_walk>$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	85 c0                	test   %eax,%eax$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	74 18                	je     f0101251 <boot_map_region+0x72>$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	89 da                	mov    %ebx,%edx$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	0b 55 dc             	or     -0x24(%ebp),%edx$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	89 10                	mov    %edx,(%eax)$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	eb cb                	jmp    f010121c <boot_map_region+0x3d>$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0101257	obj/kern/kernel.asm	/^f0101257:	8d 83 1a 5e f8 ff    	lea    -0x7a1e6(%ebx),%eax$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	50                   	push   %eax$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	68 bd 01 00 00       	push   $0x1bd$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	50                   	push   %eax$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	e8 42 ee ff ff       	call   f01000b1 <_panic>$/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101272	obj/kern/kernel.asm	/^f0101272:	5b                   	pop    %ebx$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	5e                   	pop    %esi$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	5f                   	pop    %edi$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	5d                   	pop    %ebp$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	c3                   	ret    $/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277 <page_lookup>:$/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	55                   	push   %ebp$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	89 e5                	mov    %esp,%ebp$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	56                   	push   %esi$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	53                   	push   %ebx$/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	e8 e6 ee ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	81 c3 9f ed 07 00    	add    $0x7ed9f,%ebx$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010128a	obj/kern/kernel.asm	/^f010128a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	6a 00                	push   $0x0$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	e8 40 fe ff ff       	call   f01010da <pgdir_walk>$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	85 c0                	test   %eax,%eax$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	74 44                	je     f01012e5 <page_lookup+0x6e>$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	74 46                	je     f01012ec <page_lookup+0x75>$/;"	l
f01012a6	obj/kern/kernel.asm	/^f01012a6:	85 f6                	test   %esi,%esi$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	74 02                	je     f01012ac <page_lookup+0x35>$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	89 06                	mov    %eax,(%esi)$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	8b 00                	mov    (%eax),%eax$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	c7 c2 e8 2f 18 f0    	mov    $0xf0182fe8,%edx$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	39 02                	cmp    %eax,(%edx)$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	76 12                	jbe    f01012cd <page_lookup+0x56>$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	c7 c2 f0 2f 18 f0    	mov    $0xf0182ff0,%edx$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	8b 12                	mov    (%edx),%edx$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	5b                   	pop    %ebx$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	5e                   	pop    %esi$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	5d                   	pop    %ebp$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	c3                   	ret    $/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	8d 83 bc 56 f8 ff    	lea    -0x7a944(%ebx),%eax$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	50                   	push   %eax$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	6a 4f                	push   $0x4f$/;"	l
f01012d9	obj/kern/kernel.asm	/^f01012d9:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	50                   	push   %eax$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	e8 cc ed ff ff       	call   f01000b1 <_panic>$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	eb da                	jmp    f01012c6 <page_lookup+0x4f>$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	eb d3                	jmp    f01012c6 <page_lookup+0x4f>$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3 <page_remove>:$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	55                   	push   %ebp$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	89 e5                	mov    %esp,%ebp$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	53                   	push   %ebx$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01012fa	obj/kern/kernel.asm	/^f01012fa:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	50                   	push   %eax$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	53                   	push   %ebx$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	e8 6d ff ff ff       	call   f0101277 <page_lookup>$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	85 c0                	test   %eax,%eax$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	75 05                	jne    f0101316 <page_remove+0x23>$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	c9                   	leave  $/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	c3                   	ret    $/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	50                   	push   %eax$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	e8 92 fd ff ff       	call   f01010b1 <page_decref>$/;"	l
f010131f	obj/kern/kernel.asm	/^f010131f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	0f 01 3b             	invlpg (%ebx)$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	eb e1                	jmp    f0101311 <page_remove+0x1e>$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330 <page_insert>:$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	55                   	push   %ebp$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	89 e5                	mov    %esp,%ebp$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	57                   	push   %edi$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	56                   	push   %esi$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	53                   	push   %ebx$/;"	l
f0101336	obj/kern/kernel.asm	/^f0101336:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	e8 a4 1e 00 00       	call   f01031e2 <__x86.get_pc_thunk.si>$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	81 c6 e2 ec 07 00    	add    $0x7ece2,%esi$/;"	l
f0101344	obj/kern/kernel.asm	/^f0101344:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
pte	obj/kern/kernel.asm	/^	pte = pgdir_walk(pgdir, va, false);$/;"	d
f0101347	obj/kern/kernel.asm	/^f0101347:	6a 00                	push   $0x0$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010134c	obj/kern/kernel.asm	/^f010134c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	e8 86 fd ff ff       	call   f01010da <pgdir_walk>$/;"	l
f0101354	obj/kern/kernel.asm	/^f0101354:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101357	obj/kern/kernel.asm	/^f0101357:	85 c0                	test   %eax,%eax$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	74 52                	je     f01013ad <page_insert+0x7d>$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	89 c3                	mov    %eax,%ebx$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	75 38                	jne    f010139a <page_insert+0x6a>$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	89 f9                	mov    %edi,%ecx$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	2b 08                	sub    (%eax),%ecx$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	89 c8                	mov    %ecx,%eax$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101371	obj/kern/kernel.asm	/^f0101371:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	83 ca 01             	or     $0x1,%edx$/;"	l
f010137a	obj/kern/kernel.asm	/^f010137a:	09 d0                	or     %edx,%eax$/;"	l
f010137c	obj/kern/kernel.asm	/^f010137c:	89 03                	mov    %eax,(%ebx)$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	66 83 47 04 01       	addw   $0x1,0x4(%edi)$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	8b 96 fc 22 00 00    	mov    0x22fc(%esi),%edx$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	39 fa                	cmp    %edi,%edx$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	74 3b                	je     f01013cd <page_insert+0x9d>$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	5b                   	pop    %ebx$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	5e                   	pop    %esi$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	5f                   	pop    %edi$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	5d                   	pop    %ebp$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	c3                   	ret    $/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	e8 4b ff ff ff       	call   f01012f3 <page_remove>$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	eb b5                	jmp    f0101362 <page_insert+0x32>$/;"	l
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(pgdir, va, true); \/\/ create the page table and return pte$/;"	d
f01013ad	obj/kern/kernel.asm	/^f01013ad:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	6a 01                	push   $0x1$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	e8 1d fd ff ff       	call   f01010da <pgdir_walk>$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	89 c3                	mov    %eax,%ebx$/;"	l
f01013bf	obj/kern/kernel.asm	/^f01013bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	85 c0                	test   %eax,%eax$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	75 9c                	jne    f0101362 <page_insert+0x32>$/;"	l
f01013c6	obj/kern/kernel.asm	/^f01013c6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	eb c5                	jmp    f0101392 <page_insert+0x62>$/;"	l
page_free_list	obj/kern/kernel.asm	/^		page_free_list = page_free_list->pp_link;$/;"	d
f01013cd	obj/kern/kernel.asm	/^f01013cd:	8b 02                	mov    (%edx),%eax$/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf:	89 86 fc 22 00 00    	mov    %eax,0x22fc(%esi)$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	eb b6                	jmp    f0101392 <page_insert+0x62>$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc <mem_init>:$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	55                   	push   %ebp$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	57                   	push   %edi$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	56                   	push   %esi$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	53                   	push   %ebx$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	e8 1f f3 ff ff       	call   f0100709 <__x86.get_pc_thunk.ax>$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	05 36 ec 07 00       	add    $0x7ec36,%eax$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
f01013f2	obj/kern/kernel.asm	/^f01013f2:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	e8 b3 f5 ff ff       	call   f01009af <nvram_read>$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	89 c3                	mov    %eax,%ebx$/;"	l
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f01013fe	obj/kern/kernel.asm	/^f01013fe:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	e8 a7 f5 ff ff       	call   f01009af <nvram_read>$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	89 c6                	mov    %eax,%esi$/;"	l
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
f010140a	obj/kern/kernel.asm	/^f010140a:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	e8 9b f5 ff ff       	call   f01009af <nvram_read>$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	c1 e0 06             	shl    $0x6,%eax$/;"	l
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;\/\/g4-> ext16 memory starts from 16 MB and hence we are adding 16*1024$/;"	d
f0101417	obj/kern/kernel.asm	/^f0101417:	8d 90 00 40 00 00    	lea    0x4000(%eax),%edx$/;"	l
f010141d	obj/kern/kernel.asm	/^f010141d:	85 c0                	test   %eax,%eax$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	75 0b                	jne    f010142c <mem_init+0x50>$/;"	l
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;\/\/g4-> extended memory starts from 1 MB and hence we are addign 1*1024 refer Lab1 memory layout diagram.$/;"	d
f0101421	obj/kern/kernel.asm	/^f0101421:	8d 96 00 04 00 00    	lea    0x400(%esi),%edx$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	85 f6                	test   %esi,%esi$/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	0f 44 d3             	cmove  %ebx,%edx$/;"	l
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
f010142c	obj/kern/kernel.asm	/^f010142c:	89 d7                	mov    %edx,%edi$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	c1 ef 02             	shr    $0x2,%edi$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101434	obj/kern/kernel.asm	/^f0101434:	c7 c1 e8 2f 18 f0    	mov    $0xf0182fe8,%ecx$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	89 39                	mov    %edi,(%ecx)$/;"	l
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
f010143c	obj/kern/kernel.asm	/^f010143c:	89 d9                	mov    %ebx,%ecx$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0101444	obj/kern/kernel.asm	/^f0101444:	89 8f 00 23 00 00    	mov    %ecx,0x2300(%edi)$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	50                   	push   %eax$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	56                   	push   %esi$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	53                   	push   %ebx$/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450:	52                   	push   %edx$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	89 fb                	mov    %edi,%ebx$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	8d 87 dc 56 f8 ff    	lea    -0x7a924(%edi),%eax$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	50                   	push   %eax$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	e8 56 25 00 00       	call   f01039b5 <cprintf>$/;"	l
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
f010145f	obj/kern/kernel.asm	/^f010145f:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	e8 f6 f5 ff ff       	call   f0100a62 <boot_alloc>$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	c7 c6 ec 2f 18 f0    	mov    $0xf0182fec,%esi$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	89 06                	mov    %eax,(%esi)$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	68 00 10 00 00       	push   $0x1000$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	6a 00                	push   $0x0$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	50                   	push   %eax$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	e8 56 38 00 00       	call   f0104cda <memset>$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	8b 06                	mov    (%esi),%eax$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	76 76                	jbe    f0101506 <mem_init+0x12a>$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *)boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
f010149f	obj/kern/kernel.asm	/^f010149f:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	c7 c3 e8 2f 18 f0    	mov    $0xf0182fe8,%ebx$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	8b 03                	mov    (%ebx),%eax$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	e8 b0 f5 ff ff       	call   f0100a62 <boot_alloc>$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	c7 c6 f0 2f 18 f0    	mov    $0xf0182ff0,%esi$/;"	l
f01014b8	obj/kern/kernel.asm	/^f01014b8:	89 06                	mov    %eax,(%esi)$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	8b 13                	mov    (%ebx),%edx$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	52                   	push   %edx$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	6a 00                	push   $0x0$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	50                   	push   %eax$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	89 fb                	mov    %edi,%ebx$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	e8 0d 38 00 00       	call   f0104cda <memset>$/;"	l
envs	obj/kern/kernel.asm	/^	envs = (struct Env*) boot_alloc(sizeof(struct Env) * NENV);$/;"	d
f01014cd	obj/kern/kernel.asm	/^f01014cd:	b8 00 80 01 00       	mov    $0x18000,%eax$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	e8 8b f5 ff ff       	call   f0100a62 <boot_alloc>$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	c7 c2 28 23 18 f0    	mov    $0xf0182328,%edx$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	89 02                	mov    %eax,(%edx)$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	e8 ae f9 ff ff       	call   f0100e92 <page_init>$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	e8 21 f6 ff ff       	call   f0100b0f <check_page_free_list>$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	74 2c                	je     f0101522 <mem_init+0x146>$/;"	l
f01014f6	obj/kern/kernel.asm	/^f01014f6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	8b 80 fc 22 00 00    	mov    0x22fc(%eax),%eax$/;"	l
f01014ff	obj/kern/kernel.asm	/^f01014ff:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	eb 3f                	jmp    f0101545 <mem_init+0x169>$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	50                   	push   %eax$/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010150a	obj/kern/kernel.asm	/^f010150a:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	50                   	push   %eax$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	68 a3 00 00 00       	push   $0xa3$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	50                   	push   %eax$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	e8 8f eb ff ff       	call   f01000b1 <_panic>$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	8d 83 2f 5e f8 ff    	lea    -0x7a1d1(%ebx),%eax$/;"	l
f010152e	obj/kern/kernel.asm	/^f010152e:	50                   	push   %eax$/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	68 b4 02 00 00       	push   $0x2b4$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	50                   	push   %eax$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	e8 71 eb ff ff       	call   f01000b1 <_panic>$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	8b 00                	mov    (%eax),%eax$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	85 c0                	test   %eax,%eax$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	75 f7                	jne    f0101540 <mem_init+0x164>$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	6a 00                	push   $0x0$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	e8 87 fa ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	89 c3                	mov    %eax,%ebx$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	85 c0                	test   %eax,%eax$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	0f 84 3b 02 00 00    	je     f010179b <mem_init+0x3bf>$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	6a 00                	push   $0x0$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	e8 70 fa ff ff       	call   f0100fda <page_alloc>$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	89 c7                	mov    %eax,%edi$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	85 c0                	test   %eax,%eax$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	0f 84 46 02 00 00    	je     f01017bd <mem_init+0x3e1>$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010157a	obj/kern/kernel.asm	/^f010157a:	6a 00                	push   $0x0$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	e8 59 fa ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	85 c0                	test   %eax,%eax$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	0f 84 50 02 00 00    	je     f01017df <mem_init+0x403>$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	39 fb                	cmp    %edi,%ebx$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	0f 84 6a 02 00 00    	je     f0101801 <mem_init+0x425>$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	39 c7                	cmp    %eax,%edi$/;"	l
f010159c	obj/kern/kernel.asm	/^f010159c:	0f 84 81 02 00 00    	je     f0101823 <mem_init+0x447>$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	39 c3                	cmp    %eax,%ebx$/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	0f 84 79 02 00 00    	je     f0101823 <mem_init+0x447>$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	8b 08                	mov    (%eax),%ecx$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	c7 c0 e8 2f 18 f0    	mov    $0xf0182fe8,%eax$/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	8b 10                	mov    (%eax),%edx$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	89 d8                	mov    %ebx,%eax$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	29 c8                	sub    %ecx,%eax$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	39 d0                	cmp    %edx,%eax$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	0f 83 73 02 00 00    	jae    f0101845 <mem_init+0x469>$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	89 f8                	mov    %edi,%eax$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	29 c8                	sub    %ecx,%eax$/;"	l
f01015d6	obj/kern/kernel.asm	/^f01015d6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	39 c2                	cmp    %eax,%edx$/;"	l
f01015de	obj/kern/kernel.asm	/^f01015de:	0f 86 83 02 00 00    	jbe    f0101867 <mem_init+0x48b>$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	29 c8                	sub    %ecx,%eax$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	39 c2                	cmp    %eax,%edx$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	0f 86 92 02 00 00    	jbe    f0101889 <mem_init+0x4ad>$/;"	l
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
f01015f7	obj/kern/kernel.asm	/^f01015f7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	8b 88 fc 22 00 00    	mov    0x22fc(%eax),%ecx$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
f0101603	obj/kern/kernel.asm	/^f0101603:	c7 80 fc 22 00 00 00 	movl   $0x0,0x22fc(%eax)$/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	00 00 00 $/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	6a 00                	push   $0x0$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	e8 c3 f9 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101617	obj/kern/kernel.asm	/^f0101617:	83 c4 10             	add    $0x10,%esp$/;"	l
f010161a	obj/kern/kernel.asm	/^f010161a:	85 c0                	test   %eax,%eax$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	0f 85 89 02 00 00    	jne    f01018ab <mem_init+0x4cf>$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	53                   	push   %ebx$/;"	l
f0101626	obj/kern/kernel.asm	/^f0101626:	e8 37 fa ff ff       	call   f0101062 <page_free>$/;"	l
f010162b	obj/kern/kernel.asm	/^f010162b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	e8 2f fa ff ff       	call   f0101062 <page_free>$/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	e8 24 fa ff ff       	call   f0101062 <page_free>$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	e8 90 f9 ff ff       	call   f0100fda <page_alloc>$/;"	l
f010164a	obj/kern/kernel.asm	/^f010164a:	89 c7                	mov    %eax,%edi$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	85 c0                	test   %eax,%eax$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	0f 84 76 02 00 00    	je     f01018cd <mem_init+0x4f1>$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	6a 00                	push   $0x0$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	e8 79 f9 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	85 c0                	test   %eax,%eax$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	0f 84 80 02 00 00    	je     f01018ef <mem_init+0x513>$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	6a 00                	push   $0x0$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	e8 61 f9 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101679	obj/kern/kernel.asm	/^f0101679:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	85 c0                	test   %eax,%eax$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	0f 84 8a 02 00 00    	je     f0101911 <mem_init+0x535>$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	3b 7d d0             	cmp    -0x30(%ebp),%edi$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	0f 84 a3 02 00 00    	je     f0101933 <mem_init+0x557>$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	0f 84 b9 02 00 00    	je     f0101955 <mem_init+0x579>$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	39 c7                	cmp    %eax,%edi$/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	0f 84 b1 02 00 00    	je     f0101955 <mem_init+0x579>$/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	6a 00                	push   $0x0$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	e8 2c f9 ff ff       	call   f0100fda <page_alloc>$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	85 c0                	test   %eax,%eax$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	0f 85 be 02 00 00    	jne    f0101977 <mem_init+0x59b>$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f01016c2	obj/kern/kernel.asm	/^f01016c2:	89 f9                	mov    %edi,%ecx$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	2b 08                	sub    (%eax),%ecx$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	89 c8                	mov    %ecx,%eax$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	89 c1                	mov    %eax,%ecx$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	c7 c2 e8 2f 18 f0    	mov    $0xf0182fe8,%edx$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	0f 83 b8 02 00 00    	jae    f0101999 <mem_init+0x5bd>$/;"	l
f01016e1	obj/kern/kernel.asm	/^f01016e1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	68 00 10 00 00       	push   $0x1000$/;"	l
f01016e9	obj/kern/kernel.asm	/^f01016e9:	6a 01                	push   $0x1$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	50                   	push   %eax$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4:	e8 e1 35 00 00       	call   f0104cda <memset>$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	e8 61 f9 ff ff       	call   f0101062 <page_free>$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	e8 cd f8 ff ff       	call   f0100fda <page_alloc>$/;"	l
f010170d	obj/kern/kernel.asm	/^f010170d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	85 c0                	test   %eax,%eax$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	0f 84 97 02 00 00    	je     f01019af <mem_init+0x5d3>$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	39 c7                	cmp    %eax,%edi$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	0f 85 b1 02 00 00    	jne    f01019d1 <mem_init+0x5f5>$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	89 fa                	mov    %edi,%edx$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	2b 10                	sub    (%eax),%edx$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	89 d1                	mov    %edx,%ecx$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	c7 c0 e8 2f 18 f0    	mov    $0xf0182fe8,%eax$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	3b 08                	cmp    (%eax),%ecx$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	0f 83 ad 02 00 00    	jae    f01019f3 <mem_init+0x617>$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	0f 85 ae 02 00 00    	jne    f0101a09 <mem_init+0x62d>$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010175e	obj/kern/kernel.asm	/^f010175e:	39 d0                	cmp    %edx,%eax$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	75 f0                	jne    f0101752 <mem_init+0x376>$/;"	l
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
f0101762	obj/kern/kernel.asm	/^f0101762:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	89 8b fc 22 00 00    	mov    %ecx,0x22fc(%ebx)$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	57                   	push   %edi$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	e8 eb f8 ff ff       	call   f0101062 <page_free>$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	83 c4 04             	add    $0x4,%esp$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	e8 e0 f8 ff ff       	call   f0101062 <page_free>$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	e8 d5 f8 ff ff       	call   f0101062 <page_free>$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	8b 83 fc 22 00 00    	mov    0x22fc(%ebx),%eax$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	e9 95 02 00 00       	jmp    f0101a30 <mem_init+0x654>$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010179e	obj/kern/kernel.asm	/^f010179e:	8d 83 4a 5e f8 ff    	lea    -0x7a1b6(%ebx),%eax$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	50                   	push   %eax$/;"	l
f01017a5	obj/kern/kernel.asm	/^f01017a5:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	50                   	push   %eax$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	68 bc 02 00 00       	push   $0x2bc$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	50                   	push   %eax$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	e8 f4 e8 ff ff       	call   f01000b1 <_panic>$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	8d 83 60 5e f8 ff    	lea    -0x7a1a0(%ebx),%eax$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	50                   	push   %eax$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	50                   	push   %eax$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	68 bd 02 00 00       	push   $0x2bd$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	50                   	push   %eax$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	e8 d2 e8 ff ff       	call   f01000b1 <_panic>$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	8d 83 76 5e f8 ff    	lea    -0x7a18a(%ebx),%eax$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	50                   	push   %eax$/;"	l
f01017e9	obj/kern/kernel.asm	/^f01017e9:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	50                   	push   %eax$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	68 be 02 00 00       	push   $0x2be$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	50                   	push   %eax$/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	e8 b0 e8 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	8d 83 8c 5e f8 ff    	lea    -0x7a174(%ebx),%eax$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	50                   	push   %eax$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	50                   	push   %eax$/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	68 c1 02 00 00       	push   $0x2c1$/;"	l
f0101817	obj/kern/kernel.asm	/^f0101817:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	50                   	push   %eax$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	e8 8e e8 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	8d 83 2c 57 f8 ff    	lea    -0x7a8d4(%ebx),%eax$/;"	l
f010182c	obj/kern/kernel.asm	/^f010182c:	50                   	push   %eax$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	50                   	push   %eax$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	68 c2 02 00 00       	push   $0x2c2$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	50                   	push   %eax$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	e8 6c e8 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	8d 83 9e 5e f8 ff    	lea    -0x7a162(%ebx),%eax$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	50                   	push   %eax$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	50                   	push   %eax$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	68 c3 02 00 00       	push   $0x2c3$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	50                   	push   %eax$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	e8 4a e8 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	8d 83 bb 5e f8 ff    	lea    -0x7a145(%ebx),%eax$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	50                   	push   %eax$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	50                   	push   %eax$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	68 c4 02 00 00       	push   $0x2c4$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	50                   	push   %eax$/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	e8 28 e8 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	8d 83 d8 5e f8 ff    	lea    -0x7a128(%ebx),%eax$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	50                   	push   %eax$/;"	l
f0101893	obj/kern/kernel.asm	/^f0101893:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899:	50                   	push   %eax$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	68 c5 02 00 00       	push   $0x2c5$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	50                   	push   %eax$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	e8 06 e8 ff ff       	call   f01000b1 <_panic>$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	8d 83 f5 5e f8 ff    	lea    -0x7a10b(%ebx),%eax$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	50                   	push   %eax$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01018bb	obj/kern/kernel.asm	/^f01018bb:	50                   	push   %eax$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	68 cc 02 00 00       	push   $0x2cc$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	50                   	push   %eax$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	e8 e4 e7 ff ff       	call   f01000b1 <_panic>$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	8d 83 4a 5e f8 ff    	lea    -0x7a1b6(%ebx),%eax$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	50                   	push   %eax$/;"	l
f01018d7	obj/kern/kernel.asm	/^f01018d7:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	50                   	push   %eax$/;"	l
f01018de	obj/kern/kernel.asm	/^f01018de:	68 d3 02 00 00       	push   $0x2d3$/;"	l
f01018e3	obj/kern/kernel.asm	/^f01018e3:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	50                   	push   %eax$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	e8 c2 e7 ff ff       	call   f01000b1 <_panic>$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	8d 83 60 5e f8 ff    	lea    -0x7a1a0(%ebx),%eax$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	50                   	push   %eax$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	50                   	push   %eax$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	68 d4 02 00 00       	push   $0x2d4$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	50                   	push   %eax$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	e8 a0 e7 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101914	obj/kern/kernel.asm	/^f0101914:	8d 83 76 5e f8 ff    	lea    -0x7a18a(%ebx),%eax$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	50                   	push   %eax$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	50                   	push   %eax$/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	68 d5 02 00 00       	push   $0x2d5$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	50                   	push   %eax$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	e8 7e e7 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101933	obj/kern/kernel.asm	/^f0101933:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	8d 83 8c 5e f8 ff    	lea    -0x7a174(%ebx),%eax$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	50                   	push   %eax$/;"	l
f010193d	obj/kern/kernel.asm	/^f010193d:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	50                   	push   %eax$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	68 d7 02 00 00       	push   $0x2d7$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	50                   	push   %eax$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	e8 5c e7 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	8d 83 2c 57 f8 ff    	lea    -0x7a8d4(%ebx),%eax$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	50                   	push   %eax$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	50                   	push   %eax$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	68 d8 02 00 00       	push   $0x2d8$/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	50                   	push   %eax$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	e8 3a e7 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	8d 83 f5 5e f8 ff    	lea    -0x7a10b(%ebx),%eax$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	50                   	push   %eax$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	50                   	push   %eax$/;"	l
f0101988	obj/kern/kernel.asm	/^f0101988:	68 d9 02 00 00       	push   $0x2d9$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	50                   	push   %eax$/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	e8 18 e7 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	50                   	push   %eax$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f01019a0	obj/kern/kernel.asm	/^f01019a0:	50                   	push   %eax$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	6a 56                	push   $0x56$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	50                   	push   %eax$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	e8 02 e7 ff ff       	call   f01000b1 <_panic>$/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	8d 83 04 5f f8 ff    	lea    -0x7a0fc(%ebx),%eax$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	50                   	push   %eax$/;"	l
f01019b9	obj/kern/kernel.asm	/^f01019b9:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	50                   	push   %eax$/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	68 de 02 00 00       	push   $0x2de$/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01019cb	obj/kern/kernel.asm	/^f01019cb:	50                   	push   %eax$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	e8 e0 e6 ff ff       	call   f01000b1 <_panic>$/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	8d 83 22 5f f8 ff    	lea    -0x7a0de(%ebx),%eax$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	50                   	push   %eax$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	50                   	push   %eax$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	68 df 02 00 00       	push   $0x2df$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01019ed	obj/kern/kernel.asm	/^f01019ed:	50                   	push   %eax$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	e8 be e6 ff ff       	call   f01000b1 <_panic>$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	52                   	push   %edx$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	50                   	push   %eax$/;"	l
f01019fb	obj/kern/kernel.asm	/^f01019fb:	6a 56                	push   $0x56$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f0101a03	obj/kern/kernel.asm	/^f0101a03:	50                   	push   %eax$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	e8 a8 e6 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101a09	obj/kern/kernel.asm	/^f0101a09:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101a0c	obj/kern/kernel.asm	/^f0101a0c:	8d 83 32 5f f8 ff    	lea    -0x7a0ce(%ebx),%eax$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	50                   	push   %eax$/;"	l
f0101a13	obj/kern/kernel.asm	/^f0101a13:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	50                   	push   %eax$/;"	l
f0101a1a	obj/kern/kernel.asm	/^f0101a1a:	68 e2 02 00 00       	push   $0x2e2$/;"	l
f0101a1f	obj/kern/kernel.asm	/^f0101a1f:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	50                   	push   %eax$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	e8 86 e6 ff ff       	call   f01000b1 <_panic>$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101a30	obj/kern/kernel.asm	/^f0101a30:	85 c0                	test   %eax,%eax$/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	75 f7                	jne    f0101a2b <mem_init+0x64f>$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	85 f6                	test   %esi,%esi$/;"	l
f0101a36	obj/kern/kernel.asm	/^f0101a36:	0f 85 65 08 00 00    	jne    f01022a1 <mem_init+0xec5>$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101a3f	obj/kern/kernel.asm	/^f0101a3f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101a42	obj/kern/kernel.asm	/^f0101a42:	8d 83 4c 57 f8 ff    	lea    -0x7a8b4(%ebx),%eax$/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	50                   	push   %eax$/;"	l
f0101a49	obj/kern/kernel.asm	/^f0101a49:	e8 67 1f 00 00       	call   f01039b5 <cprintf>$/;"	l
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	e8 80 f5 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101a5a	obj/kern/kernel.asm	/^f0101a5a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	85 c0                	test   %eax,%eax$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	0f 84 5b 08 00 00    	je     f01022c3 <mem_init+0xee7>$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101a6b	obj/kern/kernel.asm	/^f0101a6b:	6a 00                	push   $0x0$/;"	l
f0101a6d	obj/kern/kernel.asm	/^f0101a6d:	e8 68 f5 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101a72	obj/kern/kernel.asm	/^f0101a72:	89 c7                	mov    %eax,%edi$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	85 c0                	test   %eax,%eax$/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	0f 84 66 08 00 00    	je     f01022e5 <mem_init+0xf09>$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	6a 00                	push   $0x0$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	e8 51 f5 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	89 c6                	mov    %eax,%esi$/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	85 c0                	test   %eax,%eax$/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	0f 84 71 08 00 00    	je     f0102307 <mem_init+0xf2b>$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	39 7d d0             	cmp    %edi,-0x30(%ebp)$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	0f 84 8a 08 00 00    	je     f0102329 <mem_init+0xf4d>$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	0f 84 a3 08 00 00    	je     f010234b <mem_init+0xf6f>$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	39 c7                	cmp    %eax,%edi$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	0f 84 9b 08 00 00    	je     f010234b <mem_init+0xf6f>$/;"	l
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
f0101ab0	obj/kern/kernel.asm	/^f0101ab0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	8b 88 fc 22 00 00    	mov    0x22fc(%eax),%ecx$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
f0101abc	obj/kern/kernel.asm	/^f0101abc:	c7 80 fc 22 00 00 00 	movl   $0x0,0x22fc(%eax)$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	00 00 00 $/;"	l
f0101ac6	obj/kern/kernel.asm	/^f0101ac6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	6a 00                	push   $0x0$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	e8 0a f5 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	85 c0                	test   %eax,%eax$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	0f 85 92 08 00 00    	jne    f010236d <mem_init+0xf91>$/;"	l
f0101adb	obj/kern/kernel.asm	/^f0101adb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101ade	obj/kern/kernel.asm	/^f0101ade:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	50                   	push   %eax$/;"	l
f0101ae2	obj/kern/kernel.asm	/^f0101ae2:	6a 00                	push   $0x0$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	ff 30                	pushl  (%eax)$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	e8 83 f7 ff ff       	call   f0101277 <page_lookup>$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	85 c0                	test   %eax,%eax$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	0f 85 90 08 00 00    	jne    f010238f <mem_init+0xfb3>$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	6a 02                	push   $0x2$/;"	l
f0101b01	obj/kern/kernel.asm	/^f0101b01:	6a 00                	push   $0x0$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	57                   	push   %edi$/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	ff 30                	pushl  (%eax)$/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	e8 1c f8 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b17	obj/kern/kernel.asm	/^f0101b17:	85 c0                	test   %eax,%eax$/;"	l
f0101b19	obj/kern/kernel.asm	/^f0101b19:	0f 89 92 08 00 00    	jns    f01023b1 <mem_init+0xfd5>$/;"	l
f0101b1f	obj/kern/kernel.asm	/^f0101b1f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	e8 38 f5 ff ff       	call   f0101062 <page_free>$/;"	l
f0101b2a	obj/kern/kernel.asm	/^f0101b2a:	6a 02                	push   $0x2$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	6a 00                	push   $0x0$/;"	l
f0101b2e	obj/kern/kernel.asm	/^f0101b2e:	57                   	push   %edi$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101b38	obj/kern/kernel.asm	/^f0101b38:	ff 30                	pushl  (%eax)$/;"	l
f0101b3a	obj/kern/kernel.asm	/^f0101b3a:	e8 f1 f7 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101b3f	obj/kern/kernel.asm	/^f0101b3f:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	85 c0                	test   %eax,%eax$/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	0f 85 89 08 00 00    	jne    f01023d3 <mem_init+0xff7>$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	8b 18                	mov    (%eax),%ebx$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	8b 08                	mov    (%eax),%ecx$/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	8b 13                	mov    (%ebx),%edx$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	29 c8                	sub    %ecx,%eax$/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101b73	obj/kern/kernel.asm	/^f0101b73:	39 c2                	cmp    %eax,%edx$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	0f 85 7a 08 00 00    	jne    f01023f5 <mem_init+0x1019>$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101b80	obj/kern/kernel.asm	/^f0101b80:	89 d8                	mov    %ebx,%eax$/;"	l
f0101b82	obj/kern/kernel.asm	/^f0101b82:	e8 5e ee ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0101b87	obj/kern/kernel.asm	/^f0101b87:	89 fa                	mov    %edi,%edx$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101b8f	obj/kern/kernel.asm	/^f0101b8f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101b92	obj/kern/kernel.asm	/^f0101b92:	39 d0                	cmp    %edx,%eax$/;"	l
f0101b94	obj/kern/kernel.asm	/^f0101b94:	0f 85 7d 08 00 00    	jne    f0102417 <mem_init+0x103b>$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	0f 85 94 08 00 00    	jne    f0102439 <mem_init+0x105d>$/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101ba8	obj/kern/kernel.asm	/^f0101ba8:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	0f 85 a8 08 00 00    	jne    f010245b <mem_init+0x107f>$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	6a 02                	push   $0x2$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	56                   	push   %esi$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	53                   	push   %ebx$/;"	l
f0101bbc	obj/kern/kernel.asm	/^f0101bbc:	e8 6f f7 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	85 c0                	test   %eax,%eax$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	0f 85 b1 08 00 00    	jne    f010247d <mem_init+0x10a1>$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101bd1	obj/kern/kernel.asm	/^f0101bd1:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	8b 00                	mov    (%eax),%eax$/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	e8 04 ee ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	c7 c2 f0 2f 18 f0    	mov    $0xf0182ff0,%edx$/;"	l
f0101be7	obj/kern/kernel.asm	/^f0101be7:	89 f1                	mov    %esi,%ecx$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	2b 0a                	sub    (%edx),%ecx$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	89 ca                	mov    %ecx,%edx$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	39 d0                	cmp    %edx,%eax$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	0f 85 a4 08 00 00    	jne    f010249f <mem_init+0x10c3>$/;"	l
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00:	0f 85 bb 08 00 00    	jne    f01024c1 <mem_init+0x10e5>$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	6a 00                	push   $0x0$/;"	l
f0101c0b	obj/kern/kernel.asm	/^f0101c0b:	e8 ca f3 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101c10	obj/kern/kernel.asm	/^f0101c10:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	85 c0                	test   %eax,%eax$/;"	l
f0101c15	obj/kern/kernel.asm	/^f0101c15:	0f 85 c8 08 00 00    	jne    f01024e3 <mem_init+0x1107>$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	6a 02                	push   $0x2$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	56                   	push   %esi$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101c2c	obj/kern/kernel.asm	/^f0101c2c:	ff 30                	pushl  (%eax)$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	e8 fd f6 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c36	obj/kern/kernel.asm	/^f0101c36:	85 c0                	test   %eax,%eax$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	0f 85 c7 08 00 00    	jne    f0102505 <mem_init+0x1129>$/;"	l
f0101c3e	obj/kern/kernel.asm	/^f0101c3e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	8b 00                	mov    (%eax),%eax$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	e8 92 ed ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0101c53	obj/kern/kernel.asm	/^f0101c53:	c7 c2 f0 2f 18 f0    	mov    $0xf0182ff0,%edx$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	89 f1                	mov    %esi,%ecx$/;"	l
f0101c5b	obj/kern/kernel.asm	/^f0101c5b:	2b 0a                	sub    (%edx),%ecx$/;"	l
f0101c5d	obj/kern/kernel.asm	/^f0101c5d:	89 ca                	mov    %ecx,%edx$/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c62	obj/kern/kernel.asm	/^f0101c62:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	0f 85 ba 08 00 00    	jne    f0102527 <mem_init+0x114b>$/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	0f 85 d1 08 00 00    	jne    f0102549 <mem_init+0x116d>$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	6a 00                	push   $0x0$/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	e8 58 f3 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c85	obj/kern/kernel.asm	/^f0101c85:	85 c0                	test   %eax,%eax$/;"	l
f0101c87	obj/kern/kernel.asm	/^f0101c87:	0f 85 de 08 00 00    	jne    f010256b <mem_init+0x118f>$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
f0101c8d	obj/kern/kernel.asm	/^f0101c8d:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101c96	obj/kern/kernel.asm	/^f0101c96:	8b 10                	mov    (%eax),%edx$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	8b 02                	mov    (%edx),%eax$/;"	l
f0101c9a	obj/kern/kernel.asm	/^f0101c9a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	89 c3                	mov    %eax,%ebx$/;"	l
f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	c7 c1 e8 2f 18 f0    	mov    $0xf0182fe8,%ecx$/;"	l
f0101caa	obj/kern/kernel.asm	/^f0101caa:	3b 19                	cmp    (%ecx),%ebx$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	0f 83 db 08 00 00    	jae    f010258d <mem_init+0x11b1>$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101cba	obj/kern/kernel.asm	/^f0101cba:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	6a 00                	push   $0x0$/;"	l
f0101cbf	obj/kern/kernel.asm	/^f0101cbf:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	52                   	push   %edx$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	e8 10 f4 ff ff       	call   f01010da <pgdir_walk>$/;"	l
f0101cca	obj/kern/kernel.asm	/^f0101cca:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	39 d0                	cmp    %edx,%eax$/;"	l
f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	0f 85 ce 08 00 00    	jne    f01025a9 <mem_init+0x11cd>$/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	6a 06                	push   $0x6$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	56                   	push   %esi$/;"	l
f0101ce3	obj/kern/kernel.asm	/^f0101ce3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	ff 30                	pushl  (%eax)$/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	e8 3d f6 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	85 c0                	test   %eax,%eax$/;"	l
f0101cf8	obj/kern/kernel.asm	/^f0101cf8:	0f 85 cd 08 00 00    	jne    f01025cb <mem_init+0x11ef>$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101d01	obj/kern/kernel.asm	/^f0101d01:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	8b 18                	mov    (%eax),%ebx$/;"	l
f0101d09	obj/kern/kernel.asm	/^f0101d09:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101d0e	obj/kern/kernel.asm	/^f0101d0e:	89 d8                	mov    %ebx,%eax$/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	e8 d0 ec ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101d18	obj/kern/kernel.asm	/^f0101d18:	c7 c2 f0 2f 18 f0    	mov    $0xf0182ff0,%edx$/;"	l
f0101d1e	obj/kern/kernel.asm	/^f0101d1e:	89 f1                	mov    %esi,%ecx$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	2b 0a                	sub    (%edx),%ecx$/;"	l
f0101d22	obj/kern/kernel.asm	/^f0101d22:	89 ca                	mov    %ecx,%edx$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101d2a	obj/kern/kernel.asm	/^f0101d2a:	39 d0                	cmp    %edx,%eax$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	0f 85 bb 08 00 00    	jne    f01025ed <mem_init+0x1211>$/;"	l
f0101d32	obj/kern/kernel.asm	/^f0101d32:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	0f 85 d2 08 00 00    	jne    f010260f <mem_init+0x1233>$/;"	l
f0101d3d	obj/kern/kernel.asm	/^f0101d3d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	6a 00                	push   $0x0$/;"	l
f0101d42	obj/kern/kernel.asm	/^f0101d42:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d47	obj/kern/kernel.asm	/^f0101d47:	53                   	push   %ebx$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	e8 8d f3 ff ff       	call   f01010da <pgdir_walk>$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d50	obj/kern/kernel.asm	/^f0101d50:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d53	obj/kern/kernel.asm	/^f0101d53:	0f 84 d8 08 00 00    	je     f0102631 <mem_init+0x1255>$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101d5c	obj/kern/kernel.asm	/^f0101d5c:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101d62	obj/kern/kernel.asm	/^f0101d62:	8b 00                	mov    (%eax),%eax$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	0f 84 e6 08 00 00    	je     f0102653 <mem_init+0x1277>$/;"	l
f0101d6d	obj/kern/kernel.asm	/^f0101d6d:	6a 02                	push   $0x2$/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	56                   	push   %esi$/;"	l
f0101d75	obj/kern/kernel.asm	/^f0101d75:	50                   	push   %eax$/;"	l
f0101d76	obj/kern/kernel.asm	/^f0101d76:	e8 b5 f5 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	85 c0                	test   %eax,%eax$/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	0f 85 ef 08 00 00    	jne    f0102675 <mem_init+0x1299>$/;"	l
f0101d86	obj/kern/kernel.asm	/^f0101d86:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d89	obj/kern/kernel.asm	/^f0101d89:	6a 00                	push   $0x0$/;"	l
f0101d8b	obj/kern/kernel.asm	/^f0101d8b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101d93	obj/kern/kernel.asm	/^f0101d93:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	ff 30                	pushl  (%eax)$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	e8 3a f3 ff ff       	call   f01010da <pgdir_walk>$/;"	l
f0101da0	obj/kern/kernel.asm	/^f0101da0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101da3	obj/kern/kernel.asm	/^f0101da3:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0101da6	obj/kern/kernel.asm	/^f0101da6:	0f 84 eb 08 00 00    	je     f0102697 <mem_init+0x12bb>$/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101daf	obj/kern/kernel.asm	/^f0101daf:	6a 00                	push   $0x0$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101dbf	obj/kern/kernel.asm	/^f0101dbf:	ff 30                	pushl  (%eax)$/;"	l
f0101dc1	obj/kern/kernel.asm	/^f0101dc1:	e8 14 f3 ff ff       	call   f01010da <pgdir_walk>$/;"	l
f0101dc6	obj/kern/kernel.asm	/^f0101dc6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101dcc	obj/kern/kernel.asm	/^f0101dcc:	0f 85 e7 08 00 00    	jne    f01026b9 <mem_init+0x12dd>$/;"	l
f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	6a 02                	push   $0x2$/;"	l
f0101dd4	obj/kern/kernel.asm	/^f0101dd4:	68 00 00 40 00       	push   $0x400000$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0101ddc	obj/kern/kernel.asm	/^f0101ddc:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ddf	obj/kern/kernel.asm	/^f0101ddf:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	ff 30                	pushl  (%eax)$/;"	l
f0101de7	obj/kern/kernel.asm	/^f0101de7:	e8 44 f5 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101dec	obj/kern/kernel.asm	/^f0101dec:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101def	obj/kern/kernel.asm	/^f0101def:	85 c0                	test   %eax,%eax$/;"	l
f0101df1	obj/kern/kernel.asm	/^f0101df1:	0f 89 e4 08 00 00    	jns    f01026db <mem_init+0x12ff>$/;"	l
f0101df7	obj/kern/kernel.asm	/^f0101df7:	6a 02                	push   $0x2$/;"	l
f0101df9	obj/kern/kernel.asm	/^f0101df9:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101dfe	obj/kern/kernel.asm	/^f0101dfe:	57                   	push   %edi$/;"	l
f0101dff	obj/kern/kernel.asm	/^f0101dff:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101e02	obj/kern/kernel.asm	/^f0101e02:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101e08	obj/kern/kernel.asm	/^f0101e08:	ff 30                	pushl  (%eax)$/;"	l
f0101e0a	obj/kern/kernel.asm	/^f0101e0a:	e8 21 f5 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e12	obj/kern/kernel.asm	/^f0101e12:	85 c0                	test   %eax,%eax$/;"	l
f0101e14	obj/kern/kernel.asm	/^f0101e14:	0f 85 e3 08 00 00    	jne    f01026fd <mem_init+0x1321>$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	6a 00                	push   $0x0$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101e24	obj/kern/kernel.asm	/^f0101e24:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101e27	obj/kern/kernel.asm	/^f0101e27:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	ff 30                	pushl  (%eax)$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	e8 a6 f2 ff ff       	call   f01010da <pgdir_walk>$/;"	l
f0101e34	obj/kern/kernel.asm	/^f0101e34:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e37	obj/kern/kernel.asm	/^f0101e37:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	0f 85 df 08 00 00    	jne    f010271f <mem_init+0x1343>$/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101e43	obj/kern/kernel.asm	/^f0101e43:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101e49	obj/kern/kernel.asm	/^f0101e49:	8b 18                	mov    (%eax),%ebx$/;"	l
f0101e4b	obj/kern/kernel.asm	/^f0101e4b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101e50	obj/kern/kernel.asm	/^f0101e50:	89 d8                	mov    %ebx,%eax$/;"	l
f0101e52	obj/kern/kernel.asm	/^f0101e52:	e8 8e eb ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0101e57	obj/kern/kernel.asm	/^f0101e57:	89 c2                	mov    %eax,%edx$/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101e5c	obj/kern/kernel.asm	/^f0101e5c:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101e5f	obj/kern/kernel.asm	/^f0101e5f:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0101e65	obj/kern/kernel.asm	/^f0101e65:	89 f9                	mov    %edi,%ecx$/;"	l
f0101e67	obj/kern/kernel.asm	/^f0101e67:	2b 08                	sub    (%eax),%ecx$/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	89 c8                	mov    %ecx,%eax$/;"	l
f0101e6b	obj/kern/kernel.asm	/^f0101e6b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e6e	obj/kern/kernel.asm	/^f0101e6e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	39 c2                	cmp    %eax,%edx$/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73:	0f 85 c8 08 00 00    	jne    f0102741 <mem_init+0x1365>$/;"	l
f0101e79	obj/kern/kernel.asm	/^f0101e79:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101e7e	obj/kern/kernel.asm	/^f0101e7e:	89 d8                	mov    %ebx,%eax$/;"	l
f0101e80	obj/kern/kernel.asm	/^f0101e80:	e8 60 eb ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0101e88	obj/kern/kernel.asm	/^f0101e88:	0f 85 d5 08 00 00    	jne    f0102763 <mem_init+0x1387>$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	0f 85 ec 08 00 00    	jne    f0102785 <mem_init+0x13a9>$/;"	l
f0101e99	obj/kern/kernel.asm	/^f0101e99:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101e9e	obj/kern/kernel.asm	/^f0101e9e:	0f 85 03 09 00 00    	jne    f01027a7 <mem_init+0x13cb>$/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ea7	obj/kern/kernel.asm	/^f0101ea7:	6a 00                	push   $0x0$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	e8 2c f1 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101eae	obj/kern/kernel.asm	/^f0101eae:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101eb1	obj/kern/kernel.asm	/^f0101eb1:	39 c6                	cmp    %eax,%esi$/;"	l
f0101eb3	obj/kern/kernel.asm	/^f0101eb3:	0f 85 10 09 00 00    	jne    f01027c9 <mem_init+0x13ed>$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	85 c0                	test   %eax,%eax$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	0f 84 08 09 00 00    	je     f01027c9 <mem_init+0x13ed>$/;"	l
f0101ec1	obj/kern/kernel.asm	/^f0101ec1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101ec4	obj/kern/kernel.asm	/^f0101ec4:	6a 00                	push   $0x0$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	c7 c3 ec 2f 18 f0    	mov    $0xf0182fec,%ebx$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	ff 33                	pushl  (%ebx)$/;"	l
f0101ed1	obj/kern/kernel.asm	/^f0101ed1:	e8 1d f4 ff ff       	call   f01012f3 <page_remove>$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0101ed8	obj/kern/kernel.asm	/^f0101ed8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	89 d8                	mov    %ebx,%eax$/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	e8 01 eb ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ee7	obj/kern/kernel.asm	/^f0101ee7:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101eea	obj/kern/kernel.asm	/^f0101eea:	0f 85 fb 08 00 00    	jne    f01027eb <mem_init+0x140f>$/;"	l
f0101ef0	obj/kern/kernel.asm	/^f0101ef0:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	89 d8                	mov    %ebx,%eax$/;"	l
f0101ef7	obj/kern/kernel.asm	/^f0101ef7:	e8 e9 ea ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0101efc	obj/kern/kernel.asm	/^f0101efc:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101eff	obj/kern/kernel.asm	/^f0101eff:	c7 c2 f0 2f 18 f0    	mov    $0xf0182ff0,%edx$/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	89 f9                	mov    %edi,%ecx$/;"	l
f0101f07	obj/kern/kernel.asm	/^f0101f07:	2b 0a                	sub    (%edx),%ecx$/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	89 ca                	mov    %ecx,%edx$/;"	l
f0101f0b	obj/kern/kernel.asm	/^f0101f0b:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f0e	obj/kern/kernel.asm	/^f0101f0e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f13	obj/kern/kernel.asm	/^f0101f13:	0f 85 f4 08 00 00    	jne    f010280d <mem_init+0x1431>$/;"	l
f0101f19	obj/kern/kernel.asm	/^f0101f19:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	0f 85 0b 09 00 00    	jne    f010282f <mem_init+0x1453>$/;"	l
f0101f24	obj/kern/kernel.asm	/^f0101f24:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	0f 85 22 09 00 00    	jne    f0102851 <mem_init+0x1475>$/;"	l
f0101f2f	obj/kern/kernel.asm	/^f0101f2f:	6a 00                	push   $0x0$/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101f36	obj/kern/kernel.asm	/^f0101f36:	57                   	push   %edi$/;"	l
f0101f37	obj/kern/kernel.asm	/^f0101f37:	53                   	push   %ebx$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	e8 f3 f3 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101f3d	obj/kern/kernel.asm	/^f0101f3d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f40	obj/kern/kernel.asm	/^f0101f40:	85 c0                	test   %eax,%eax$/;"	l
f0101f42	obj/kern/kernel.asm	/^f0101f42:	0f 85 2b 09 00 00    	jne    f0102873 <mem_init+0x1497>$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	0f 84 42 09 00 00    	je     f0102895 <mem_init+0x14b9>$/;"	l
f0101f53	obj/kern/kernel.asm	/^f0101f53:	83 3f 00             	cmpl   $0x0,(%edi)$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	0f 85 5b 09 00 00    	jne    f01028b7 <mem_init+0x14db>$/;"	l
f0101f5c	obj/kern/kernel.asm	/^f0101f5c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	c7 c3 ec 2f 18 f0    	mov    $0xf0182fec,%ebx$/;"	l
f0101f6d	obj/kern/kernel.asm	/^f0101f6d:	ff 33                	pushl  (%ebx)$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	e8 7f f3 ff ff       	call   f01012f3 <page_remove>$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0101f76	obj/kern/kernel.asm	/^f0101f76:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f7b	obj/kern/kernel.asm	/^f0101f7b:	89 d8                	mov    %ebx,%eax$/;"	l
f0101f7d	obj/kern/kernel.asm	/^f0101f7d:	e8 63 ea ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0101f82	obj/kern/kernel.asm	/^f0101f82:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f85	obj/kern/kernel.asm	/^f0101f85:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	0f 85 4b 09 00 00    	jne    f01028d9 <mem_init+0x14fd>$/;"	l
f0101f8e	obj/kern/kernel.asm	/^f0101f8e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f93	obj/kern/kernel.asm	/^f0101f93:	89 d8                	mov    %ebx,%eax$/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	e8 4b ea ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0101f9a	obj/kern/kernel.asm	/^f0101f9a:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	0f 85 58 09 00 00    	jne    f01028fb <mem_init+0x151f>$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	0f 85 6f 09 00 00    	jne    f010291d <mem_init+0x1541>$/;"	l
f0101fae	obj/kern/kernel.asm	/^f0101fae:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0101fb3	obj/kern/kernel.asm	/^f0101fb3:	0f 85 86 09 00 00    	jne    f010293f <mem_init+0x1563>$/;"	l
f0101fb9	obj/kern/kernel.asm	/^f0101fb9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	6a 00                	push   $0x0$/;"	l
f0101fbe	obj/kern/kernel.asm	/^f0101fbe:	e8 17 f0 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101fc3	obj/kern/kernel.asm	/^f0101fc3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fc6	obj/kern/kernel.asm	/^f0101fc6:	85 c0                	test   %eax,%eax$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	0f 84 93 09 00 00    	je     f0102961 <mem_init+0x1585>$/;"	l
f0101fce	obj/kern/kernel.asm	/^f0101fce:	39 c7                	cmp    %eax,%edi$/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	0f 85 8b 09 00 00    	jne    f0102961 <mem_init+0x1585>$/;"	l
f0101fd6	obj/kern/kernel.asm	/^f0101fd6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	6a 00                	push   $0x0$/;"	l
f0101fdb	obj/kern/kernel.asm	/^f0101fdb:	e8 fa ef ff ff       	call   f0100fda <page_alloc>$/;"	l
f0101fe0	obj/kern/kernel.asm	/^f0101fe0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fe3	obj/kern/kernel.asm	/^f0101fe3:	85 c0                	test   %eax,%eax$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	0f 85 98 09 00 00    	jne    f0102983 <mem_init+0x15a7>$/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0101fee	obj/kern/kernel.asm	/^f0101fee:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0101ff4	obj/kern/kernel.asm	/^f0101ff4:	8b 08                	mov    (%eax),%ecx$/;"	l
f0101ff6	obj/kern/kernel.asm	/^f0101ff6:	8b 11                	mov    (%ecx),%edx$/;"	l
f0101ff8	obj/kern/kernel.asm	/^f0101ff8:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0102004	obj/kern/kernel.asm	/^f0102004:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0102007	obj/kern/kernel.asm	/^f0102007:	2b 18                	sub    (%eax),%ebx$/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	89 d8                	mov    %ebx,%eax$/;"	l
f010200b	obj/kern/kernel.asm	/^f010200b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	39 c2                	cmp    %eax,%edx$/;"	l
f0102013	obj/kern/kernel.asm	/^f0102013:	0f 85 8c 09 00 00    	jne    f01029a5 <mem_init+0x15c9>$/;"	l
f0102019	obj/kern/kernel.asm	/^f0102019:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f010201f	obj/kern/kernel.asm	/^f010201f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102027	obj/kern/kernel.asm	/^f0102027:	0f 85 9a 09 00 00    	jne    f01029c7 <mem_init+0x15eb>$/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102030	obj/kern/kernel.asm	/^f0102030:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102039	obj/kern/kernel.asm	/^f0102039:	50                   	push   %eax$/;"	l
f010203a	obj/kern/kernel.asm	/^f010203a:	e8 23 f0 ff ff       	call   f0101062 <page_free>$/;"	l
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
f010203f	obj/kern/kernel.asm	/^f010203f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102042	obj/kern/kernel.asm	/^f0102042:	6a 01                	push   $0x1$/;"	l
f0102044	obj/kern/kernel.asm	/^f0102044:	68 00 10 40 00       	push   $0x401000$/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	c7 c3 ec 2f 18 f0    	mov    $0xf0182fec,%ebx$/;"	l
f0102052	obj/kern/kernel.asm	/^f0102052:	ff 33                	pushl  (%ebx)$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	e8 81 f0 ff ff       	call   f01010da <pgdir_walk>$/;"	l
f0102059	obj/kern/kernel.asm	/^f0102059:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
f010205f	obj/kern/kernel.asm	/^f010205f:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	8b 53 04             	mov    0x4(%ebx),%edx$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010206a	obj/kern/kernel.asm	/^f010206a:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f010206d	obj/kern/kernel.asm	/^f010206d:	c7 c1 e8 2f 18 f0    	mov    $0xf0182fe8,%ecx$/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	8b 09                	mov    (%ecx),%ecx$/;"	l
f0102075	obj/kern/kernel.asm	/^f0102075:	89 d0                	mov    %edx,%eax$/;"	l
f0102077	obj/kern/kernel.asm	/^f0102077:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010207a	obj/kern/kernel.asm	/^f010207a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010207d	obj/kern/kernel.asm	/^f010207d:	39 c8                	cmp    %ecx,%eax$/;"	l
f010207f	obj/kern/kernel.asm	/^f010207f:	0f 83 64 09 00 00    	jae    f01029e9 <mem_init+0x160d>$/;"	l
f0102085	obj/kern/kernel.asm	/^f0102085:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	39 55 cc             	cmp    %edx,-0x34(%ebp)$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	0f 85 71 09 00 00    	jne    f0102a05 <mem_init+0x1629>$/;"	l
f0102094	obj/kern/kernel.asm	/^f0102094:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f010209e	obj/kern/kernel.asm	/^f010209e:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01020a4	obj/kern/kernel.asm	/^f01020a4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01020a7	obj/kern/kernel.asm	/^f01020a7:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	2b 18                	sub    (%eax),%ebx$/;"	l
f01020af	obj/kern/kernel.asm	/^f01020af:	89 d8                	mov    %ebx,%eax$/;"	l
f01020b1	obj/kern/kernel.asm	/^f01020b1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01020b4	obj/kern/kernel.asm	/^f01020b4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01020b7	obj/kern/kernel.asm	/^f01020b7:	89 c2                	mov    %eax,%edx$/;"	l
f01020b9	obj/kern/kernel.asm	/^f01020b9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01020bc	obj/kern/kernel.asm	/^f01020bc:	39 d1                	cmp    %edx,%ecx$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	0f 86 63 09 00 00    	jbe    f0102a27 <mem_init+0x164b>$/;"	l
f01020c4	obj/kern/kernel.asm	/^f01020c4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	68 00 10 00 00       	push   $0x1000$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	68 ff 00 00 00       	push   $0xff$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	50                   	push   %eax$/;"	l
f01020d7	obj/kern/kernel.asm	/^f01020d7:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	e8 fb 2b 00 00       	call   f0104cda <memset>$/;"	l
f01020df	obj/kern/kernel.asm	/^f01020df:	83 c4 04             	add    $0x4,%esp$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01020e5	obj/kern/kernel.asm	/^f01020e5:	e8 78 ef ff ff       	call   f0101062 <page_free>$/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01020ed	obj/kern/kernel.asm	/^f01020ed:	6a 01                	push   $0x1$/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	6a 00                	push   $0x0$/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	ff 30                	pushl  (%eax)$/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	e8 d9 ef ff ff       	call   f01010da <pgdir_walk>$/;"	l
f0102101	obj/kern/kernel.asm	/^f0102101:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0102107	obj/kern/kernel.asm	/^f0102107:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f010210a	obj/kern/kernel.asm	/^f010210a:	2b 10                	sub    (%eax),%edx$/;"	l
f010210c	obj/kern/kernel.asm	/^f010210c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	89 d1                	mov    %edx,%ecx$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	83 c4 10             	add    $0x10,%esp$/;"	l
f010211a	obj/kern/kernel.asm	/^f010211a:	c7 c0 e8 2f 18 f0    	mov    $0xf0182fe8,%eax$/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	3b 08                	cmp    (%eax),%ecx$/;"	l
f0102122	obj/kern/kernel.asm	/^f0102122:	0f 83 18 09 00 00    	jae    f0102a40 <mem_init+0x1664>$/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
f010212e	obj/kern/kernel.asm	/^f010212e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102131	obj/kern/kernel.asm	/^f0102131:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f010213a	obj/kern/kernel.asm	/^f010213a:	0f 85 19 09 00 00    	jne    f0102a59 <mem_init+0x167d>$/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	39 d0                	cmp    %edx,%eax$/;"	l
f0102145	obj/kern/kernel.asm	/^f0102145:	75 f0                	jne    f0102137 <mem_init+0xd5b>$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010214a	obj/kern/kernel.asm	/^f010214a:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	8b 00                	mov    (%eax),%eax$/;"	l
f0102152	obj/kern/kernel.asm	/^f0102152:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102158	obj/kern/kernel.asm	/^f0102158:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010215b	obj/kern/kernel.asm	/^f010215b:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
f0102161	obj/kern/kernel.asm	/^f0102161:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0102164	obj/kern/kernel.asm	/^f0102164:	89 93 fc 22 00 00    	mov    %edx,0x22fc(%ebx)$/;"	l
f010216a	obj/kern/kernel.asm	/^f010216a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010216d	obj/kern/kernel.asm	/^f010216d:	50                   	push   %eax$/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	e8 ef ee ff ff       	call   f0101062 <page_free>$/;"	l
f0102173	obj/kern/kernel.asm	/^f0102173:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102176	obj/kern/kernel.asm	/^f0102176:	e8 e7 ee ff ff       	call   f0101062 <page_free>$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	e8 df ee ff ff       	call   f0101062 <page_free>$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	8d 83 13 60 f8 ff    	lea    -0x79fed(%ebx),%eax$/;"	l
f0102189	obj/kern/kernel.asm	/^f0102189:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010218c	obj/kern/kernel.asm	/^f010218c:	e8 24 18 00 00       	call   f01039b5 <cprintf>$/;"	l
f0102191	obj/kern/kernel.asm	/^f0102191:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0102197	obj/kern/kernel.asm	/^f0102197:	8b 00                	mov    (%eax),%eax$/;"	l
f0102199	obj/kern/kernel.asm	/^f0102199:	83 c4 10             	add    $0x10,%esp$/;"	l
f010219c	obj/kern/kernel.asm	/^f010219c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01021a1	obj/kern/kernel.asm	/^f01021a1:	0f 86 d4 08 00 00    	jbe    f0102a7b <mem_init+0x169f>$/;"	l
f01021a7	obj/kern/kernel.asm	/^f01021a7:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	c7 c2 e8 2f 18 f0    	mov    $0xf0182fe8,%edx$/;"	l
f01021b0	obj/kern/kernel.asm	/^f01021b0:	8b 0a                	mov    (%edx),%ecx$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	c1 e1 03             	shl    $0x3,%ecx$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01021b8	obj/kern/kernel.asm	/^f01021b8:	6a 05                	push   $0x5$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01021bf	obj/kern/kernel.asm	/^f01021bf:	50                   	push   %eax$/;"	l
f01021c0	obj/kern/kernel.asm	/^f01021c0:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f01021c5	obj/kern/kernel.asm	/^f01021c5:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	8b 00                	mov    (%eax),%eax$/;"	l
f01021cd	obj/kern/kernel.asm	/^f01021cd:	e8 0d f0 ff ff       	call   f01011df <boot_map_region>$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	c7 c0 28 23 18 f0    	mov    $0xf0182328,%eax$/;"	l
f01021d8	obj/kern/kernel.asm	/^f01021d8:	8b 00                	mov    (%eax),%eax$/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021dd	obj/kern/kernel.asm	/^f01021dd:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	0f 86 af 08 00 00    	jbe    f0102a97 <mem_init+0x16bb>$/;"	l
f01021e8	obj/kern/kernel.asm	/^f01021e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	6a 05                	push   $0x5$/;"	l
f01021ed	obj/kern/kernel.asm	/^f01021ed:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01021f2	obj/kern/kernel.asm	/^f01021f2:	50                   	push   %eax$/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	b9 00 80 01 00       	mov    $0x18000,%ecx$/;"	l
f01021f8	obj/kern/kernel.asm	/^f01021f8:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0102200	obj/kern/kernel.asm	/^f0102200:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	8b 00                	mov    (%eax),%eax$/;"	l
f0102208	obj/kern/kernel.asm	/^f0102208:	e8 d2 ef ff ff       	call   f01011df <boot_map_region>$/;"	l
f010220d	obj/kern/kernel.asm	/^f010220d:	c7 c0 00 20 11 f0    	mov    $0xf0112000,%eax$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102219	obj/kern/kernel.asm	/^f0102219:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010221e	obj/kern/kernel.asm	/^f010221e:	0f 86 8f 08 00 00    	jbe    f0102ab3 <mem_init+0x16d7>$/;"	l
f0102224	obj/kern/kernel.asm	/^f0102224:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	c7 c3 ec 2f 18 f0    	mov    $0xf0182fec,%ebx$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102230	obj/kern/kernel.asm	/^f0102230:	6a 03                	push   $0x3$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0102235	obj/kern/kernel.asm	/^f0102235:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010223a	obj/kern/kernel.asm	/^f010223a:	50                   	push   %eax$/;"	l
f010223b	obj/kern/kernel.asm	/^f010223b:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102245	obj/kern/kernel.asm	/^f0102245:	8b 03                	mov    (%ebx),%eax$/;"	l
f0102247	obj/kern/kernel.asm	/^f0102247:	e8 93 ef ff ff       	call   f01011df <boot_map_region>$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010224f	obj/kern/kernel.asm	/^f010224f:	6a 03                	push   $0x3$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	6a 00                	push   $0x0$/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253:	b9 ff ff ff 0f       	mov    $0xfffffff,%ecx$/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	8b 03                	mov    (%ebx),%eax$/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	e8 7b ef ff ff       	call   f01011df <boot_map_region>$/;"	l
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
f0102264	obj/kern/kernel.asm	/^f0102264:	8b 33                	mov    (%ebx),%esi$/;"	l
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
f0102266	obj/kern/kernel.asm	/^f0102266:	c7 c0 e8 2f 18 f0    	mov    $0xf0182fe8,%eax$/;"	l
f010226c	obj/kern/kernel.asm	/^f010226c:	8b 00                	mov    (%eax),%eax$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0102271	obj/kern/kernel.asm	/^f0102271:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102278	obj/kern/kernel.asm	/^f0102278:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010227d	obj/kern/kernel.asm	/^f010227d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102280	obj/kern/kernel.asm	/^f0102280:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	8b 00                	mov    (%eax),%eax$/;"	l
f0102288	obj/kern/kernel.asm	/^f0102288:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010228e	obj/kern/kernel.asm	/^f010228e:	8d b8 00 00 00 10    	lea    0x10000000(%eax),%edi$/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102297	obj/kern/kernel.asm	/^f0102297:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010229c	obj/kern/kernel.asm	/^f010229c:	e9 57 08 00 00       	jmp    f0102af8 <mem_init+0x171c>$/;"	l
f01022a1	obj/kern/kernel.asm	/^f01022a1:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	8d 83 3c 5f f8 ff    	lea    -0x7a0c4(%ebx),%eax$/;"	l
f01022aa	obj/kern/kernel.asm	/^f01022aa:	50                   	push   %eax$/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01022b1	obj/kern/kernel.asm	/^f01022b1:	50                   	push   %eax$/;"	l
f01022b2	obj/kern/kernel.asm	/^f01022b2:	68 ef 02 00 00       	push   $0x2ef$/;"	l
f01022b7	obj/kern/kernel.asm	/^f01022b7:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01022bd	obj/kern/kernel.asm	/^f01022bd:	50                   	push   %eax$/;"	l
f01022be	obj/kern/kernel.asm	/^f01022be:	e8 ee dd ff ff       	call   f01000b1 <_panic>$/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01022c6	obj/kern/kernel.asm	/^f01022c6:	8d 83 4a 5e f8 ff    	lea    -0x7a1b6(%ebx),%eax$/;"	l
f01022cc	obj/kern/kernel.asm	/^f01022cc:	50                   	push   %eax$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	50                   	push   %eax$/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	68 4d 03 00 00       	push   $0x34d$/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	50                   	push   %eax$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	e8 cc dd ff ff       	call   f01000b1 <_panic>$/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	8d 83 60 5e f8 ff    	lea    -0x7a1a0(%ebx),%eax$/;"	l
f01022ee	obj/kern/kernel.asm	/^f01022ee:	50                   	push   %eax$/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	50                   	push   %eax$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	68 4e 03 00 00       	push   $0x34e$/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102301	obj/kern/kernel.asm	/^f0102301:	50                   	push   %eax$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	e8 aa dd ff ff       	call   f01000b1 <_panic>$/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010230a	obj/kern/kernel.asm	/^f010230a:	8d 83 76 5e f8 ff    	lea    -0x7a18a(%ebx),%eax$/;"	l
f0102310	obj/kern/kernel.asm	/^f0102310:	50                   	push   %eax$/;"	l
f0102311	obj/kern/kernel.asm	/^f0102311:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	50                   	push   %eax$/;"	l
f0102318	obj/kern/kernel.asm	/^f0102318:	68 4f 03 00 00       	push   $0x34f$/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	50                   	push   %eax$/;"	l
f0102324	obj/kern/kernel.asm	/^f0102324:	e8 88 dd ff ff       	call   f01000b1 <_panic>$/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	8d 83 8c 5e f8 ff    	lea    -0x7a174(%ebx),%eax$/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	50                   	push   %eax$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	50                   	push   %eax$/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	68 52 03 00 00       	push   $0x352$/;"	l
f010233f	obj/kern/kernel.asm	/^f010233f:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102345	obj/kern/kernel.asm	/^f0102345:	50                   	push   %eax$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	e8 66 dd ff ff       	call   f01000b1 <_panic>$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	8d 83 2c 57 f8 ff    	lea    -0x7a8d4(%ebx),%eax$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	50                   	push   %eax$/;"	l
f0102355	obj/kern/kernel.asm	/^f0102355:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	50                   	push   %eax$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	68 53 03 00 00       	push   $0x353$/;"	l
f0102361	obj/kern/kernel.asm	/^f0102361:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	50                   	push   %eax$/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	e8 44 dd ff ff       	call   f01000b1 <_panic>$/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	8d 83 f5 5e f8 ff    	lea    -0x7a10b(%ebx),%eax$/;"	l
f0102376	obj/kern/kernel.asm	/^f0102376:	50                   	push   %eax$/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010237d	obj/kern/kernel.asm	/^f010237d:	50                   	push   %eax$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	68 5a 03 00 00       	push   $0x35a$/;"	l
f0102383	obj/kern/kernel.asm	/^f0102383:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102389	obj/kern/kernel.asm	/^f0102389:	50                   	push   %eax$/;"	l
f010238a	obj/kern/kernel.asm	/^f010238a:	e8 22 dd ff ff       	call   f01000b1 <_panic>$/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	8d 83 6c 57 f8 ff    	lea    -0x7a894(%ebx),%eax$/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	50                   	push   %eax$/;"	l
f0102399	obj/kern/kernel.asm	/^f0102399:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	50                   	push   %eax$/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	68 5d 03 00 00       	push   $0x35d$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01023ab	obj/kern/kernel.asm	/^f01023ab:	50                   	push   %eax$/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	e8 00 dd ff ff       	call   f01000b1 <_panic>$/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01023b4	obj/kern/kernel.asm	/^f01023b4:	8d 83 a4 57 f8 ff    	lea    -0x7a85c(%ebx),%eax$/;"	l
f01023ba	obj/kern/kernel.asm	/^f01023ba:	50                   	push   %eax$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	50                   	push   %eax$/;"	l
f01023c2	obj/kern/kernel.asm	/^f01023c2:	68 60 03 00 00       	push   $0x360$/;"	l
f01023c7	obj/kern/kernel.asm	/^f01023c7:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	50                   	push   %eax$/;"	l
f01023ce	obj/kern/kernel.asm	/^f01023ce:	e8 de dc ff ff       	call   f01000b1 <_panic>$/;"	l
f01023d3	obj/kern/kernel.asm	/^f01023d3:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	8d 83 d4 57 f8 ff    	lea    -0x7a82c(%ebx),%eax$/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	50                   	push   %eax$/;"	l
f01023dd	obj/kern/kernel.asm	/^f01023dd:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01023e3	obj/kern/kernel.asm	/^f01023e3:	50                   	push   %eax$/;"	l
f01023e4	obj/kern/kernel.asm	/^f01023e4:	68 64 03 00 00       	push   $0x364$/;"	l
f01023e9	obj/kern/kernel.asm	/^f01023e9:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	50                   	push   %eax$/;"	l
f01023f0	obj/kern/kernel.asm	/^f01023f0:	e8 bc dc ff ff       	call   f01000b1 <_panic>$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01023f8	obj/kern/kernel.asm	/^f01023f8:	8d 83 04 58 f8 ff    	lea    -0x7a7fc(%ebx),%eax$/;"	l
f01023fe	obj/kern/kernel.asm	/^f01023fe:	50                   	push   %eax$/;"	l
f01023ff	obj/kern/kernel.asm	/^f01023ff:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	50                   	push   %eax$/;"	l
f0102406	obj/kern/kernel.asm	/^f0102406:	68 65 03 00 00       	push   $0x365$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102411	obj/kern/kernel.asm	/^f0102411:	50                   	push   %eax$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	e8 9a dc ff ff       	call   f01000b1 <_panic>$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	8d 83 2c 58 f8 ff    	lea    -0x7a7d4(%ebx),%eax$/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	50                   	push   %eax$/;"	l
f0102421	obj/kern/kernel.asm	/^f0102421:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	50                   	push   %eax$/;"	l
f0102428	obj/kern/kernel.asm	/^f0102428:	68 66 03 00 00       	push   $0x366$/;"	l
f010242d	obj/kern/kernel.asm	/^f010242d:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	50                   	push   %eax$/;"	l
f0102434	obj/kern/kernel.asm	/^f0102434:	e8 78 dc ff ff       	call   f01000b1 <_panic>$/;"	l
f0102439	obj/kern/kernel.asm	/^f0102439:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010243c	obj/kern/kernel.asm	/^f010243c:	8d 83 47 5f f8 ff    	lea    -0x7a0b9(%ebx),%eax$/;"	l
f0102442	obj/kern/kernel.asm	/^f0102442:	50                   	push   %eax$/;"	l
f0102443	obj/kern/kernel.asm	/^f0102443:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102449	obj/kern/kernel.asm	/^f0102449:	50                   	push   %eax$/;"	l
f010244a	obj/kern/kernel.asm	/^f010244a:	68 67 03 00 00       	push   $0x367$/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102455	obj/kern/kernel.asm	/^f0102455:	50                   	push   %eax$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	e8 56 dc ff ff       	call   f01000b1 <_panic>$/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010245e	obj/kern/kernel.asm	/^f010245e:	8d 83 58 5f f8 ff    	lea    -0x7a0a8(%ebx),%eax$/;"	l
f0102464	obj/kern/kernel.asm	/^f0102464:	50                   	push   %eax$/;"	l
f0102465	obj/kern/kernel.asm	/^f0102465:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	50                   	push   %eax$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	68 68 03 00 00       	push   $0x368$/;"	l
f0102471	obj/kern/kernel.asm	/^f0102471:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102477	obj/kern/kernel.asm	/^f0102477:	50                   	push   %eax$/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	e8 34 dc ff ff       	call   f01000b1 <_panic>$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102480	obj/kern/kernel.asm	/^f0102480:	8d 83 5c 58 f8 ff    	lea    -0x7a7a4(%ebx),%eax$/;"	l
f0102486	obj/kern/kernel.asm	/^f0102486:	50                   	push   %eax$/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	50                   	push   %eax$/;"	l
f010248e	obj/kern/kernel.asm	/^f010248e:	68 6b 03 00 00       	push   $0x36b$/;"	l
f0102493	obj/kern/kernel.asm	/^f0102493:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	50                   	push   %eax$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	e8 12 dc ff ff       	call   f01000b1 <_panic>$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01024a2	obj/kern/kernel.asm	/^f01024a2:	8d 83 98 58 f8 ff    	lea    -0x7a768(%ebx),%eax$/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	50                   	push   %eax$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01024af	obj/kern/kernel.asm	/^f01024af:	50                   	push   %eax$/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	68 6c 03 00 00       	push   $0x36c$/;"	l
f01024b5	obj/kern/kernel.asm	/^f01024b5:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01024bb	obj/kern/kernel.asm	/^f01024bb:	50                   	push   %eax$/;"	l
f01024bc	obj/kern/kernel.asm	/^f01024bc:	e8 f0 db ff ff       	call   f01000b1 <_panic>$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01024c4	obj/kern/kernel.asm	/^f01024c4:	8d 83 69 5f f8 ff    	lea    -0x7a097(%ebx),%eax$/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	50                   	push   %eax$/;"	l
f01024cb	obj/kern/kernel.asm	/^f01024cb:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01024d1	obj/kern/kernel.asm	/^f01024d1:	50                   	push   %eax$/;"	l
f01024d2	obj/kern/kernel.asm	/^f01024d2:	68 6d 03 00 00       	push   $0x36d$/;"	l
f01024d7	obj/kern/kernel.asm	/^f01024d7:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	50                   	push   %eax$/;"	l
f01024de	obj/kern/kernel.asm	/^f01024de:	e8 ce db ff ff       	call   f01000b1 <_panic>$/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01024e6	obj/kern/kernel.asm	/^f01024e6:	8d 83 f5 5e f8 ff    	lea    -0x7a10b(%ebx),%eax$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	50                   	push   %eax$/;"	l
f01024ed	obj/kern/kernel.asm	/^f01024ed:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	50                   	push   %eax$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	68 70 03 00 00       	push   $0x370$/;"	l
f01024f9	obj/kern/kernel.asm	/^f01024f9:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	50                   	push   %eax$/;"	l
f0102500	obj/kern/kernel.asm	/^f0102500:	e8 ac db ff ff       	call   f01000b1 <_panic>$/;"	l
f0102505	obj/kern/kernel.asm	/^f0102505:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102508	obj/kern/kernel.asm	/^f0102508:	8d 83 5c 58 f8 ff    	lea    -0x7a7a4(%ebx),%eax$/;"	l
f010250e	obj/kern/kernel.asm	/^f010250e:	50                   	push   %eax$/;"	l
f010250f	obj/kern/kernel.asm	/^f010250f:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	50                   	push   %eax$/;"	l
f0102516	obj/kern/kernel.asm	/^f0102516:	68 73 03 00 00       	push   $0x373$/;"	l
f010251b	obj/kern/kernel.asm	/^f010251b:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102521	obj/kern/kernel.asm	/^f0102521:	50                   	push   %eax$/;"	l
f0102522	obj/kern/kernel.asm	/^f0102522:	e8 8a db ff ff       	call   f01000b1 <_panic>$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010252a	obj/kern/kernel.asm	/^f010252a:	8d 83 98 58 f8 ff    	lea    -0x7a768(%ebx),%eax$/;"	l
f0102530	obj/kern/kernel.asm	/^f0102530:	50                   	push   %eax$/;"	l
f0102531	obj/kern/kernel.asm	/^f0102531:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	50                   	push   %eax$/;"	l
f0102538	obj/kern/kernel.asm	/^f0102538:	68 74 03 00 00       	push   $0x374$/;"	l
f010253d	obj/kern/kernel.asm	/^f010253d:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	50                   	push   %eax$/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	e8 68 db ff ff       	call   f01000b1 <_panic>$/;"	l
f0102549	obj/kern/kernel.asm	/^f0102549:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010254c	obj/kern/kernel.asm	/^f010254c:	8d 83 69 5f f8 ff    	lea    -0x7a097(%ebx),%eax$/;"	l
f0102552	obj/kern/kernel.asm	/^f0102552:	50                   	push   %eax$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102559	obj/kern/kernel.asm	/^f0102559:	50                   	push   %eax$/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	68 75 03 00 00       	push   $0x375$/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	50                   	push   %eax$/;"	l
f0102566	obj/kern/kernel.asm	/^f0102566:	e8 46 db ff ff       	call   f01000b1 <_panic>$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010256e	obj/kern/kernel.asm	/^f010256e:	8d 83 f5 5e f8 ff    	lea    -0x7a10b(%ebx),%eax$/;"	l
f0102574	obj/kern/kernel.asm	/^f0102574:	50                   	push   %eax$/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010257b	obj/kern/kernel.asm	/^f010257b:	50                   	push   %eax$/;"	l
f010257c	obj/kern/kernel.asm	/^f010257c:	68 79 03 00 00       	push   $0x379$/;"	l
f0102581	obj/kern/kernel.asm	/^f0102581:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	50                   	push   %eax$/;"	l
f0102588	obj/kern/kernel.asm	/^f0102588:	e8 24 db ff ff       	call   f01000b1 <_panic>$/;"	l
f010258d	obj/kern/kernel.asm	/^f010258d:	50                   	push   %eax$/;"	l
f010258e	obj/kern/kernel.asm	/^f010258e:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102591	obj/kern/kernel.asm	/^f0102591:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f0102597	obj/kern/kernel.asm	/^f0102597:	50                   	push   %eax$/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	68 7c 03 00 00       	push   $0x37c$/;"	l
f010259d	obj/kern/kernel.asm	/^f010259d:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	50                   	push   %eax$/;"	l
f01025a4	obj/kern/kernel.asm	/^f01025a4:	e8 08 db ff ff       	call   f01000b1 <_panic>$/;"	l
f01025a9	obj/kern/kernel.asm	/^f01025a9:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01025ac	obj/kern/kernel.asm	/^f01025ac:	8d 83 c8 58 f8 ff    	lea    -0x7a738(%ebx),%eax$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	50                   	push   %eax$/;"	l
f01025b3	obj/kern/kernel.asm	/^f01025b3:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	50                   	push   %eax$/;"	l
f01025ba	obj/kern/kernel.asm	/^f01025ba:	68 7d 03 00 00       	push   $0x37d$/;"	l
f01025bf	obj/kern/kernel.asm	/^f01025bf:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01025c5	obj/kern/kernel.asm	/^f01025c5:	50                   	push   %eax$/;"	l
f01025c6	obj/kern/kernel.asm	/^f01025c6:	e8 e6 da ff ff       	call   f01000b1 <_panic>$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01025ce	obj/kern/kernel.asm	/^f01025ce:	8d 83 08 59 f8 ff    	lea    -0x7a6f8(%ebx),%eax$/;"	l
f01025d4	obj/kern/kernel.asm	/^f01025d4:	50                   	push   %eax$/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	50                   	push   %eax$/;"	l
f01025dc	obj/kern/kernel.asm	/^f01025dc:	68 80 03 00 00       	push   $0x380$/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	50                   	push   %eax$/;"	l
f01025e8	obj/kern/kernel.asm	/^f01025e8:	e8 c4 da ff ff       	call   f01000b1 <_panic>$/;"	l
f01025ed	obj/kern/kernel.asm	/^f01025ed:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01025f0	obj/kern/kernel.asm	/^f01025f0:	8d 83 98 58 f8 ff    	lea    -0x7a768(%ebx),%eax$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	50                   	push   %eax$/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01025fd	obj/kern/kernel.asm	/^f01025fd:	50                   	push   %eax$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	68 81 03 00 00       	push   $0x381$/;"	l
f0102603	obj/kern/kernel.asm	/^f0102603:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102609	obj/kern/kernel.asm	/^f0102609:	50                   	push   %eax$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	e8 a2 da ff ff       	call   f01000b1 <_panic>$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	8d 83 69 5f f8 ff    	lea    -0x7a097(%ebx),%eax$/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	50                   	push   %eax$/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	50                   	push   %eax$/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	68 82 03 00 00       	push   $0x382$/;"	l
f0102625	obj/kern/kernel.asm	/^f0102625:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010262b	obj/kern/kernel.asm	/^f010262b:	50                   	push   %eax$/;"	l
f010262c	obj/kern/kernel.asm	/^f010262c:	e8 80 da ff ff       	call   f01000b1 <_panic>$/;"	l
f0102631	obj/kern/kernel.asm	/^f0102631:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102634	obj/kern/kernel.asm	/^f0102634:	8d 83 48 59 f8 ff    	lea    -0x7a6b8(%ebx),%eax$/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	50                   	push   %eax$/;"	l
f010263b	obj/kern/kernel.asm	/^f010263b:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102641	obj/kern/kernel.asm	/^f0102641:	50                   	push   %eax$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	68 83 03 00 00       	push   $0x383$/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	50                   	push   %eax$/;"	l
f010264e	obj/kern/kernel.asm	/^f010264e:	e8 5e da ff ff       	call   f01000b1 <_panic>$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102656	obj/kern/kernel.asm	/^f0102656:	8d 83 7a 5f f8 ff    	lea    -0x7a086(%ebx),%eax$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	50                   	push   %eax$/;"	l
f010265d	obj/kern/kernel.asm	/^f010265d:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	50                   	push   %eax$/;"	l
f0102664	obj/kern/kernel.asm	/^f0102664:	68 84 03 00 00       	push   $0x384$/;"	l
f0102669	obj/kern/kernel.asm	/^f0102669:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010266f	obj/kern/kernel.asm	/^f010266f:	50                   	push   %eax$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	e8 3c da ff ff       	call   f01000b1 <_panic>$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102678	obj/kern/kernel.asm	/^f0102678:	8d 83 5c 58 f8 ff    	lea    -0x7a7a4(%ebx),%eax$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	50                   	push   %eax$/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102685	obj/kern/kernel.asm	/^f0102685:	50                   	push   %eax$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	68 87 03 00 00       	push   $0x387$/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102691	obj/kern/kernel.asm	/^f0102691:	50                   	push   %eax$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	e8 1a da ff ff       	call   f01000b1 <_panic>$/;"	l
f0102697	obj/kern/kernel.asm	/^f0102697:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010269a	obj/kern/kernel.asm	/^f010269a:	8d 83 7c 59 f8 ff    	lea    -0x7a684(%ebx),%eax$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	50                   	push   %eax$/;"	l
f01026a1	obj/kern/kernel.asm	/^f01026a1:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	50                   	push   %eax$/;"	l
f01026a8	obj/kern/kernel.asm	/^f01026a8:	68 88 03 00 00       	push   $0x388$/;"	l
f01026ad	obj/kern/kernel.asm	/^f01026ad:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	50                   	push   %eax$/;"	l
f01026b4	obj/kern/kernel.asm	/^f01026b4:	e8 f8 d9 ff ff       	call   f01000b1 <_panic>$/;"	l
f01026b9	obj/kern/kernel.asm	/^f01026b9:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01026bc	obj/kern/kernel.asm	/^f01026bc:	8d 83 b0 59 f8 ff    	lea    -0x7a650(%ebx),%eax$/;"	l
f01026c2	obj/kern/kernel.asm	/^f01026c2:	50                   	push   %eax$/;"	l
f01026c3	obj/kern/kernel.asm	/^f01026c3:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01026c9	obj/kern/kernel.asm	/^f01026c9:	50                   	push   %eax$/;"	l
f01026ca	obj/kern/kernel.asm	/^f01026ca:	68 89 03 00 00       	push   $0x389$/;"	l
f01026cf	obj/kern/kernel.asm	/^f01026cf:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01026d5	obj/kern/kernel.asm	/^f01026d5:	50                   	push   %eax$/;"	l
f01026d6	obj/kern/kernel.asm	/^f01026d6:	e8 d6 d9 ff ff       	call   f01000b1 <_panic>$/;"	l
f01026db	obj/kern/kernel.asm	/^f01026db:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	8d 83 e8 59 f8 ff    	lea    -0x7a618(%ebx),%eax$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	50                   	push   %eax$/;"	l
f01026e5	obj/kern/kernel.asm	/^f01026e5:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	50                   	push   %eax$/;"	l
f01026ec	obj/kern/kernel.asm	/^f01026ec:	68 8c 03 00 00       	push   $0x38c$/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	50                   	push   %eax$/;"	l
f01026f8	obj/kern/kernel.asm	/^f01026f8:	e8 b4 d9 ff ff       	call   f01000b1 <_panic>$/;"	l
f01026fd	obj/kern/kernel.asm	/^f01026fd:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102700	obj/kern/kernel.asm	/^f0102700:	8d 83 20 5a f8 ff    	lea    -0x7a5e0(%ebx),%eax$/;"	l
f0102706	obj/kern/kernel.asm	/^f0102706:	50                   	push   %eax$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010270d	obj/kern/kernel.asm	/^f010270d:	50                   	push   %eax$/;"	l
f010270e	obj/kern/kernel.asm	/^f010270e:	68 8f 03 00 00       	push   $0x38f$/;"	l
f0102713	obj/kern/kernel.asm	/^f0102713:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102719	obj/kern/kernel.asm	/^f0102719:	50                   	push   %eax$/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	e8 92 d9 ff ff       	call   f01000b1 <_panic>$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102722	obj/kern/kernel.asm	/^f0102722:	8d 83 b0 59 f8 ff    	lea    -0x7a650(%ebx),%eax$/;"	l
f0102728	obj/kern/kernel.asm	/^f0102728:	50                   	push   %eax$/;"	l
f0102729	obj/kern/kernel.asm	/^f0102729:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	50                   	push   %eax$/;"	l
f0102730	obj/kern/kernel.asm	/^f0102730:	68 90 03 00 00       	push   $0x390$/;"	l
f0102735	obj/kern/kernel.asm	/^f0102735:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	50                   	push   %eax$/;"	l
f010273c	obj/kern/kernel.asm	/^f010273c:	e8 70 d9 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102741	obj/kern/kernel.asm	/^f0102741:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102744	obj/kern/kernel.asm	/^f0102744:	8d 83 5c 5a f8 ff    	lea    -0x7a5a4(%ebx),%eax$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	50                   	push   %eax$/;"	l
f010274b	obj/kern/kernel.asm	/^f010274b:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102751	obj/kern/kernel.asm	/^f0102751:	50                   	push   %eax$/;"	l
f0102752	obj/kern/kernel.asm	/^f0102752:	68 93 03 00 00       	push   $0x393$/;"	l
f0102757	obj/kern/kernel.asm	/^f0102757:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	50                   	push   %eax$/;"	l
f010275e	obj/kern/kernel.asm	/^f010275e:	e8 4e d9 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102763	obj/kern/kernel.asm	/^f0102763:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	8d 83 88 5a f8 ff    	lea    -0x7a578(%ebx),%eax$/;"	l
f010276c	obj/kern/kernel.asm	/^f010276c:	50                   	push   %eax$/;"	l
f010276d	obj/kern/kernel.asm	/^f010276d:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102773	obj/kern/kernel.asm	/^f0102773:	50                   	push   %eax$/;"	l
f0102774	obj/kern/kernel.asm	/^f0102774:	68 94 03 00 00       	push   $0x394$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010277f	obj/kern/kernel.asm	/^f010277f:	50                   	push   %eax$/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	e8 2c d9 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102785	obj/kern/kernel.asm	/^f0102785:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	8d 83 90 5f f8 ff    	lea    -0x7a070(%ebx),%eax$/;"	l
f010278e	obj/kern/kernel.asm	/^f010278e:	50                   	push   %eax$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795:	50                   	push   %eax$/;"	l
f0102796	obj/kern/kernel.asm	/^f0102796:	68 96 03 00 00       	push   $0x396$/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	50                   	push   %eax$/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	e8 0a d9 ff ff       	call   f01000b1 <_panic>$/;"	l
f01027a7	obj/kern/kernel.asm	/^f01027a7:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	8d 83 a1 5f f8 ff    	lea    -0x7a05f(%ebx),%eax$/;"	l
f01027b0	obj/kern/kernel.asm	/^f01027b0:	50                   	push   %eax$/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01027b7	obj/kern/kernel.asm	/^f01027b7:	50                   	push   %eax$/;"	l
f01027b8	obj/kern/kernel.asm	/^f01027b8:	68 97 03 00 00       	push   $0x397$/;"	l
f01027bd	obj/kern/kernel.asm	/^f01027bd:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	50                   	push   %eax$/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	e8 e8 d8 ff ff       	call   f01000b1 <_panic>$/;"	l
f01027c9	obj/kern/kernel.asm	/^f01027c9:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01027cc	obj/kern/kernel.asm	/^f01027cc:	8d 83 b8 5a f8 ff    	lea    -0x7a548(%ebx),%eax$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	50                   	push   %eax$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01027d9	obj/kern/kernel.asm	/^f01027d9:	50                   	push   %eax$/;"	l
f01027da	obj/kern/kernel.asm	/^f01027da:	68 9a 03 00 00       	push   $0x39a$/;"	l
f01027df	obj/kern/kernel.asm	/^f01027df:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01027e5	obj/kern/kernel.asm	/^f01027e5:	50                   	push   %eax$/;"	l
f01027e6	obj/kern/kernel.asm	/^f01027e6:	e8 c6 d8 ff ff       	call   f01000b1 <_panic>$/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01027ee	obj/kern/kernel.asm	/^f01027ee:	8d 83 dc 5a f8 ff    	lea    -0x7a524(%ebx),%eax$/;"	l
f01027f4	obj/kern/kernel.asm	/^f01027f4:	50                   	push   %eax$/;"	l
f01027f5	obj/kern/kernel.asm	/^f01027f5:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	50                   	push   %eax$/;"	l
f01027fc	obj/kern/kernel.asm	/^f01027fc:	68 9e 03 00 00       	push   $0x39e$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102807	obj/kern/kernel.asm	/^f0102807:	50                   	push   %eax$/;"	l
f0102808	obj/kern/kernel.asm	/^f0102808:	e8 a4 d8 ff ff       	call   f01000b1 <_panic>$/;"	l
f010280d	obj/kern/kernel.asm	/^f010280d:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	8d 83 88 5a f8 ff    	lea    -0x7a578(%ebx),%eax$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	50                   	push   %eax$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010281d	obj/kern/kernel.asm	/^f010281d:	50                   	push   %eax$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	68 9f 03 00 00       	push   $0x39f$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102829	obj/kern/kernel.asm	/^f0102829:	50                   	push   %eax$/;"	l
f010282a	obj/kern/kernel.asm	/^f010282a:	e8 82 d8 ff ff       	call   f01000b1 <_panic>$/;"	l
f010282f	obj/kern/kernel.asm	/^f010282f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	8d 83 47 5f f8 ff    	lea    -0x7a0b9(%ebx),%eax$/;"	l
f0102838	obj/kern/kernel.asm	/^f0102838:	50                   	push   %eax$/;"	l
f0102839	obj/kern/kernel.asm	/^f0102839:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	50                   	push   %eax$/;"	l
f0102840	obj/kern/kernel.asm	/^f0102840:	68 a0 03 00 00       	push   $0x3a0$/;"	l
f0102845	obj/kern/kernel.asm	/^f0102845:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010284b	obj/kern/kernel.asm	/^f010284b:	50                   	push   %eax$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	e8 60 d8 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102854	obj/kern/kernel.asm	/^f0102854:	8d 83 a1 5f f8 ff    	lea    -0x7a05f(%ebx),%eax$/;"	l
f010285a	obj/kern/kernel.asm	/^f010285a:	50                   	push   %eax$/;"	l
f010285b	obj/kern/kernel.asm	/^f010285b:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102861	obj/kern/kernel.asm	/^f0102861:	50                   	push   %eax$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	68 a1 03 00 00       	push   $0x3a1$/;"	l
f0102867	obj/kern/kernel.asm	/^f0102867:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010286d	obj/kern/kernel.asm	/^f010286d:	50                   	push   %eax$/;"	l
f010286e	obj/kern/kernel.asm	/^f010286e:	e8 3e d8 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102873	obj/kern/kernel.asm	/^f0102873:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102876	obj/kern/kernel.asm	/^f0102876:	8d 83 00 5b f8 ff    	lea    -0x7a500(%ebx),%eax$/;"	l
f010287c	obj/kern/kernel.asm	/^f010287c:	50                   	push   %eax$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	50                   	push   %eax$/;"	l
f0102884	obj/kern/kernel.asm	/^f0102884:	68 a4 03 00 00       	push   $0x3a4$/;"	l
f0102889	obj/kern/kernel.asm	/^f0102889:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	50                   	push   %eax$/;"	l
f0102890	obj/kern/kernel.asm	/^f0102890:	e8 1c d8 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102895	obj/kern/kernel.asm	/^f0102895:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	8d 83 b2 5f f8 ff    	lea    -0x7a04e(%ebx),%eax$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	50                   	push   %eax$/;"	l
f010289f	obj/kern/kernel.asm	/^f010289f:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01028a5	obj/kern/kernel.asm	/^f01028a5:	50                   	push   %eax$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	68 a5 03 00 00       	push   $0x3a5$/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	50                   	push   %eax$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	e8 fa d7 ff ff       	call   f01000b1 <_panic>$/;"	l
f01028b7	obj/kern/kernel.asm	/^f01028b7:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	8d 83 be 5f f8 ff    	lea    -0x7a042(%ebx),%eax$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	50                   	push   %eax$/;"	l
f01028c1	obj/kern/kernel.asm	/^f01028c1:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01028c7	obj/kern/kernel.asm	/^f01028c7:	50                   	push   %eax$/;"	l
f01028c8	obj/kern/kernel.asm	/^f01028c8:	68 a6 03 00 00       	push   $0x3a6$/;"	l
f01028cd	obj/kern/kernel.asm	/^f01028cd:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	50                   	push   %eax$/;"	l
f01028d4	obj/kern/kernel.asm	/^f01028d4:	e8 d8 d7 ff ff       	call   f01000b1 <_panic>$/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01028dc	obj/kern/kernel.asm	/^f01028dc:	8d 83 dc 5a f8 ff    	lea    -0x7a524(%ebx),%eax$/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	50                   	push   %eax$/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01028e9	obj/kern/kernel.asm	/^f01028e9:	50                   	push   %eax$/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	68 aa 03 00 00       	push   $0x3aa$/;"	l
f01028ef	obj/kern/kernel.asm	/^f01028ef:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01028f5	obj/kern/kernel.asm	/^f01028f5:	50                   	push   %eax$/;"	l
f01028f6	obj/kern/kernel.asm	/^f01028f6:	e8 b6 d7 ff ff       	call   f01000b1 <_panic>$/;"	l
f01028fb	obj/kern/kernel.asm	/^f01028fb:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	8d 83 38 5b f8 ff    	lea    -0x7a4c8(%ebx),%eax$/;"	l
f0102904	obj/kern/kernel.asm	/^f0102904:	50                   	push   %eax$/;"	l
f0102905	obj/kern/kernel.asm	/^f0102905:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010290b	obj/kern/kernel.asm	/^f010290b:	50                   	push   %eax$/;"	l
f010290c	obj/kern/kernel.asm	/^f010290c:	68 ab 03 00 00       	push   $0x3ab$/;"	l
f0102911	obj/kern/kernel.asm	/^f0102911:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917:	50                   	push   %eax$/;"	l
f0102918	obj/kern/kernel.asm	/^f0102918:	e8 94 d7 ff ff       	call   f01000b1 <_panic>$/;"	l
f010291d	obj/kern/kernel.asm	/^f010291d:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102920	obj/kern/kernel.asm	/^f0102920:	8d 83 d3 5f f8 ff    	lea    -0x7a02d(%ebx),%eax$/;"	l
f0102926	obj/kern/kernel.asm	/^f0102926:	50                   	push   %eax$/;"	l
f0102927	obj/kern/kernel.asm	/^f0102927:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010292d	obj/kern/kernel.asm	/^f010292d:	50                   	push   %eax$/;"	l
f010292e	obj/kern/kernel.asm	/^f010292e:	68 ac 03 00 00       	push   $0x3ac$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102939	obj/kern/kernel.asm	/^f0102939:	50                   	push   %eax$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	e8 72 d7 ff ff       	call   f01000b1 <_panic>$/;"	l
f010293f	obj/kern/kernel.asm	/^f010293f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102942	obj/kern/kernel.asm	/^f0102942:	8d 83 a1 5f f8 ff    	lea    -0x7a05f(%ebx),%eax$/;"	l
f0102948	obj/kern/kernel.asm	/^f0102948:	50                   	push   %eax$/;"	l
f0102949	obj/kern/kernel.asm	/^f0102949:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010294f	obj/kern/kernel.asm	/^f010294f:	50                   	push   %eax$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	68 ad 03 00 00       	push   $0x3ad$/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010295b	obj/kern/kernel.asm	/^f010295b:	50                   	push   %eax$/;"	l
f010295c	obj/kern/kernel.asm	/^f010295c:	e8 50 d7 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102961	obj/kern/kernel.asm	/^f0102961:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	8d 83 60 5b f8 ff    	lea    -0x7a4a0(%ebx),%eax$/;"	l
f010296a	obj/kern/kernel.asm	/^f010296a:	50                   	push   %eax$/;"	l
f010296b	obj/kern/kernel.asm	/^f010296b:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102971	obj/kern/kernel.asm	/^f0102971:	50                   	push   %eax$/;"	l
f0102972	obj/kern/kernel.asm	/^f0102972:	68 b0 03 00 00       	push   $0x3b0$/;"	l
f0102977	obj/kern/kernel.asm	/^f0102977:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010297d	obj/kern/kernel.asm	/^f010297d:	50                   	push   %eax$/;"	l
f010297e	obj/kern/kernel.asm	/^f010297e:	e8 2e d7 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102983	obj/kern/kernel.asm	/^f0102983:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102986	obj/kern/kernel.asm	/^f0102986:	8d 83 f5 5e f8 ff    	lea    -0x7a10b(%ebx),%eax$/;"	l
f010298c	obj/kern/kernel.asm	/^f010298c:	50                   	push   %eax$/;"	l
f010298d	obj/kern/kernel.asm	/^f010298d:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102993	obj/kern/kernel.asm	/^f0102993:	50                   	push   %eax$/;"	l
f0102994	obj/kern/kernel.asm	/^f0102994:	68 b3 03 00 00       	push   $0x3b3$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010299f	obj/kern/kernel.asm	/^f010299f:	50                   	push   %eax$/;"	l
f01029a0	obj/kern/kernel.asm	/^f01029a0:	e8 0c d7 ff ff       	call   f01000b1 <_panic>$/;"	l
f01029a5	obj/kern/kernel.asm	/^f01029a5:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01029a8	obj/kern/kernel.asm	/^f01029a8:	8d 83 04 58 f8 ff    	lea    -0x7a7fc(%ebx),%eax$/;"	l
f01029ae	obj/kern/kernel.asm	/^f01029ae:	50                   	push   %eax$/;"	l
f01029af	obj/kern/kernel.asm	/^f01029af:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01029b5	obj/kern/kernel.asm	/^f01029b5:	50                   	push   %eax$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	68 b6 03 00 00       	push   $0x3b6$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01029c1	obj/kern/kernel.asm	/^f01029c1:	50                   	push   %eax$/;"	l
f01029c2	obj/kern/kernel.asm	/^f01029c2:	e8 ea d6 ff ff       	call   f01000b1 <_panic>$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01029ca	obj/kern/kernel.asm	/^f01029ca:	8d 83 58 5f f8 ff    	lea    -0x7a0a8(%ebx),%eax$/;"	l
f01029d0	obj/kern/kernel.asm	/^f01029d0:	50                   	push   %eax$/;"	l
f01029d1	obj/kern/kernel.asm	/^f01029d1:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01029d7	obj/kern/kernel.asm	/^f01029d7:	50                   	push   %eax$/;"	l
f01029d8	obj/kern/kernel.asm	/^f01029d8:	68 b8 03 00 00       	push   $0x3b8$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01029e3	obj/kern/kernel.asm	/^f01029e3:	50                   	push   %eax$/;"	l
f01029e4	obj/kern/kernel.asm	/^f01029e4:	e8 c8 d6 ff ff       	call   f01000b1 <_panic>$/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	52                   	push   %edx$/;"	l
f01029ea	obj/kern/kernel.asm	/^f01029ea:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f01029f3	obj/kern/kernel.asm	/^f01029f3:	50                   	push   %eax$/;"	l
f01029f4	obj/kern/kernel.asm	/^f01029f4:	68 bf 03 00 00       	push   $0x3bf$/;"	l
f01029f9	obj/kern/kernel.asm	/^f01029f9:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01029ff	obj/kern/kernel.asm	/^f01029ff:	50                   	push   %eax$/;"	l
f0102a00	obj/kern/kernel.asm	/^f0102a00:	e8 ac d6 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102a08	obj/kern/kernel.asm	/^f0102a08:	8d 83 e4 5f f8 ff    	lea    -0x7a01c(%ebx),%eax$/;"	l
f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	50                   	push   %eax$/;"	l
f0102a0f	obj/kern/kernel.asm	/^f0102a0f:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	50                   	push   %eax$/;"	l
f0102a16	obj/kern/kernel.asm	/^f0102a16:	68 c0 03 00 00       	push   $0x3c0$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102a21	obj/kern/kernel.asm	/^f0102a21:	50                   	push   %eax$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	e8 8a d6 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102a27	obj/kern/kernel.asm	/^f0102a27:	50                   	push   %eax$/;"	l
f0102a28	obj/kern/kernel.asm	/^f0102a28:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f0102a31	obj/kern/kernel.asm	/^f0102a31:	50                   	push   %eax$/;"	l
f0102a32	obj/kern/kernel.asm	/^f0102a32:	6a 56                	push   $0x56$/;"	l
f0102a34	obj/kern/kernel.asm	/^f0102a34:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f0102a3a	obj/kern/kernel.asm	/^f0102a3a:	50                   	push   %eax$/;"	l
f0102a3b	obj/kern/kernel.asm	/^f0102a3b:	e8 71 d6 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102a40	obj/kern/kernel.asm	/^f0102a40:	52                   	push   %edx$/;"	l
f0102a41	obj/kern/kernel.asm	/^f0102a41:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102a44	obj/kern/kernel.asm	/^f0102a44:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f0102a4a	obj/kern/kernel.asm	/^f0102a4a:	50                   	push   %eax$/;"	l
f0102a4b	obj/kern/kernel.asm	/^f0102a4b:	6a 56                	push   $0x56$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f0102a53	obj/kern/kernel.asm	/^f0102a53:	50                   	push   %eax$/;"	l
f0102a54	obj/kern/kernel.asm	/^f0102a54:	e8 58 d6 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102a59	obj/kern/kernel.asm	/^f0102a59:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	8d 83 fc 5f f8 ff    	lea    -0x7a004(%ebx),%eax$/;"	l
f0102a62	obj/kern/kernel.asm	/^f0102a62:	50                   	push   %eax$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	50                   	push   %eax$/;"	l
f0102a6a	obj/kern/kernel.asm	/^f0102a6a:	68 ca 03 00 00       	push   $0x3ca$/;"	l
f0102a6f	obj/kern/kernel.asm	/^f0102a6f:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	50                   	push   %eax$/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	e8 36 d6 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102a7b	obj/kern/kernel.asm	/^f0102a7b:	50                   	push   %eax$/;"	l
f0102a7c	obj/kern/kernel.asm	/^f0102a7c:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102a7f	obj/kern/kernel.asm	/^f0102a7f:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f0102a85	obj/kern/kernel.asm	/^f0102a85:	50                   	push   %eax$/;"	l
f0102a86	obj/kern/kernel.asm	/^f0102a86:	68 d3 00 00 00       	push   $0xd3$/;"	l
f0102a8b	obj/kern/kernel.asm	/^f0102a8b:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	50                   	push   %eax$/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	e8 1a d6 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	50                   	push   %eax$/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102a9b	obj/kern/kernel.asm	/^f0102a9b:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f0102aa1	obj/kern/kernel.asm	/^f0102aa1:	50                   	push   %eax$/;"	l
f0102aa2	obj/kern/kernel.asm	/^f0102aa2:	68 db 00 00 00       	push   $0xdb$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	50                   	push   %eax$/;"	l
f0102aae	obj/kern/kernel.asm	/^f0102aae:	e8 fe d5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102ab3	obj/kern/kernel.asm	/^f0102ab3:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	ff b3 fc ff ff ff    	pushl  -0x4(%ebx)$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	50                   	push   %eax$/;"	l
f0102ac3	obj/kern/kernel.asm	/^f0102ac3:	68 e8 00 00 00       	push   $0xe8$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	50                   	push   %eax$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	e8 dd d5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102ad4	obj/kern/kernel.asm	/^f0102ad4:	ff 75 c0             	pushl  -0x40(%ebp)$/;"	l
f0102ad7	obj/kern/kernel.asm	/^f0102ad7:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102ada	obj/kern/kernel.asm	/^f0102ada:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f0102ae0	obj/kern/kernel.asm	/^f0102ae0:	50                   	push   %eax$/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	68 07 03 00 00       	push   $0x307$/;"	l
f0102ae6	obj/kern/kernel.asm	/^f0102ae6:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102aec	obj/kern/kernel.asm	/^f0102aec:	50                   	push   %eax$/;"	l
f0102aed	obj/kern/kernel.asm	/^f0102aed:	e8 bf d5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102af2	obj/kern/kernel.asm	/^f0102af2:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102af8	obj/kern/kernel.asm	/^f0102af8:	39 5d d0             	cmp    %ebx,-0x30(%ebp)$/;"	l
f0102afb	obj/kern/kernel.asm	/^f0102afb:	76 3f                	jbe    f0102b3c <mem_init+0x1760>$/;"	l
f0102afd	obj/kern/kernel.asm	/^f0102afd:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102b03	obj/kern/kernel.asm	/^f0102b03:	89 f0                	mov    %esi,%eax$/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	e8 db de ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0102b0a	obj/kern/kernel.asm	/^f0102b0a:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f0102b11	obj/kern/kernel.asm	/^f0102b11:	76 c1                	jbe    f0102ad4 <mem_init+0x16f8>$/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	8d 14 3b             	lea    (%ebx,%edi,1),%edx$/;"	l
f0102b16	obj/kern/kernel.asm	/^f0102b16:	39 d0                	cmp    %edx,%eax$/;"	l
f0102b18	obj/kern/kernel.asm	/^f0102b18:	74 d8                	je     f0102af2 <mem_init+0x1716>$/;"	l
f0102b1a	obj/kern/kernel.asm	/^f0102b1a:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102b1d	obj/kern/kernel.asm	/^f0102b1d:	8d 83 84 5b f8 ff    	lea    -0x7a47c(%ebx),%eax$/;"	l
f0102b23	obj/kern/kernel.asm	/^f0102b23:	50                   	push   %eax$/;"	l
f0102b24	obj/kern/kernel.asm	/^f0102b24:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102b2a	obj/kern/kernel.asm	/^f0102b2a:	50                   	push   %eax$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	68 07 03 00 00       	push   $0x307$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102b36	obj/kern/kernel.asm	/^f0102b36:	50                   	push   %eax$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	e8 75 d5 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102b3c	obj/kern/kernel.asm	/^f0102b3c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	c7 c0 28 23 18 f0    	mov    $0xf0182328,%eax$/;"	l
f0102b45	obj/kern/kernel.asm	/^f0102b45:	8b 00                	mov    (%eax),%eax$/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102b4a	obj/kern/kernel.asm	/^f0102b4a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102b4d	obj/kern/kernel.asm	/^f0102b4d:	bf 00 00 c0 ee       	mov    $0xeec00000,%edi$/;"	l
f0102b52	obj/kern/kernel.asm	/^f0102b52:	8d 98 00 00 40 21    	lea    0x21400000(%eax),%ebx$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	89 fa                	mov    %edi,%edx$/;"	l
f0102b5a	obj/kern/kernel.asm	/^f0102b5a:	89 f0                	mov    %esi,%eax$/;"	l
f0102b5c	obj/kern/kernel.asm	/^f0102b5c:	e8 84 de ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	76 3d                	jbe    f0102ba7 <mem_init+0x17cb>$/;"	l
f0102b6a	obj/kern/kernel.asm	/^f0102b6a:	8d 14 3b             	lea    (%ebx,%edi,1),%edx$/;"	l
f0102b6d	obj/kern/kernel.asm	/^f0102b6d:	39 d0                	cmp    %edx,%eax$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	75 54                	jne    f0102bc5 <mem_init+0x17e9>$/;"	l
f0102b71	obj/kern/kernel.asm	/^f0102b71:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	81 ff 00 80 c1 ee    	cmp    $0xeec18000,%edi$/;"	l
f0102b7d	obj/kern/kernel.asm	/^f0102b7d:	75 d9                	jne    f0102b58 <mem_init+0x177c>$/;"	l
f0102b7f	obj/kern/kernel.asm	/^f0102b7f:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0102b82	obj/kern/kernel.asm	/^f0102b82:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102b8a	obj/kern/kernel.asm	/^f0102b8a:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	73 7b                	jae    f0102c09 <mem_init+0x182d>$/;"	l
f0102b8e	obj/kern/kernel.asm	/^f0102b8e:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	89 f0                	mov    %esi,%eax$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	e8 4a de ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0102b9b	obj/kern/kernel.asm	/^f0102b9b:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102b9d	obj/kern/kernel.asm	/^f0102b9d:	75 48                	jne    f0102be7 <mem_init+0x180b>$/;"	l
f0102b9f	obj/kern/kernel.asm	/^f0102b9f:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ba5	obj/kern/kernel.asm	/^f0102ba5:	eb e3                	jmp    f0102b8a <mem_init+0x17ae>$/;"	l
f0102ba7	obj/kern/kernel.asm	/^f0102ba7:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f0102baa	obj/kern/kernel.asm	/^f0102baa:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	50                   	push   %eax$/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	68 0c 03 00 00       	push   $0x30c$/;"	l
f0102bb9	obj/kern/kernel.asm	/^f0102bb9:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102bbf	obj/kern/kernel.asm	/^f0102bbf:	50                   	push   %eax$/;"	l
f0102bc0	obj/kern/kernel.asm	/^f0102bc0:	e8 ec d4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102bc5	obj/kern/kernel.asm	/^f0102bc5:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102bc8	obj/kern/kernel.asm	/^f0102bc8:	8d 83 b8 5b f8 ff    	lea    -0x7a448(%ebx),%eax$/;"	l
f0102bce	obj/kern/kernel.asm	/^f0102bce:	50                   	push   %eax$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102bd5	obj/kern/kernel.asm	/^f0102bd5:	50                   	push   %eax$/;"	l
f0102bd6	obj/kern/kernel.asm	/^f0102bd6:	68 0c 03 00 00       	push   $0x30c$/;"	l
f0102bdb	obj/kern/kernel.asm	/^f0102bdb:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102be1	obj/kern/kernel.asm	/^f0102be1:	50                   	push   %eax$/;"	l
f0102be2	obj/kern/kernel.asm	/^f0102be2:	e8 ca d4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102be7	obj/kern/kernel.asm	/^f0102be7:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102bea	obj/kern/kernel.asm	/^f0102bea:	8d 83 ec 5b f8 ff    	lea    -0x7a414(%ebx),%eax$/;"	l
f0102bf0	obj/kern/kernel.asm	/^f0102bf0:	50                   	push   %eax$/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102bf7	obj/kern/kernel.asm	/^f0102bf7:	50                   	push   %eax$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	68 10 03 00 00       	push   $0x310$/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102c03	obj/kern/kernel.asm	/^f0102c03:	50                   	push   %eax$/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	e8 a8 d4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	bb 00 80 ff ef       	mov    $0xefff8000,%ebx$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	8b 7d c8             	mov    -0x38(%ebp),%edi$/;"	l
f0102c11	obj/kern/kernel.asm	/^f0102c11:	81 c7 00 80 00 20    	add    $0x20008000,%edi$/;"	l
f0102c17	obj/kern/kernel.asm	/^f0102c17:	89 da                	mov    %ebx,%edx$/;"	l
f0102c19	obj/kern/kernel.asm	/^f0102c19:	89 f0                	mov    %esi,%eax$/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	e8 c5 dd ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0102c20	obj/kern/kernel.asm	/^f0102c20:	8d 14 1f             	lea    (%edi,%ebx,1),%edx$/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	39 c2                	cmp    %eax,%edx$/;"	l
f0102c25	obj/kern/kernel.asm	/^f0102c25:	75 26                	jne    f0102c4d <mem_init+0x1871>$/;"	l
f0102c27	obj/kern/kernel.asm	/^f0102c27:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102c2d	obj/kern/kernel.asm	/^f0102c2d:	81 fb 00 00 00 f0    	cmp    $0xf0000000,%ebx$/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	75 e2                	jne    f0102c17 <mem_init+0x183b>$/;"	l
f0102c35	obj/kern/kernel.asm	/^f0102c35:	ba 00 00 c0 ef       	mov    $0xefc00000,%edx$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	89 f0                	mov    %esi,%eax$/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	e8 a4 dd ff ff       	call   f01009e5 <check_va2pa>$/;"	l
f0102c41	obj/kern/kernel.asm	/^f0102c41:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102c44	obj/kern/kernel.asm	/^f0102c44:	75 29                	jne    f0102c6f <mem_init+0x1893>$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	eb 6d                	jmp    f0102cba <mem_init+0x18de>$/;"	l
f0102c4d	obj/kern/kernel.asm	/^f0102c4d:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	8d 83 14 5c f8 ff    	lea    -0x7a3ec(%ebx),%eax$/;"	l
f0102c56	obj/kern/kernel.asm	/^f0102c56:	50                   	push   %eax$/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102c5d	obj/kern/kernel.asm	/^f0102c5d:	50                   	push   %eax$/;"	l
f0102c5e	obj/kern/kernel.asm	/^f0102c5e:	68 14 03 00 00       	push   $0x314$/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	50                   	push   %eax$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	e8 42 d4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102c72	obj/kern/kernel.asm	/^f0102c72:	8d 83 5c 5c f8 ff    	lea    -0x7a3a4(%ebx),%eax$/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	50                   	push   %eax$/;"	l
f0102c79	obj/kern/kernel.asm	/^f0102c79:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	50                   	push   %eax$/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	68 15 03 00 00       	push   $0x315$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	50                   	push   %eax$/;"	l
f0102c8c	obj/kern/kernel.asm	/^f0102c8c:	e8 20 d4 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102c91	obj/kern/kernel.asm	/^f0102c91:	f6 04 86 01          	testb  $0x1,(%esi,%eax,4)$/;"	l
f0102c95	obj/kern/kernel.asm	/^f0102c95:	74 52                	je     f0102ce9 <mem_init+0x190d>$/;"	l
f0102c97	obj/kern/kernel.asm	/^f0102c97:	83 c0 01             	add    $0x1,%eax$/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
f0102c9f	obj/kern/kernel.asm	/^f0102c9f:	0f 87 bb 00 00 00    	ja     f0102d60 <mem_init+0x1984>$/;"	l
f0102ca5	obj/kern/kernel.asm	/^f0102ca5:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f0102caa	obj/kern/kernel.asm	/^f0102caa:	72 0e                	jb     f0102cba <mem_init+0x18de>$/;"	l
f0102cac	obj/kern/kernel.asm	/^f0102cac:	3d bd 03 00 00       	cmp    $0x3bd,%eax$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	76 de                	jbe    f0102c91 <mem_init+0x18b5>$/;"	l
f0102cb3	obj/kern/kernel.asm	/^f0102cb3:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	74 d7                	je     f0102c91 <mem_init+0x18b5>$/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	77 4a                	ja     f0102d0b <mem_init+0x192f>$/;"	l
f0102cc1	obj/kern/kernel.asm	/^f0102cc1:	83 3c 86 00          	cmpl   $0x0,(%esi,%eax,4)$/;"	l
f0102cc5	obj/kern/kernel.asm	/^f0102cc5:	74 d0                	je     f0102c97 <mem_init+0x18bb>$/;"	l
f0102cc7	obj/kern/kernel.asm	/^f0102cc7:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	8d 83 4e 60 f8 ff    	lea    -0x79fb2(%ebx),%eax$/;"	l
f0102cd0	obj/kern/kernel.asm	/^f0102cd0:	50                   	push   %eax$/;"	l
f0102cd1	obj/kern/kernel.asm	/^f0102cd1:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102cd7	obj/kern/kernel.asm	/^f0102cd7:	50                   	push   %eax$/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	68 25 03 00 00       	push   $0x325$/;"	l
f0102cdd	obj/kern/kernel.asm	/^f0102cdd:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102ce3	obj/kern/kernel.asm	/^f0102ce3:	50                   	push   %eax$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	e8 c8 d3 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102ce9	obj/kern/kernel.asm	/^f0102ce9:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	8d 83 2c 60 f8 ff    	lea    -0x79fd4(%ebx),%eax$/;"	l
f0102cf2	obj/kern/kernel.asm	/^f0102cf2:	50                   	push   %eax$/;"	l
f0102cf3	obj/kern/kernel.asm	/^f0102cf3:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	50                   	push   %eax$/;"	l
f0102cfa	obj/kern/kernel.asm	/^f0102cfa:	68 1e 03 00 00       	push   $0x31e$/;"	l
f0102cff	obj/kern/kernel.asm	/^f0102cff:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102d05	obj/kern/kernel.asm	/^f0102d05:	50                   	push   %eax$/;"	l
f0102d06	obj/kern/kernel.asm	/^f0102d06:	e8 a6 d3 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102d0b	obj/kern/kernel.asm	/^f0102d0b:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0102d11	obj/kern/kernel.asm	/^f0102d11:	74 2b                	je     f0102d3e <mem_init+0x1962>$/;"	l
f0102d13	obj/kern/kernel.asm	/^f0102d13:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	0f 85 7b ff ff ff    	jne    f0102c97 <mem_init+0x18bb>$/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102d1f	obj/kern/kernel.asm	/^f0102d1f:	8d 83 3d 60 f8 ff    	lea    -0x79fc3(%ebx),%eax$/;"	l
f0102d25	obj/kern/kernel.asm	/^f0102d25:	50                   	push   %eax$/;"	l
f0102d26	obj/kern/kernel.asm	/^f0102d26:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102d2c	obj/kern/kernel.asm	/^f0102d2c:	50                   	push   %eax$/;"	l
f0102d2d	obj/kern/kernel.asm	/^f0102d2d:	68 23 03 00 00       	push   $0x323$/;"	l
f0102d32	obj/kern/kernel.asm	/^f0102d32:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102d38	obj/kern/kernel.asm	/^f0102d38:	50                   	push   %eax$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	e8 73 d3 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102d3e	obj/kern/kernel.asm	/^f0102d3e:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	8d 83 2c 60 f8 ff    	lea    -0x79fd4(%ebx),%eax$/;"	l
f0102d47	obj/kern/kernel.asm	/^f0102d47:	50                   	push   %eax$/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102d4e	obj/kern/kernel.asm	/^f0102d4e:	50                   	push   %eax$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	68 22 03 00 00       	push   $0x322$/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102d5a	obj/kern/kernel.asm	/^f0102d5a:	50                   	push   %eax$/;"	l
f0102d5b	obj/kern/kernel.asm	/^f0102d5b:	e8 51 d3 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102d60	obj/kern/kernel.asm	/^f0102d60:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102d63	obj/kern/kernel.asm	/^f0102d63:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	8d 87 8c 5c f8 ff    	lea    -0x7a374(%edi),%eax$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	50                   	push   %eax$/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	89 fb                	mov    %edi,%ebx$/;"	l
f0102d6f	obj/kern/kernel.asm	/^f0102d6f:	e8 41 0c 00 00       	call   f01039b5 <cprintf>$/;"	l
f0102d74	obj/kern/kernel.asm	/^f0102d74:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0102d7a	obj/kern/kernel.asm	/^f0102d7a:	8b 00                	mov    (%eax),%eax$/;"	l
f0102d7c	obj/kern/kernel.asm	/^f0102d7c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d84	obj/kern/kernel.asm	/^f0102d84:	0f 86 44 02 00 00    	jbe    f0102fce <mem_init+0x1bf2>$/;"	l
f0102d8a	obj/kern/kernel.asm	/^f0102d8a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102d92	obj/kern/kernel.asm	/^f0102d92:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	e8 73 dd ff ff       	call   f0100b0f <check_page_free_list>$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0102da2	obj/kern/kernel.asm	/^f0102da2:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f0102da7	obj/kern/kernel.asm	/^f0102da7:	0f 22 c0             	mov    %eax,%cr0$/;"	l
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
f0102daa	obj/kern/kernel.asm	/^f0102daa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102dad	obj/kern/kernel.asm	/^f0102dad:	6a 00                	push   $0x0$/;"	l
f0102daf	obj/kern/kernel.asm	/^f0102daf:	e8 26 e2 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0102db4	obj/kern/kernel.asm	/^f0102db4:	89 c6                	mov    %eax,%esi$/;"	l
f0102db6	obj/kern/kernel.asm	/^f0102db6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102db9	obj/kern/kernel.asm	/^f0102db9:	85 c0                	test   %eax,%eax$/;"	l
f0102dbb	obj/kern/kernel.asm	/^f0102dbb:	0f 84 29 02 00 00    	je     f0102fea <mem_init+0x1c0e>$/;"	l
f0102dc1	obj/kern/kernel.asm	/^f0102dc1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102dc4	obj/kern/kernel.asm	/^f0102dc4:	6a 00                	push   $0x0$/;"	l
f0102dc6	obj/kern/kernel.asm	/^f0102dc6:	e8 0f e2 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0102dcb	obj/kern/kernel.asm	/^f0102dcb:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102dce	obj/kern/kernel.asm	/^f0102dce:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	85 c0                	test   %eax,%eax$/;"	l
f0102dd3	obj/kern/kernel.asm	/^f0102dd3:	0f 84 33 02 00 00    	je     f010300c <mem_init+0x1c30>$/;"	l
f0102dd9	obj/kern/kernel.asm	/^f0102dd9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ddc	obj/kern/kernel.asm	/^f0102ddc:	6a 00                	push   $0x0$/;"	l
f0102dde	obj/kern/kernel.asm	/^f0102dde:	e8 f7 e1 ff ff       	call   f0100fda <page_alloc>$/;"	l
f0102de3	obj/kern/kernel.asm	/^f0102de3:	89 c7                	mov    %eax,%edi$/;"	l
f0102de5	obj/kern/kernel.asm	/^f0102de5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	85 c0                	test   %eax,%eax$/;"	l
f0102dea	obj/kern/kernel.asm	/^f0102dea:	0f 84 3e 02 00 00    	je     f010302e <mem_init+0x1c52>$/;"	l
f0102df0	obj/kern/kernel.asm	/^f0102df0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	56                   	push   %esi$/;"	l
f0102df4	obj/kern/kernel.asm	/^f0102df4:	e8 69 e2 ff ff       	call   f0101062 <page_free>$/;"	l
f0102df9	obj/kern/kernel.asm	/^f0102df9:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102dfc	obj/kern/kernel.asm	/^f0102dfc:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0102e02	obj/kern/kernel.asm	/^f0102e02:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102e05	obj/kern/kernel.asm	/^f0102e05:	2b 08                	sub    (%eax),%ecx$/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07:	89 c8                	mov    %ecx,%eax$/;"	l
f0102e09	obj/kern/kernel.asm	/^f0102e09:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102e0f	obj/kern/kernel.asm	/^f0102e0f:	89 c1                	mov    %eax,%ecx$/;"	l
f0102e11	obj/kern/kernel.asm	/^f0102e11:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e17	obj/kern/kernel.asm	/^f0102e17:	c7 c2 e8 2f 18 f0    	mov    $0xf0182fe8,%edx$/;"	l
f0102e1d	obj/kern/kernel.asm	/^f0102e1d:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f0102e1f	obj/kern/kernel.asm	/^f0102e1f:	0f 83 2b 02 00 00    	jae    f0103050 <mem_init+0x1c74>$/;"	l
f0102e25	obj/kern/kernel.asm	/^f0102e25:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	6a 01                	push   $0x1$/;"	l
f0102e2f	obj/kern/kernel.asm	/^f0102e2f:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102e34	obj/kern/kernel.asm	/^f0102e34:	50                   	push   %eax$/;"	l
f0102e35	obj/kern/kernel.asm	/^f0102e35:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102e38	obj/kern/kernel.asm	/^f0102e38:	e8 9d 1e 00 00       	call   f0104cda <memset>$/;"	l
f0102e3d	obj/kern/kernel.asm	/^f0102e3d:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102e40	obj/kern/kernel.asm	/^f0102e40:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	89 f9                	mov    %edi,%ecx$/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	2b 08                	sub    (%eax),%ecx$/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	89 c8                	mov    %ecx,%eax$/;"	l
f0102e4c	obj/kern/kernel.asm	/^f0102e4c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	89 c1                	mov    %eax,%ecx$/;"	l
f0102e54	obj/kern/kernel.asm	/^f0102e54:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	c7 c2 e8 2f 18 f0    	mov    $0xf0182fe8,%edx$/;"	l
f0102e60	obj/kern/kernel.asm	/^f0102e60:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f0102e62	obj/kern/kernel.asm	/^f0102e62:	0f 83 fe 01 00 00    	jae    f0103066 <mem_init+0x1c8a>$/;"	l
f0102e68	obj/kern/kernel.asm	/^f0102e68:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102e6b	obj/kern/kernel.asm	/^f0102e6b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102e70	obj/kern/kernel.asm	/^f0102e70:	6a 02                	push   $0x2$/;"	l
f0102e72	obj/kern/kernel.asm	/^f0102e72:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	50                   	push   %eax$/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102e7b	obj/kern/kernel.asm	/^f0102e7b:	e8 5a 1e 00 00       	call   f0104cda <memset>$/;"	l
f0102e80	obj/kern/kernel.asm	/^f0102e80:	6a 02                	push   $0x2$/;"	l
f0102e82	obj/kern/kernel.asm	/^f0102e82:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	53                   	push   %ebx$/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0102e94	obj/kern/kernel.asm	/^f0102e94:	ff 30                	pushl  (%eax)$/;"	l
f0102e96	obj/kern/kernel.asm	/^f0102e96:	e8 95 e4 ff ff       	call   f0101330 <page_insert>$/;"	l
f0102e9b	obj/kern/kernel.asm	/^f0102e9b:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102e9e	obj/kern/kernel.asm	/^f0102e9e:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102ea3	obj/kern/kernel.asm	/^f0102ea3:	0f 85 d3 01 00 00    	jne    f010307c <mem_init+0x1ca0>$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	01 01 01 $/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	0f 85 e5 01 00 00    	jne    f010309e <mem_init+0x1cc2>$/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9:	6a 02                	push   $0x2$/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	57                   	push   %edi$/;"	l
f0102ec1	obj/kern/kernel.asm	/^f0102ec1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102ec4	obj/kern/kernel.asm	/^f0102ec4:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0102eca	obj/kern/kernel.asm	/^f0102eca:	ff 30                	pushl  (%eax)$/;"	l
f0102ecc	obj/kern/kernel.asm	/^f0102ecc:	e8 5f e4 ff ff       	call   f0101330 <page_insert>$/;"	l
f0102ed1	obj/kern/kernel.asm	/^f0102ed1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0102edb	obj/kern/kernel.asm	/^f0102edb:	02 02 02 $/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	0f 85 dc 01 00 00    	jne    f01030c0 <mem_init+0x1ce4>$/;"	l
f0102ee4	obj/kern/kernel.asm	/^f0102ee4:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	0f 85 f3 01 00 00    	jne    f01030e2 <mem_init+0x1d06>$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	0f 85 07 02 00 00    	jne    f0103104 <mem_init+0x1d28>$/;"	l
f0102efd	obj/kern/kernel.asm	/^f0102efd:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0102f04	obj/kern/kernel.asm	/^f0102f04:	03 03 03 $/;"	l
f0102f07	obj/kern/kernel.asm	/^f0102f07:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102f0a	obj/kern/kernel.asm	/^f0102f0a:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0102f10	obj/kern/kernel.asm	/^f0102f10:	89 f9                	mov    %edi,%ecx$/;"	l
f0102f12	obj/kern/kernel.asm	/^f0102f12:	2b 08                	sub    (%eax),%ecx$/;"	l
f0102f14	obj/kern/kernel.asm	/^f0102f14:	89 c8                	mov    %ecx,%eax$/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102f19	obj/kern/kernel.asm	/^f0102f19:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102f1c	obj/kern/kernel.asm	/^f0102f1c:	89 c1                	mov    %eax,%ecx$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102f21	obj/kern/kernel.asm	/^f0102f21:	c7 c2 e8 2f 18 f0    	mov    $0xf0182fe8,%edx$/;"	l
f0102f27	obj/kern/kernel.asm	/^f0102f27:	3b 0a                	cmp    (%edx),%ecx$/;"	l
f0102f29	obj/kern/kernel.asm	/^f0102f29:	0f 83 f7 01 00 00    	jae    f0103126 <mem_init+0x1d4a>$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0102f36	obj/kern/kernel.asm	/^f0102f36:	03 03 03 $/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	0f 85 fd 01 00 00    	jne    f010313c <mem_init+0x1d60>$/;"	l
f0102f3f	obj/kern/kernel.asm	/^f0102f3f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102f42	obj/kern/kernel.asm	/^f0102f42:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102f4a	obj/kern/kernel.asm	/^f0102f4a:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0102f50	obj/kern/kernel.asm	/^f0102f50:	ff 30                	pushl  (%eax)$/;"	l
f0102f52	obj/kern/kernel.asm	/^f0102f52:	e8 9c e3 ff ff       	call   f01012f3 <page_remove>$/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102f5a	obj/kern/kernel.asm	/^f0102f5a:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102f5f	obj/kern/kernel.asm	/^f0102f5f:	0f 85 f9 01 00 00    	jne    f010315e <mem_init+0x1d82>$/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102f72	obj/kern/kernel.asm	/^f0102f72:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0102f7e	obj/kern/kernel.asm	/^f0102f7e:	89 f7                	mov    %esi,%edi$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	2b 38                	sub    (%eax),%edi$/;"	l
f0102f82	obj/kern/kernel.asm	/^f0102f82:	89 f8                	mov    %edi,%eax$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102f87	obj/kern/kernel.asm	/^f0102f87:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	39 c2                	cmp    %eax,%edx$/;"	l
f0102f8c	obj/kern/kernel.asm	/^f0102f8c:	0f 85 ee 01 00 00    	jne    f0103180 <mem_init+0x1da4>$/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102f98	obj/kern/kernel.asm	/^f0102f98:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	0f 85 ff 01 00 00    	jne    f01031a2 <mem_init+0x1dc6>$/;"	l
f0102fa3	obj/kern/kernel.asm	/^f0102fa3:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102fac	obj/kern/kernel.asm	/^f0102fac:	56                   	push   %esi$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	e8 b0 e0 ff ff       	call   f0101062 <page_free>$/;"	l
f0102fb2	obj/kern/kernel.asm	/^f0102fb2:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	8d 83 20 5d f8 ff    	lea    -0x7a2e0(%ebx),%eax$/;"	l
f0102fbb	obj/kern/kernel.asm	/^f0102fbb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	e8 f2 09 00 00       	call   f01039b5 <cprintf>$/;"	l
f0102fc3	obj/kern/kernel.asm	/^f0102fc3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102fc6	obj/kern/kernel.asm	/^f0102fc6:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	5b                   	pop    %ebx$/;"	l
f0102fca	obj/kern/kernel.asm	/^f0102fca:	5e                   	pop    %esi$/;"	l
f0102fcb	obj/kern/kernel.asm	/^f0102fcb:	5f                   	pop    %edi$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	5d                   	pop    %ebp$/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	c3                   	ret    $/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	50                   	push   %eax$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f0102fd8	obj/kern/kernel.asm	/^f0102fd8:	50                   	push   %eax$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	68 fc 00 00 00       	push   $0xfc$/;"	l
f0102fde	obj/kern/kernel.asm	/^f0102fde:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0102fe4	obj/kern/kernel.asm	/^f0102fe4:	50                   	push   %eax$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	e8 c7 d0 ff ff       	call   f01000b1 <_panic>$/;"	l
f0102fea	obj/kern/kernel.asm	/^f0102fea:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102fed	obj/kern/kernel.asm	/^f0102fed:	8d 83 4a 5e f8 ff    	lea    -0x7a1b6(%ebx),%eax$/;"	l
f0102ff3	obj/kern/kernel.asm	/^f0102ff3:	50                   	push   %eax$/;"	l
f0102ff4	obj/kern/kernel.asm	/^f0102ff4:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	50                   	push   %eax$/;"	l
f0102ffb	obj/kern/kernel.asm	/^f0102ffb:	68 e5 03 00 00       	push   $0x3e5$/;"	l
f0103000	obj/kern/kernel.asm	/^f0103000:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	50                   	push   %eax$/;"	l
f0103007	obj/kern/kernel.asm	/^f0103007:	e8 a5 d0 ff ff       	call   f01000b1 <_panic>$/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	8d 83 60 5e f8 ff    	lea    -0x7a1a0(%ebx),%eax$/;"	l
f0103015	obj/kern/kernel.asm	/^f0103015:	50                   	push   %eax$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010301c	obj/kern/kernel.asm	/^f010301c:	50                   	push   %eax$/;"	l
f010301d	obj/kern/kernel.asm	/^f010301d:	68 e6 03 00 00       	push   $0x3e6$/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0103028	obj/kern/kernel.asm	/^f0103028:	50                   	push   %eax$/;"	l
f0103029	obj/kern/kernel.asm	/^f0103029:	e8 83 d0 ff ff       	call   f01000b1 <_panic>$/;"	l
f010302e	obj/kern/kernel.asm	/^f010302e:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0103031	obj/kern/kernel.asm	/^f0103031:	8d 83 76 5e f8 ff    	lea    -0x7a18a(%ebx),%eax$/;"	l
f0103037	obj/kern/kernel.asm	/^f0103037:	50                   	push   %eax$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010303e	obj/kern/kernel.asm	/^f010303e:	50                   	push   %eax$/;"	l
f010303f	obj/kern/kernel.asm	/^f010303f:	68 e7 03 00 00       	push   $0x3e7$/;"	l
f0103044	obj/kern/kernel.asm	/^f0103044:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	50                   	push   %eax$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	e8 61 d0 ff ff       	call   f01000b1 <_panic>$/;"	l
f0103050	obj/kern/kernel.asm	/^f0103050:	50                   	push   %eax$/;"	l
f0103051	obj/kern/kernel.asm	/^f0103051:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f0103057	obj/kern/kernel.asm	/^f0103057:	50                   	push   %eax$/;"	l
f0103058	obj/kern/kernel.asm	/^f0103058:	6a 56                	push   $0x56$/;"	l
f010305a	obj/kern/kernel.asm	/^f010305a:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f0103060	obj/kern/kernel.asm	/^f0103060:	50                   	push   %eax$/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	e8 4b d0 ff ff       	call   f01000b1 <_panic>$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	50                   	push   %eax$/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f010306d	obj/kern/kernel.asm	/^f010306d:	50                   	push   %eax$/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	6a 56                	push   $0x56$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f0103076	obj/kern/kernel.asm	/^f0103076:	50                   	push   %eax$/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	e8 35 d0 ff ff       	call   f01000b1 <_panic>$/;"	l
f010307c	obj/kern/kernel.asm	/^f010307c:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010307f	obj/kern/kernel.asm	/^f010307f:	8d 83 47 5f f8 ff    	lea    -0x7a0b9(%ebx),%eax$/;"	l
f0103085	obj/kern/kernel.asm	/^f0103085:	50                   	push   %eax$/;"	l
f0103086	obj/kern/kernel.asm	/^f0103086:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010308c	obj/kern/kernel.asm	/^f010308c:	50                   	push   %eax$/;"	l
f010308d	obj/kern/kernel.asm	/^f010308d:	68 ec 03 00 00       	push   $0x3ec$/;"	l
f0103092	obj/kern/kernel.asm	/^f0103092:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	50                   	push   %eax$/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	e8 13 d0 ff ff       	call   f01000b1 <_panic>$/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	8d 83 ac 5c f8 ff    	lea    -0x7a354(%ebx),%eax$/;"	l
f01030a7	obj/kern/kernel.asm	/^f01030a7:	50                   	push   %eax$/;"	l
f01030a8	obj/kern/kernel.asm	/^f01030a8:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01030ae	obj/kern/kernel.asm	/^f01030ae:	50                   	push   %eax$/;"	l
f01030af	obj/kern/kernel.asm	/^f01030af:	68 ed 03 00 00       	push   $0x3ed$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01030ba	obj/kern/kernel.asm	/^f01030ba:	50                   	push   %eax$/;"	l
f01030bb	obj/kern/kernel.asm	/^f01030bb:	e8 f1 cf ff ff       	call   f01000b1 <_panic>$/;"	l
f01030c0	obj/kern/kernel.asm	/^f01030c0:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01030c3	obj/kern/kernel.asm	/^f01030c3:	8d 83 d0 5c f8 ff    	lea    -0x7a330(%ebx),%eax$/;"	l
f01030c9	obj/kern/kernel.asm	/^f01030c9:	50                   	push   %eax$/;"	l
f01030ca	obj/kern/kernel.asm	/^f01030ca:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01030d0	obj/kern/kernel.asm	/^f01030d0:	50                   	push   %eax$/;"	l
f01030d1	obj/kern/kernel.asm	/^f01030d1:	68 ef 03 00 00       	push   $0x3ef$/;"	l
f01030d6	obj/kern/kernel.asm	/^f01030d6:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01030dc	obj/kern/kernel.asm	/^f01030dc:	50                   	push   %eax$/;"	l
f01030dd	obj/kern/kernel.asm	/^f01030dd:	e8 cf cf ff ff       	call   f01000b1 <_panic>$/;"	l
f01030e2	obj/kern/kernel.asm	/^f01030e2:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	8d 83 69 5f f8 ff    	lea    -0x7a097(%ebx),%eax$/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	50                   	push   %eax$/;"	l
f01030ec	obj/kern/kernel.asm	/^f01030ec:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	50                   	push   %eax$/;"	l
f01030f3	obj/kern/kernel.asm	/^f01030f3:	68 f0 03 00 00       	push   $0x3f0$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01030fe	obj/kern/kernel.asm	/^f01030fe:	50                   	push   %eax$/;"	l
f01030ff	obj/kern/kernel.asm	/^f01030ff:	e8 ad cf ff ff       	call   f01000b1 <_panic>$/;"	l
f0103104	obj/kern/kernel.asm	/^f0103104:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0103107	obj/kern/kernel.asm	/^f0103107:	8d 83 d3 5f f8 ff    	lea    -0x7a02d(%ebx),%eax$/;"	l
f010310d	obj/kern/kernel.asm	/^f010310d:	50                   	push   %eax$/;"	l
f010310e	obj/kern/kernel.asm	/^f010310e:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0103114	obj/kern/kernel.asm	/^f0103114:	50                   	push   %eax$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	68 f1 03 00 00       	push   $0x3f1$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0103120	obj/kern/kernel.asm	/^f0103120:	50                   	push   %eax$/;"	l
f0103121	obj/kern/kernel.asm	/^f0103121:	e8 8b cf ff ff       	call   f01000b1 <_panic>$/;"	l
f0103126	obj/kern/kernel.asm	/^f0103126:	50                   	push   %eax$/;"	l
f0103127	obj/kern/kernel.asm	/^f0103127:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f010312d	obj/kern/kernel.asm	/^f010312d:	50                   	push   %eax$/;"	l
f010312e	obj/kern/kernel.asm	/^f010312e:	6a 56                	push   $0x56$/;"	l
f0103130	obj/kern/kernel.asm	/^f0103130:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f0103136	obj/kern/kernel.asm	/^f0103136:	50                   	push   %eax$/;"	l
f0103137	obj/kern/kernel.asm	/^f0103137:	e8 75 cf ff ff       	call   f01000b1 <_panic>$/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	8d 83 f4 5c f8 ff    	lea    -0x7a30c(%ebx),%eax$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	50                   	push   %eax$/;"	l
f0103146	obj/kern/kernel.asm	/^f0103146:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010314c	obj/kern/kernel.asm	/^f010314c:	50                   	push   %eax$/;"	l
f010314d	obj/kern/kernel.asm	/^f010314d:	68 f3 03 00 00       	push   $0x3f3$/;"	l
f0103152	obj/kern/kernel.asm	/^f0103152:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	50                   	push   %eax$/;"	l
f0103159	obj/kern/kernel.asm	/^f0103159:	e8 53 cf ff ff       	call   f01000b1 <_panic>$/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	8d 83 a1 5f f8 ff    	lea    -0x7a05f(%ebx),%eax$/;"	l
f0103167	obj/kern/kernel.asm	/^f0103167:	50                   	push   %eax$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	50                   	push   %eax$/;"	l
f010316f	obj/kern/kernel.asm	/^f010316f:	68 f5 03 00 00       	push   $0x3f5$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010317a	obj/kern/kernel.asm	/^f010317a:	50                   	push   %eax$/;"	l
f010317b	obj/kern/kernel.asm	/^f010317b:	e8 31 cf ff ff       	call   f01000b1 <_panic>$/;"	l
f0103180	obj/kern/kernel.asm	/^f0103180:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0103183	obj/kern/kernel.asm	/^f0103183:	8d 83 04 58 f8 ff    	lea    -0x7a7fc(%ebx),%eax$/;"	l
f0103189	obj/kern/kernel.asm	/^f0103189:	50                   	push   %eax$/;"	l
f010318a	obj/kern/kernel.asm	/^f010318a:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0103190	obj/kern/kernel.asm	/^f0103190:	50                   	push   %eax$/;"	l
f0103191	obj/kern/kernel.asm	/^f0103191:	68 f8 03 00 00       	push   $0x3f8$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f010319c	obj/kern/kernel.asm	/^f010319c:	50                   	push   %eax$/;"	l
f010319d	obj/kern/kernel.asm	/^f010319d:	e8 0f cf ff ff       	call   f01000b1 <_panic>$/;"	l
f01031a2	obj/kern/kernel.asm	/^f01031a2:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01031a5	obj/kern/kernel.asm	/^f01031a5:	8d 83 58 5f f8 ff    	lea    -0x7a0a8(%ebx),%eax$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	50                   	push   %eax$/;"	l
f01031ac	obj/kern/kernel.asm	/^f01031ac:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	50                   	push   %eax$/;"	l
f01031b3	obj/kern/kernel.asm	/^f01031b3:	68 fa 03 00 00       	push   $0x3fa$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	8d 83 49 5d f8 ff    	lea    -0x7a2b7(%ebx),%eax$/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	50                   	push   %eax$/;"	l
f01031bf	obj/kern/kernel.asm	/^f01031bf:	e8 ed ce ff ff       	call   f01000b1 <_panic>$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4 <tlb_invalidate>:$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	55                   	push   %ebp$/;"	l
f01031c5	obj/kern/kernel.asm	/^f01031c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01031c7	obj/kern/kernel.asm	/^f01031c7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01031ca	obj/kern/kernel.asm	/^f01031ca:	0f 01 38             	invlpg (%eax)$/;"	l
f01031cd	obj/kern/kernel.asm	/^f01031cd:	5d                   	pop    %ebp$/;"	l
f01031ce	obj/kern/kernel.asm	/^f01031ce:	c3                   	ret    $/;"	l
f01031cf	obj/kern/kernel.asm	/^f01031cf <user_mem_check>:$/;"	l
f01031cf	obj/kern/kernel.asm	/^f01031cf:	55                   	push   %ebp$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	89 e5                	mov    %esp,%ebp$/;"	l
f01031d2	obj/kern/kernel.asm	/^f01031d2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01031d7	obj/kern/kernel.asm	/^f01031d7:	5d                   	pop    %ebp$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	c3                   	ret    $/;"	l
f01031d9	obj/kern/kernel.asm	/^f01031d9 <user_mem_assert>:$/;"	l
f01031d9	obj/kern/kernel.asm	/^f01031d9:	55                   	push   %ebp$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	89 e5                	mov    %esp,%ebp$/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	5d                   	pop    %ebp$/;"	l
f01031dd	obj/kern/kernel.asm	/^f01031dd:	c3                   	ret    $/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de <__x86.get_pc_thunk.cx>:$/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	8b 0c 24             	mov    (%esp),%ecx$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	c3                   	ret    $/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2 <__x86.get_pc_thunk.si>:$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	8b 34 24             	mov    (%esp),%esi$/;"	l
f01031e5	obj/kern/kernel.asm	/^f01031e5:	c3                   	ret    $/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6 <__x86.get_pc_thunk.di>:$/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f01031e9	obj/kern/kernel.asm	/^f01031e9:	c3                   	ret    $/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea <region_alloc>:$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	55                   	push   %ebp$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	89 e5                	mov    %esp,%ebp$/;"	l
f01031ed	obj/kern/kernel.asm	/^f01031ed:	57                   	push   %edi$/;"	l
f01031ee	obj/kern/kernel.asm	/^f01031ee:	56                   	push   %esi$/;"	l
f01031ef	obj/kern/kernel.asm	/^f01031ef:	53                   	push   %ebx$/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	e8 6f cf ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	81 c3 28 ce 07 00    	add    $0x7ce28,%ebx$/;"	l
f01031fe	obj/kern/kernel.asm	/^f01031fe:	89 c7                	mov    %eax,%edi$/;"	l
f0103200	obj/kern/kernel.asm	/^f0103200:	89 d6                	mov    %edx,%esi$/;"	l
f0103202	obj/kern/kernel.asm	/^f0103202:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103208	obj/kern/kernel.asm	/^f0103208:	8d 84 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%eax$/;"	l
f010320f	obj/kern/kernel.asm	/^f010320f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103214	obj/kern/kernel.asm	/^f0103214:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103217	obj/kern/kernel.asm	/^f0103217:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f010321a	obj/kern/kernel.asm	/^f010321a:	73 43                	jae    f010325f <region_alloc+0x75>$/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010321f	obj/kern/kernel.asm	/^f010321f:	6a 00                	push   $0x0$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	e8 b4 dd ff ff       	call   f0100fda <page_alloc>$/;"	l
f0103226	obj/kern/kernel.asm	/^f0103226:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	85 c0                	test   %eax,%eax$/;"	l
f010322b	obj/kern/kernel.asm	/^f010322b:	74 17                	je     f0103244 <region_alloc+0x5a>$/;"	l
f010322d	obj/kern/kernel.asm	/^f010322d:	6a 06                	push   $0x6$/;"	l
f010322f	obj/kern/kernel.asm	/^f010322f:	56                   	push   %esi$/;"	l
f0103230	obj/kern/kernel.asm	/^f0103230:	50                   	push   %eax$/;"	l
f0103231	obj/kern/kernel.asm	/^f0103231:	ff 77 5c             	pushl  0x5c(%edi)$/;"	l
f0103234	obj/kern/kernel.asm	/^f0103234:	e8 f7 e0 ff ff       	call   f0101330 <page_insert>$/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f010323f	obj/kern/kernel.asm	/^f010323f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	eb d3                	jmp    f0103217 <region_alloc+0x2d>$/;"	l
f0103244	obj/kern/kernel.asm	/^f0103244:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103247	obj/kern/kernel.asm	/^f0103247:	8d 83 5c 60 f8 ff    	lea    -0x79fa4(%ebx),%eax$/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	50                   	push   %eax$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	68 21 01 00 00       	push   $0x121$/;"	l
f0103253	obj/kern/kernel.asm	/^f0103253:	8d 83 71 60 f8 ff    	lea    -0x79f8f(%ebx),%eax$/;"	l
f0103259	obj/kern/kernel.asm	/^f0103259:	50                   	push   %eax$/;"	l
f010325a	obj/kern/kernel.asm	/^f010325a:	e8 52 ce ff ff       	call   f01000b1 <_panic>$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103262	obj/kern/kernel.asm	/^f0103262:	5b                   	pop    %ebx$/;"	l
f0103263	obj/kern/kernel.asm	/^f0103263:	5e                   	pop    %esi$/;"	l
f0103264	obj/kern/kernel.asm	/^f0103264:	5f                   	pop    %edi$/;"	l
f0103265	obj/kern/kernel.asm	/^f0103265:	5d                   	pop    %ebp$/;"	l
f0103266	obj/kern/kernel.asm	/^f0103266:	c3                   	ret    $/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267 <envid2env>:$/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	55                   	push   %ebp$/;"	l
f0103268	obj/kern/kernel.asm	/^f0103268:	89 e5                	mov    %esp,%ebp$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	53                   	push   %ebx$/;"	l
f010326b	obj/kern/kernel.asm	/^f010326b:	e8 6e ff ff ff       	call   f01031de <__x86.get_pc_thunk.cx>$/;"	l
f0103270	obj/kern/kernel.asm	/^f0103270:	81 c1 b0 cd 07 00    	add    $0x7cdb0,%ecx$/;"	l
f0103276	obj/kern/kernel.asm	/^f0103276:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103279	obj/kern/kernel.asm	/^f0103279:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	85 d2                	test   %edx,%edx$/;"	l
f010327e	obj/kern/kernel.asm	/^f010327e:	74 41                	je     f01032c1 <envid2env+0x5a>$/;"	l
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
f0103280	obj/kern/kernel.asm	/^f0103280:	89 d0                	mov    %edx,%eax$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f010328d	obj/kern/kernel.asm	/^f010328d:	03 81 08 23 00 00    	add    0x2308(%ecx),%eax$/;"	l
f0103293	obj/kern/kernel.asm	/^f0103293:	83 78 54 00          	cmpl   $0x0,0x54(%eax)$/;"	l
f0103297	obj/kern/kernel.asm	/^f0103297:	74 3a                	je     f01032d3 <envid2env+0x6c>$/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	39 50 48             	cmp    %edx,0x48(%eax)$/;"	l
f010329c	obj/kern/kernel.asm	/^f010329c:	75 35                	jne    f01032d3 <envid2env+0x6c>$/;"	l
f010329e	obj/kern/kernel.asm	/^f010329e:	84 db                	test   %bl,%bl$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	74 12                	je     f01032b4 <envid2env+0x4d>$/;"	l
f01032a2	obj/kern/kernel.asm	/^f01032a2:	8b 91 04 23 00 00    	mov    0x2304(%ecx),%edx$/;"	l
f01032a8	obj/kern/kernel.asm	/^f01032a8:	39 c2                	cmp    %eax,%edx$/;"	l
f01032aa	obj/kern/kernel.asm	/^f01032aa:	74 08                	je     f01032b4 <envid2env+0x4d>$/;"	l
f01032ac	obj/kern/kernel.asm	/^f01032ac:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f01032af	obj/kern/kernel.asm	/^f01032af:	39 58 4c             	cmp    %ebx,0x4c(%eax)$/;"	l
f01032b2	obj/kern/kernel.asm	/^f01032b2:	75 2f                	jne    f01032e3 <envid2env+0x7c>$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01032b7	obj/kern/kernel.asm	/^f01032b7:	89 03                	mov    %eax,(%ebx)$/;"	l
f01032b9	obj/kern/kernel.asm	/^f01032b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01032be	obj/kern/kernel.asm	/^f01032be:	5b                   	pop    %ebx$/;"	l
f01032bf	obj/kern/kernel.asm	/^f01032bf:	5d                   	pop    %ebp$/;"	l
f01032c0	obj/kern/kernel.asm	/^f01032c0:	c3                   	ret    $/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	8b 81 04 23 00 00    	mov    0x2304(%ecx),%eax$/;"	l
f01032c7	obj/kern/kernel.asm	/^f01032c7:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01032ca	obj/kern/kernel.asm	/^f01032ca:	89 01                	mov    %eax,(%ecx)$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01032d1	obj/kern/kernel.asm	/^f01032d1:	eb eb                	jmp    f01032be <envid2env+0x57>$/;"	l
f01032d3	obj/kern/kernel.asm	/^f01032d3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01032d6	obj/kern/kernel.asm	/^f01032d6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01032dc	obj/kern/kernel.asm	/^f01032dc:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	eb db                	jmp    f01032be <envid2env+0x57>$/;"	l
f01032e3	obj/kern/kernel.asm	/^f01032e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01032e6	obj/kern/kernel.asm	/^f01032e6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01032ec	obj/kern/kernel.asm	/^f01032ec:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	eb cb                	jmp    f01032be <envid2env+0x57>$/;"	l
f01032f3	obj/kern/kernel.asm	/^f01032f3 <env_init_percpu>:$/;"	l
f01032f3	obj/kern/kernel.asm	/^f01032f3:	55                   	push   %ebp$/;"	l
f01032f4	obj/kern/kernel.asm	/^f01032f4:	89 e5                	mov    %esp,%ebp$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	e8 0e d4 ff ff       	call   f0100709 <__x86.get_pc_thunk.ax>$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	05 25 cd 07 00       	add    $0x7cd25,%eax$/;"	l
f0103300	obj/kern/kernel.asm	/^f0103300:	8d 80 e0 1f 00 00    	lea    0x1fe0(%eax),%eax$/;"	l
f0103306	obj/kern/kernel.asm	/^f0103306:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103309	obj/kern/kernel.asm	/^f0103309:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f010330e	obj/kern/kernel.asm	/^f010330e:	8e e8                	mov    %eax,%gs$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	8e e0                	mov    %eax,%fs$/;"	l
f0103312	obj/kern/kernel.asm	/^f0103312:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0103317	obj/kern/kernel.asm	/^f0103317:	8e c0                	mov    %eax,%es$/;"	l
f0103319	obj/kern/kernel.asm	/^f0103319:	8e d8                	mov    %eax,%ds$/;"	l
f010331b	obj/kern/kernel.asm	/^f010331b:	8e d0                	mov    %eax,%ss$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	ea 24 33 10 f0 08 00 	ljmp   $0x8,$0xf0103324$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103329	obj/kern/kernel.asm	/^f0103329:	0f 00 d0             	lldt   %ax$/;"	l
f010332c	obj/kern/kernel.asm	/^f010332c:	5d                   	pop    %ebp$/;"	l
f010332d	obj/kern/kernel.asm	/^f010332d:	c3                   	ret    $/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e <env_init>:$/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	55                   	push   %ebp$/;"	l
f010332f	obj/kern/kernel.asm	/^f010332f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103331	obj/kern/kernel.asm	/^f0103331:	57                   	push   %edi$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	56                   	push   %esi$/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	53                   	push   %ebx$/;"	l
f0103334	obj/kern/kernel.asm	/^f0103334:	e8 ad fe ff ff       	call   f01031e6 <__x86.get_pc_thunk.di>$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	81 c7 e7 cc 07 00    	add    $0x7cce7,%edi$/;"	l
f010333f	obj/kern/kernel.asm	/^f010333f:	8b b7 08 23 00 00    	mov    0x2308(%edi),%esi$/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	8d 86 a0 7f 01 00    	lea    0x17fa0(%esi),%eax$/;"	l
f010334b	obj/kern/kernel.asm	/^f010334b:	8d 5e a0             	lea    -0x60(%esi),%ebx$/;"	l
f010334e	obj/kern/kernel.asm	/^f010334e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103353	obj/kern/kernel.asm	/^f0103353:	89 c1                	mov    %eax,%ecx$/;"	l
f0103355	obj/kern/kernel.asm	/^f0103355:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f010335c	obj/kern/kernel.asm	/^f010335c:	c7 40 4c 00 00 00 00 	movl   $0x0,0x4c(%eax)$/;"	l
f0103363	obj/kern/kernel.asm	/^f0103363:	c7 40 50 00 00 00 00 	movl   $0x0,0x50(%eax)$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	c7 40 58 00 00 00 00 	movl   $0x0,0x58(%eax)$/;"	l
f0103378	obj/kern/kernel.asm	/^f0103378:	c7 40 5c 00 00 00 00 	movl   $0x0,0x5c(%eax)$/;"	l
f010337f	obj/kern/kernel.asm	/^f010337f:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	83 e8 60             	sub    $0x60,%eax$/;"	l
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
f0103385	obj/kern/kernel.asm	/^f0103385:	89 ca                	mov    %ecx,%edx$/;"	l
f0103387	obj/kern/kernel.asm	/^f0103387:	39 d8                	cmp    %ebx,%eax$/;"	l
f0103389	obj/kern/kernel.asm	/^f0103389:	75 c8                	jne    f0103353 <env_init+0x25>$/;"	l
f010338b	obj/kern/kernel.asm	/^f010338b:	89 b7 0c 23 00 00    	mov    %esi,0x230c(%edi)$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	e8 5d ff ff ff       	call   f01032f3 <env_init_percpu>$/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	5b                   	pop    %ebx$/;"	l
f0103397	obj/kern/kernel.asm	/^f0103397:	5e                   	pop    %esi$/;"	l
f0103398	obj/kern/kernel.asm	/^f0103398:	5f                   	pop    %edi$/;"	l
f0103399	obj/kern/kernel.asm	/^f0103399:	5d                   	pop    %ebp$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	c3                   	ret    $/;"	l
f010339b	obj/kern/kernel.asm	/^f010339b <env_alloc>:$/;"	l
f010339b	obj/kern/kernel.asm	/^f010339b:	55                   	push   %ebp$/;"	l
f010339c	obj/kern/kernel.asm	/^f010339c:	89 e5                	mov    %esp,%ebp$/;"	l
f010339e	obj/kern/kernel.asm	/^f010339e:	57                   	push   %edi$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	56                   	push   %esi$/;"	l
f01033a0	obj/kern/kernel.asm	/^f01033a0:	53                   	push   %ebx$/;"	l
f01033a1	obj/kern/kernel.asm	/^f01033a1:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01033a4	obj/kern/kernel.asm	/^f01033a4:	e8 be cd ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f01033a9	obj/kern/kernel.asm	/^f01033a9:	81 c3 77 cc 07 00    	add    $0x7cc77,%ebx$/;"	l
f01033af	obj/kern/kernel.asm	/^f01033af:	8b b3 0c 23 00 00    	mov    0x230c(%ebx),%esi$/;"	l
f01033b5	obj/kern/kernel.asm	/^f01033b5:	85 f6                	test   %esi,%esi$/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	0f 84 66 01 00 00    	je     f0103523 <env_alloc+0x188>$/;"	l
f01033bd	obj/kern/kernel.asm	/^f01033bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01033c0	obj/kern/kernel.asm	/^f01033c0:	6a 01                	push   $0x1$/;"	l
f01033c2	obj/kern/kernel.asm	/^f01033c2:	e8 13 dc ff ff       	call   f0100fda <page_alloc>$/;"	l
f01033c7	obj/kern/kernel.asm	/^f01033c7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033ca	obj/kern/kernel.asm	/^f01033ca:	85 c0                	test   %eax,%eax$/;"	l
f01033cc	obj/kern/kernel.asm	/^f01033cc:	0f 84 58 01 00 00    	je     f010352a <env_alloc+0x18f>$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	c7 c2 f0 2f 18 f0    	mov    $0xf0182ff0,%edx$/;"	l
f01033dd	obj/kern/kernel.asm	/^f01033dd:	2b 02                	sub    (%edx),%eax$/;"	l
f01033df	obj/kern/kernel.asm	/^f01033df:	89 c7                	mov    %eax,%edi$/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	c1 ff 03             	sar    $0x3,%edi$/;"	l
f01033e4	obj/kern/kernel.asm	/^f01033e4:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	89 fa                	mov    %edi,%edx$/;"	l
f01033e9	obj/kern/kernel.asm	/^f01033e9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01033ec	obj/kern/kernel.asm	/^f01033ec:	c7 c0 e8 2f 18 f0    	mov    $0xf0182fe8,%eax$/;"	l
f01033f2	obj/kern/kernel.asm	/^f01033f2:	3b 10                	cmp    (%eax),%edx$/;"	l
f01033f4	obj/kern/kernel.asm	/^f01033f4:	0f 83 fa 00 00 00    	jae    f01034f4 <env_alloc+0x159>$/;"	l
f01033fa	obj/kern/kernel.asm	/^f01033fa:	8d 87 00 00 00 f0    	lea    -0x10000000(%edi),%eax$/;"	l
f0103400	obj/kern/kernel.asm	/^f0103400:	89 c1                	mov    %eax,%ecx$/;"	l
f0103402	obj/kern/kernel.asm	/^f0103402:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103405	obj/kern/kernel.asm	/^f0103405:	68 00 10 00 00       	push   $0x1000$/;"	l
f010340a	obj/kern/kernel.asm	/^f010340a:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	ff 30                	pushl  (%eax)$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0103415	obj/kern/kernel.asm	/^f0103415:	51                   	push   %ecx$/;"	l
f0103416	obj/kern/kernel.asm	/^f0103416:	e8 74 19 00 00       	call   f0104d8f <memcpy>$/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	89 46 5c             	mov    %eax,0x5c(%esi)$/;"	l
f0103421	obj/kern/kernel.asm	/^f0103421:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103424	obj/kern/kernel.asm	/^f0103424:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	0f 86 db 00 00 00    	jbe    f010350a <env_alloc+0x16f>$/;"	l
f010342f	obj/kern/kernel.asm	/^f010342f:	83 cf 05             	or     $0x5,%edi$/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103435	obj/kern/kernel.asm	/^f0103435:	89 b8 f4 0e 00 00    	mov    %edi,0xef4(%eax)$/;"	l
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
f010343b	obj/kern/kernel.asm	/^f010343b:	8b 46 48             	mov    0x48(%esi),%eax$/;"	l
f010343e	obj/kern/kernel.asm	/^f010343e:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103443	obj/kern/kernel.asm	/^f0103443:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
f0103448	obj/kern/kernel.asm	/^f0103448:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010344d	obj/kern/kernel.asm	/^f010344d:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	89 f2                	mov    %esi,%edx$/;"	l
f0103452	obj/kern/kernel.asm	/^f0103452:	2b 93 08 23 00 00    	sub    0x2308(%ebx),%edx$/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	c1 fa 05             	sar    $0x5,%edx$/;"	l
f010345b	obj/kern/kernel.asm	/^f010345b:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0103461	obj/kern/kernel.asm	/^f0103461:	09 d0                	or     %edx,%eax$/;"	l
f0103463	obj/kern/kernel.asm	/^f0103463:	89 46 48             	mov    %eax,0x48(%esi)$/;"	l
f0103466	obj/kern/kernel.asm	/^f0103466:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	89 46 4c             	mov    %eax,0x4c(%esi)$/;"	l
f010346c	obj/kern/kernel.asm	/^f010346c:	c7 46 50 00 00 00 00 	movl   $0x0,0x50(%esi)$/;"	l
f0103473	obj/kern/kernel.asm	/^f0103473:	c7 46 54 02 00 00 00 	movl   $0x2,0x54(%esi)$/;"	l
f010347a	obj/kern/kernel.asm	/^f010347a:	c7 46 58 00 00 00 00 	movl   $0x0,0x58(%esi)$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	6a 44                	push   $0x44$/;"	l
f0103486	obj/kern/kernel.asm	/^f0103486:	6a 00                	push   $0x0$/;"	l
f0103488	obj/kern/kernel.asm	/^f0103488:	56                   	push   %esi$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	e8 4c 18 00 00       	call   f0104cda <memset>$/;"	l
f010348e	obj/kern/kernel.asm	/^f010348e:	66 c7 46 24 23 00    	movw   $0x23,0x24(%esi)$/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494:	66 c7 46 20 23 00    	movw   $0x23,0x20(%esi)$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	66 c7 46 40 23 00    	movw   $0x23,0x40(%esi)$/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	c7 46 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%esi)$/;"	l
f01034a7	obj/kern/kernel.asm	/^f01034a7:	66 c7 46 34 1b 00    	movw   $0x1b,0x34(%esi)$/;"	l
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
f01034ad	obj/kern/kernel.asm	/^f01034ad:	8b 46 44             	mov    0x44(%esi),%eax$/;"	l
f01034b0	obj/kern/kernel.asm	/^f01034b0:	89 83 0c 23 00 00    	mov    %eax,0x230c(%ebx)$/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01034b9	obj/kern/kernel.asm	/^f01034b9:	89 30                	mov    %esi,(%eax)$/;"	l
f01034bb	obj/kern/kernel.asm	/^f01034bb:	8b 4e 48             	mov    0x48(%esi),%ecx$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	8b 83 04 23 00 00    	mov    0x2304(%ebx),%eax$/;"	l
f01034c4	obj/kern/kernel.asm	/^f01034c4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01034cc	obj/kern/kernel.asm	/^f01034cc:	85 c0                	test   %eax,%eax$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	74 03                	je     f01034d3 <env_alloc+0x138>$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01034d3	obj/kern/kernel.asm	/^f01034d3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	51                   	push   %ecx$/;"	l
f01034d7	obj/kern/kernel.asm	/^f01034d7:	52                   	push   %edx$/;"	l
f01034d8	obj/kern/kernel.asm	/^f01034d8:	8d 83 7c 60 f8 ff    	lea    -0x79f84(%ebx),%eax$/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	50                   	push   %eax$/;"	l
f01034df	obj/kern/kernel.asm	/^f01034df:	e8 d1 04 00 00       	call   f01039b5 <cprintf>$/;"	l
f01034e4	obj/kern/kernel.asm	/^f01034e4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01034e7	obj/kern/kernel.asm	/^f01034e7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01034ec	obj/kern/kernel.asm	/^f01034ec:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01034ef	obj/kern/kernel.asm	/^f01034ef:	5b                   	pop    %ebx$/;"	l
f01034f0	obj/kern/kernel.asm	/^f01034f0:	5e                   	pop    %esi$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	5f                   	pop    %edi$/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	5d                   	pop    %ebp$/;"	l
f01034f3	obj/kern/kernel.asm	/^f01034f3:	c3                   	ret    $/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	57                   	push   %edi$/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	50                   	push   %eax$/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	6a 56                	push   $0x56$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f0103504	obj/kern/kernel.asm	/^f0103504:	50                   	push   %eax$/;"	l
f0103505	obj/kern/kernel.asm	/^f0103505:	e8 a7 cb ff ff       	call   f01000b1 <_panic>$/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	50                   	push   %eax$/;"	l
f010350b	obj/kern/kernel.asm	/^f010350b:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	50                   	push   %eax$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	68 c8 00 00 00       	push   $0xc8$/;"	l
f0103517	obj/kern/kernel.asm	/^f0103517:	8d 83 71 60 f8 ff    	lea    -0x79f8f(%ebx),%eax$/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	50                   	push   %eax$/;"	l
f010351e	obj/kern/kernel.asm	/^f010351e:	e8 8e cb ff ff       	call   f01000b1 <_panic>$/;"	l
f0103523	obj/kern/kernel.asm	/^f0103523:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	eb c2                	jmp    f01034ec <env_alloc+0x151>$/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f:	eb bb                	jmp    f01034ec <env_alloc+0x151>$/;"	l
f0103531	obj/kern/kernel.asm	/^f0103531 <env_create>:$/;"	l
f0103531	obj/kern/kernel.asm	/^f0103531:	55                   	push   %ebp$/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	89 e5                	mov    %esp,%ebp$/;"	l
f0103534	obj/kern/kernel.asm	/^f0103534:	57                   	push   %edi$/;"	l
f0103535	obj/kern/kernel.asm	/^f0103535:	56                   	push   %esi$/;"	l
f0103536	obj/kern/kernel.asm	/^f0103536:	53                   	push   %ebx$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	83 ec 34             	sub    $0x34,%esp$/;"	l
f010353a	obj/kern/kernel.asm	/^f010353a:	e8 28 cc ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	81 c3 e1 ca 07 00    	add    $0x7cae1,%ebx$/;"	l
f0103545	obj/kern/kernel.asm	/^f0103545:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	6a 00                	push   $0x0$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	50                   	push   %eax$/;"	l
f010354e	obj/kern/kernel.asm	/^f010354e:	e8 48 fe ff ff       	call   f010339b <env_alloc>$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	83 c4 10             	add    $0x10,%esp$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103562	obj/kern/kernel.asm	/^f0103562:	75 2c                	jne    f0103590 <env_create+0x5f>$/;"	l
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
f0103564	obj/kern/kernel.asm	/^f0103564:	89 fe                	mov    %edi,%esi$/;"	l
f0103566	obj/kern/kernel.asm	/^f0103566:	03 77 1c             	add    0x1c(%edi),%esi$/;"	l
eph	obj/kern/kernel.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
f0103569	obj/kern/kernel.asm	/^f0103569:	0f b7 47 2c          	movzwl 0x2c(%edi),%eax$/;"	l
f010356d	obj/kern/kernel.asm	/^f010356d:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	01 f0                	add    %esi,%eax$/;"	l
f0103572	obj/kern/kernel.asm	/^f0103572:	89 c1                	mov    %eax,%ecx$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103577	obj/kern/kernel.asm	/^f0103577:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f010357a	obj/kern/kernel.asm	/^f010357a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010357f	obj/kern/kernel.asm	/^f010357f:	76 2a                	jbe    f01035ab <env_create+0x7a>$/;"	l
f0103581	obj/kern/kernel.asm	/^f0103581:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103589	obj/kern/kernel.asm	/^f0103589:	89 7d 08             	mov    %edi,0x8(%ebp)$/;"	l
f010358c	obj/kern/kernel.asm	/^f010358c:	89 cf                	mov    %ecx,%edi$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	eb 37                	jmp    f01035c7 <env_create+0x96>$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	8d 83 91 60 f8 ff    	lea    -0x79f6f(%ebx),%eax$/;"	l
f0103599	obj/kern/kernel.asm	/^f0103599:	50                   	push   %eax$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	68 65 01 00 00       	push   $0x165$/;"	l
f010359f	obj/kern/kernel.asm	/^f010359f:	8d 83 71 60 f8 ff    	lea    -0x79f8f(%ebx),%eax$/;"	l
f01035a5	obj/kern/kernel.asm	/^f01035a5:	50                   	push   %eax$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	e8 06 cb ff ff       	call   f01000b1 <_panic>$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	50                   	push   %eax$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f01035b2	obj/kern/kernel.asm	/^f01035b2:	50                   	push   %eax$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	68 6c 01 00 00       	push   $0x16c$/;"	l
f01035b8	obj/kern/kernel.asm	/^f01035b8:	8d 83 71 60 f8 ff    	lea    -0x79f8f(%ebx),%eax$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	50                   	push   %eax$/;"	l
f01035bf	obj/kern/kernel.asm	/^f01035bf:	e8 ed ca ff ff       	call   f01000b1 <_panic>$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	83 c6 20             	add    $0x20,%esi$/;"	l
f01035c7	obj/kern/kernel.asm	/^f01035c7:	39 f7                	cmp    %esi,%edi$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	76 3d                	jbe    f0103608 <env_create+0xd7>$/;"	l
f01035cb	obj/kern/kernel.asm	/^f01035cb:	83 3e 01             	cmpl   $0x1,(%esi)$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	75 f4                	jne    f01035c4 <env_create+0x93>$/;"	l
f01035d0	obj/kern/kernel.asm	/^f01035d0:	8b 4e 14             	mov    0x14(%esi),%ecx$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	8b 56 08             	mov    0x8(%esi),%edx$/;"	l
f01035d6	obj/kern/kernel.asm	/^f01035d6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01035d9	obj/kern/kernel.asm	/^f01035d9:	e8 0c fc ff ff       	call   f01031ea <region_alloc>$/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f01035e4	obj/kern/kernel.asm	/^f01035e4:	6a 00                	push   $0x0$/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	e8 ec 16 00 00       	call   f0104cda <memset>$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7:	03 46 04             	add    0x4(%esi),%eax$/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	50                   	push   %eax$/;"	l
f01035fb	obj/kern/kernel.asm	/^f01035fb:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	e8 8c 17 00 00       	call   f0104d8f <memcpy>$/;"	l
f0103603	obj/kern/kernel.asm	/^f0103603:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103606	obj/kern/kernel.asm	/^f0103606:	eb bc                	jmp    f01035c4 <env_create+0x93>$/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010360b	obj/kern/kernel.asm	/^f010360b:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0103611	obj/kern/kernel.asm	/^f0103611:	8b 00                	mov    (%eax),%eax$/;"	l
f0103613	obj/kern/kernel.asm	/^f0103613:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103618	obj/kern/kernel.asm	/^f0103618:	76 2a                	jbe    f0103644 <env_create+0x113>$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103625	obj/kern/kernel.asm	/^f0103625:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f010362b	obj/kern/kernel.asm	/^f010362b:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103630	obj/kern/kernel.asm	/^f0103630:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	89 d8                	mov    %ebx,%eax$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	e8 ae fb ff ff       	call   f01031ea <region_alloc>$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010363f	obj/kern/kernel.asm	/^f010363f:	5b                   	pop    %ebx$/;"	l
f0103640	obj/kern/kernel.asm	/^f0103640:	5e                   	pop    %esi$/;"	l
f0103641	obj/kern/kernel.asm	/^f0103641:	5f                   	pop    %edi$/;"	l
f0103642	obj/kern/kernel.asm	/^f0103642:	5d                   	pop    %ebp$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	c3                   	ret    $/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	50                   	push   %eax$/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f010364b	obj/kern/kernel.asm	/^f010364b:	50                   	push   %eax$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	68 77 01 00 00       	push   $0x177$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	8d 83 71 60 f8 ff    	lea    -0x79f8f(%ebx),%eax$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	50                   	push   %eax$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	e8 54 ca ff ff       	call   f01000b1 <_panic>$/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d <env_free>:$/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d:	55                   	push   %ebp$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103660	obj/kern/kernel.asm	/^f0103660:	57                   	push   %edi$/;"	l
f0103661	obj/kern/kernel.asm	/^f0103661:	56                   	push   %esi$/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662:	53                   	push   %ebx$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	e8 fc ca ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f010366b	obj/kern/kernel.asm	/^f010366b:	81 c3 b5 c9 07 00    	add    $0x7c9b5,%ebx$/;"	l
f0103671	obj/kern/kernel.asm	/^f0103671:	8b 93 04 23 00 00    	mov    0x2304(%ebx),%edx$/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	3b 55 08             	cmp    0x8(%ebp),%edx$/;"	l
f010367a	obj/kern/kernel.asm	/^f010367a:	75 17                	jne    f0103693 <env_free+0x36>$/;"	l
f010367c	obj/kern/kernel.asm	/^f010367c:	c7 c0 ec 2f 18 f0    	mov    $0xf0182fec,%eax$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	8b 00                	mov    (%eax),%eax$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	76 46                	jbe    f01036d1 <env_free+0x74>$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103693	obj/kern/kernel.asm	/^f0103693:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	8b 48 48             	mov    0x48(%eax),%ecx$/;"	l
f0103699	obj/kern/kernel.asm	/^f0103699:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010369e	obj/kern/kernel.asm	/^f010369e:	85 d2                	test   %edx,%edx$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	74 03                	je     f01036a5 <env_free+0x48>$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	8b 42 48             	mov    0x48(%edx),%eax$/;"	l
f01036a5	obj/kern/kernel.asm	/^f01036a5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01036a8	obj/kern/kernel.asm	/^f01036a8:	51                   	push   %ecx$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	50                   	push   %eax$/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa:	8d 83 a1 60 f8 ff    	lea    -0x79f5f(%ebx),%eax$/;"	l
f01036b0	obj/kern/kernel.asm	/^f01036b0:	50                   	push   %eax$/;"	l
f01036b1	obj/kern/kernel.asm	/^f01036b1:	e8 ff 02 00 00       	call   f01039b5 <cprintf>$/;"	l
f01036b6	obj/kern/kernel.asm	/^f01036b6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	c7 c0 e8 2f 18 f0    	mov    $0xf0182fe8,%eax$/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01036cc	obj/kern/kernel.asm	/^f01036cc:	e9 9f 00 00 00       	jmp    f0103770 <env_free+0x113>$/;"	l
f01036d1	obj/kern/kernel.asm	/^f01036d1:	50                   	push   %eax$/;"	l
f01036d2	obj/kern/kernel.asm	/^f01036d2:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	50                   	push   %eax$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	68 9d 01 00 00       	push   $0x19d$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	8d 83 71 60 f8 ff    	lea    -0x79f8f(%ebx),%eax$/;"	l
f01036e4	obj/kern/kernel.asm	/^f01036e4:	50                   	push   %eax$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	e8 c7 c9 ff ff       	call   f01000b1 <_panic>$/;"	l
f01036ea	obj/kern/kernel.asm	/^f01036ea:	50                   	push   %eax$/;"	l
f01036eb	obj/kern/kernel.asm	/^f01036eb:	8d 83 64 55 f8 ff    	lea    -0x7aa9c(%ebx),%eax$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	50                   	push   %eax$/;"	l
f01036f2	obj/kern/kernel.asm	/^f01036f2:	68 ac 01 00 00       	push   $0x1ac$/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	8d 83 71 60 f8 ff    	lea    -0x79f8f(%ebx),%eax$/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	50                   	push   %eax$/;"	l
f01036fe	obj/kern/kernel.asm	/^f01036fe:	e8 ae c9 ff ff       	call   f01000b1 <_panic>$/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	83 c6 04             	add    $0x4,%esi$/;"	l
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
f0103706	obj/kern/kernel.asm	/^f0103706:	39 fe                	cmp    %edi,%esi$/;"	l
f0103708	obj/kern/kernel.asm	/^f0103708:	74 24                	je     f010372e <env_free+0xd1>$/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	f6 06 01             	testb  $0x1,(%esi)$/;"	l
f010370d	obj/kern/kernel.asm	/^f010370d:	74 f4                	je     f0103703 <env_free+0xa6>$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103712	obj/kern/kernel.asm	/^f0103712:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103715	obj/kern/kernel.asm	/^f0103715:	01 f0                	add    %esi,%eax$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010371a	obj/kern/kernel.asm	/^f010371a:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f010371d	obj/kern/kernel.asm	/^f010371d:	50                   	push   %eax$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103721	obj/kern/kernel.asm	/^f0103721:	ff 70 5c             	pushl  0x5c(%eax)$/;"	l
f0103724	obj/kern/kernel.asm	/^f0103724:	e8 ca db ff ff       	call   f01012f3 <page_remove>$/;"	l
f0103729	obj/kern/kernel.asm	/^f0103729:	83 c4 10             	add    $0x10,%esp$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	eb d5                	jmp    f0103703 <env_free+0xa6>$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103731	obj/kern/kernel.asm	/^f0103731:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f0103734	obj/kern/kernel.asm	/^f0103734:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103737	obj/kern/kernel.asm	/^f0103737:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103744	obj/kern/kernel.asm	/^f0103744:	3b 10                	cmp    (%eax),%edx$/;"	l
f0103746	obj/kern/kernel.asm	/^f0103746:	73 6f                	jae    f01037b7 <env_free+0x15a>$/;"	l
f0103748	obj/kern/kernel.asm	/^f0103748:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010374b	obj/kern/kernel.asm	/^f010374b:	c7 c0 f0 2f 18 f0    	mov    $0xf0182ff0,%eax$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	8b 00                	mov    (%eax),%eax$/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103756	obj/kern/kernel.asm	/^f0103756:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103759	obj/kern/kernel.asm	/^f0103759:	50                   	push   %eax$/;"	l
f010375a	obj/kern/kernel.asm	/^f010375a:	e8 52 d9 ff ff       	call   f01010b1 <page_decref>$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103762	obj/kern/kernel.asm	/^f0103762:	83 45 dc 04          	addl   $0x4,-0x24(%ebp)$/;"	l
f0103766	obj/kern/kernel.asm	/^f0103766:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	3d ec 0e 00 00       	cmp    $0xeec,%eax$/;"	l
f010376e	obj/kern/kernel.asm	/^f010376e:	74 5f                	je     f01037cf <env_free+0x172>$/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	8b 04 10             	mov    (%eax,%edx,1),%eax$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	a8 01                	test   $0x1,%al$/;"	l
f010377e	obj/kern/kernel.asm	/^f010377e:	74 e2                	je     f0103762 <env_free+0x105>$/;"	l
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
f0103780	obj/kern/kernel.asm	/^f0103780:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103785	obj/kern/kernel.asm	/^f0103785:	89 c2                	mov    %eax,%edx$/;"	l
f0103787	obj/kern/kernel.asm	/^f0103787:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f010378d	obj/kern/kernel.asm	/^f010378d:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0103790	obj/kern/kernel.asm	/^f0103790:	39 11                	cmp    %edx,(%ecx)$/;"	l
f0103792	obj/kern/kernel.asm	/^f0103792:	0f 86 52 ff ff ff    	jbe    f01036ea <env_free+0x8d>$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01037a1	obj/kern/kernel.asm	/^f01037a1:	c1 e2 14             	shl    $0x14,%edx$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01037a7	obj/kern/kernel.asm	/^f01037a7:	8d b8 00 10 00 f0    	lea    -0xffff000(%eax),%edi$/;"	l
f01037ad	obj/kern/kernel.asm	/^f01037ad:	f7 d8                	neg    %eax$/;"	l
f01037af	obj/kern/kernel.asm	/^f01037af:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01037b2	obj/kern/kernel.asm	/^f01037b2:	e9 53 ff ff ff       	jmp    f010370a <env_free+0xad>$/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01037ba	obj/kern/kernel.asm	/^f01037ba:	8d 83 bc 56 f8 ff    	lea    -0x7a944(%ebx),%eax$/;"	l
f01037c0	obj/kern/kernel.asm	/^f01037c0:	50                   	push   %eax$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	6a 4f                	push   $0x4f$/;"	l
f01037c3	obj/kern/kernel.asm	/^f01037c3:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f01037c9	obj/kern/kernel.asm	/^f01037c9:	50                   	push   %eax$/;"	l
f01037ca	obj/kern/kernel.asm	/^f01037ca:	e8 e2 c8 ff ff       	call   f01000b1 <_panic>$/;"	l
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
f01037cf	obj/kern/kernel.asm	/^f01037cf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f01037d5	obj/kern/kernel.asm	/^f01037d5:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01037da	obj/kern/kernel.asm	/^f01037da:	76 57                	jbe    f0103833 <env_free+0x1d6>$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	c7 42 5c 00 00 00 00 	movl   $0x0,0x5c(%edx)$/;"	l
f01037e6	obj/kern/kernel.asm	/^f01037e6:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01037ee	obj/kern/kernel.asm	/^f01037ee:	c7 c2 e8 2f 18 f0    	mov    $0xf0182fe8,%edx$/;"	l
f01037f4	obj/kern/kernel.asm	/^f01037f4:	3b 02                	cmp    (%edx),%eax$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	73 54                	jae    f010384c <env_free+0x1ef>$/;"	l
f01037f8	obj/kern/kernel.asm	/^f01037f8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	c7 c2 f0 2f 18 f0    	mov    $0xf0182ff0,%edx$/;"	l
f0103801	obj/kern/kernel.asm	/^f0103801:	8b 12                	mov    (%edx),%edx$/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103806	obj/kern/kernel.asm	/^f0103806:	50                   	push   %eax$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	e8 a5 d8 ff ff       	call   f01010b1 <page_decref>$/;"	l
f010380c	obj/kern/kernel.asm	/^f010380c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010380f	obj/kern/kernel.asm	/^f010380f:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	8b 83 0c 23 00 00    	mov    0x230c(%ebx),%eax$/;"	l
f010381c	obj/kern/kernel.asm	/^f010381c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010381f	obj/kern/kernel.asm	/^f010381f:	89 42 44             	mov    %eax,0x44(%edx)$/;"	l
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
f0103822	obj/kern/kernel.asm	/^f0103822:	89 93 0c 23 00 00    	mov    %edx,0x230c(%ebx)$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	83 c4 10             	add    $0x10,%esp$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010382e	obj/kern/kernel.asm	/^f010382e:	5b                   	pop    %ebx$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	5e                   	pop    %esi$/;"	l
f0103830	obj/kern/kernel.asm	/^f0103830:	5f                   	pop    %edi$/;"	l
f0103831	obj/kern/kernel.asm	/^f0103831:	5d                   	pop    %ebp$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	c3                   	ret    $/;"	l
f0103833	obj/kern/kernel.asm	/^f0103833:	50                   	push   %eax$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f010383a	obj/kern/kernel.asm	/^f010383a:	50                   	push   %eax$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	68 ba 01 00 00       	push   $0x1ba$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	8d 83 71 60 f8 ff    	lea    -0x79f8f(%ebx),%eax$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	50                   	push   %eax$/;"	l
f0103847	obj/kern/kernel.asm	/^f0103847:	e8 65 c8 ff ff       	call   f01000b1 <_panic>$/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	8d 83 bc 56 f8 ff    	lea    -0x7a944(%ebx),%eax$/;"	l
f0103855	obj/kern/kernel.asm	/^f0103855:	50                   	push   %eax$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	6a 4f                	push   $0x4f$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	8d 83 70 5d f8 ff    	lea    -0x7a290(%ebx),%eax$/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	50                   	push   %eax$/;"	l
f010385f	obj/kern/kernel.asm	/^f010385f:	e8 4d c8 ff ff       	call   f01000b1 <_panic>$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864 <env_destroy>:$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	55                   	push   %ebp$/;"	l
f0103865	obj/kern/kernel.asm	/^f0103865:	89 e5                	mov    %esp,%ebp$/;"	l
f0103867	obj/kern/kernel.asm	/^f0103867:	53                   	push   %ebx$/;"	l
f0103868	obj/kern/kernel.asm	/^f0103868:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010386b	obj/kern/kernel.asm	/^f010386b:	e8 f7 c8 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	81 c3 b0 c7 07 00    	add    $0x7c7b0,%ebx$/;"	l
f0103876	obj/kern/kernel.asm	/^f0103876:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103879	obj/kern/kernel.asm	/^f0103879:	e8 df fd ff ff       	call   f010365d <env_free>$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	8d 83 c4 60 f8 ff    	lea    -0x79f3c(%ebx),%eax$/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	e8 29 01 00 00       	call   f01039b5 <cprintf>$/;"	l
f010388c	obj/kern/kernel.asm	/^f010388c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010388f	obj/kern/kernel.asm	/^f010388f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103892	obj/kern/kernel.asm	/^f0103892:	6a 00                	push   $0x0$/;"	l
f0103894	obj/kern/kernel.asm	/^f0103894:	e8 9f cf ff ff       	call   f0100838 <monitor>$/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	83 c4 10             	add    $0x10,%esp$/;"	l
f010389c	obj/kern/kernel.asm	/^f010389c:	eb f1                	jmp    f010388f <env_destroy+0x2b>$/;"	l
f010389e	obj/kern/kernel.asm	/^f010389e <env_pop_tf>:$/;"	l
f010389e	obj/kern/kernel.asm	/^f010389e:	55                   	push   %ebp$/;"	l
f010389f	obj/kern/kernel.asm	/^f010389f:	89 e5                	mov    %esp,%ebp$/;"	l
f01038a1	obj/kern/kernel.asm	/^f01038a1:	53                   	push   %ebx$/;"	l
f01038a2	obj/kern/kernel.asm	/^f01038a2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01038a5	obj/kern/kernel.asm	/^f01038a5:	e8 bd c8 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f01038aa	obj/kern/kernel.asm	/^f01038aa:	81 c3 76 c7 07 00    	add    $0x7c776,%ebx$/;"	l
f01038b0	obj/kern/kernel.asm	/^f01038b0:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	61                   	popa   $/;"	l
f01038b4	obj/kern/kernel.asm	/^f01038b4:	07                   	pop    %es$/;"	l
f01038b5	obj/kern/kernel.asm	/^f01038b5:	1f                   	pop    %ds$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01038b9	obj/kern/kernel.asm	/^f01038b9:	cf                   	iret   $/;"	l
f01038ba	obj/kern/kernel.asm	/^f01038ba:	8d 83 b7 60 f8 ff    	lea    -0x79f49(%ebx),%eax$/;"	l
f01038c0	obj/kern/kernel.asm	/^f01038c0:	50                   	push   %eax$/;"	l
f01038c1	obj/kern/kernel.asm	/^f01038c1:	68 e3 01 00 00       	push   $0x1e3$/;"	l
f01038c6	obj/kern/kernel.asm	/^f01038c6:	8d 83 71 60 f8 ff    	lea    -0x79f8f(%ebx),%eax$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	50                   	push   %eax$/;"	l
f01038cd	obj/kern/kernel.asm	/^f01038cd:	e8 df c7 ff ff       	call   f01000b1 <_panic>$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2 <env_run>:$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	55                   	push   %ebp$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01038d5	obj/kern/kernel.asm	/^f01038d5:	53                   	push   %ebx$/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	e8 89 c8 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	81 c3 42 c7 07 00    	add    $0x7c742,%ebx$/;"	l
f01038e4	obj/kern/kernel.asm	/^f01038e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
f01038e7	obj/kern/kernel.asm	/^f01038e7:	89 83 04 23 00 00    	mov    %eax,0x2304(%ebx)$/;"	l
f01038ed	obj/kern/kernel.asm	/^f01038ed:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f01038f4	obj/kern/kernel.asm	/^f01038f4:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	8b 50 5c             	mov    0x5c(%eax),%edx$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0103901	obj/kern/kernel.asm	/^f0103901:	77 19                	ja     f010391c <env_run+0x4a>$/;"	l
f0103903	obj/kern/kernel.asm	/^f0103903:	52                   	push   %edx$/;"	l
f0103904	obj/kern/kernel.asm	/^f0103904:	8d 83 88 55 f8 ff    	lea    -0x7aa78(%ebx),%eax$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	50                   	push   %eax$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	68 06 02 00 00       	push   $0x206$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	8d 83 71 60 f8 ff    	lea    -0x79f8f(%ebx),%eax$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916:	50                   	push   %eax$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	e8 95 c7 ff ff       	call   f01000b1 <_panic>$/;"	l
f010391c	obj/kern/kernel.asm	/^f010391c:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	0f 22 da             	mov    %edx,%cr3$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103928	obj/kern/kernel.asm	/^f0103928:	50                   	push   %eax$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	e8 70 ff ff ff       	call   f010389e <env_pop_tf>$/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e <mc146818_read>:$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e:	55                   	push   %ebp$/;"	l
f010392f	obj/kern/kernel.asm	/^f010392f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103939	obj/kern/kernel.asm	/^f0103939:	ee                   	out    %al,(%dx)$/;"	l
f010393a	obj/kern/kernel.asm	/^f010393a:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f010393f	obj/kern/kernel.asm	/^f010393f:	ec                   	in     (%dx),%al$/;"	l
f0103940	obj/kern/kernel.asm	/^f0103940:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	5d                   	pop    %ebp$/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944:	c3                   	ret    $/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945 <mc146818_write>:$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	55                   	push   %ebp$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	89 e5                	mov    %esp,%ebp$/;"	l
f0103948	obj/kern/kernel.asm	/^f0103948:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	ee                   	out    %al,(%dx)$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103959	obj/kern/kernel.asm	/^f0103959:	ee                   	out    %al,(%dx)$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	5d                   	pop    %ebp$/;"	l
f010395b	obj/kern/kernel.asm	/^f010395b:	c3                   	ret    $/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c <putch>:$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c:	55                   	push   %ebp$/;"	l
f010395d	obj/kern/kernel.asm	/^f010395d:	89 e5                	mov    %esp,%ebp$/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	53                   	push   %ebx$/;"	l
f0103960	obj/kern/kernel.asm	/^f0103960:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103963	obj/kern/kernel.asm	/^f0103963:	e8 ff c7 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	81 c3 b8 c6 07 00    	add    $0x7c6b8,%ebx$/;"	l
f010396e	obj/kern/kernel.asm	/^f010396e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103971	obj/kern/kernel.asm	/^f0103971:	e8 68 cd ff ff       	call   f01006de <cputchar>$/;"	l
f0103976	obj/kern/kernel.asm	/^f0103976:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103979	obj/kern/kernel.asm	/^f0103979:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010397c	obj/kern/kernel.asm	/^f010397c:	c9                   	leave  $/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	c3                   	ret    $/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e <vcprintf>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e:	55                   	push   %ebp$/;"	l
f010397f	obj/kern/kernel.asm	/^f010397f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103981	obj/kern/kernel.asm	/^f0103981:	53                   	push   %ebx$/;"	l
f0103982	obj/kern/kernel.asm	/^f0103982:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	e8 dd c7 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	81 c3 96 c6 07 00    	add    $0x7c696,%ebx$/;"	l
f0103990	obj/kern/kernel.asm	/^f0103990:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010399a	obj/kern/kernel.asm	/^f010399a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	50                   	push   %eax$/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	8d 83 3c 39 f8 ff    	lea    -0x7c6c4(%ebx),%eax$/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	50                   	push   %eax$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	e8 e1 0b 00 00       	call   f010458e <vprintfmt>$/;"	l
f01039ad	obj/kern/kernel.asm	/^f01039ad:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01039b3	obj/kern/kernel.asm	/^f01039b3:	c9                   	leave  $/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	c3                   	ret    $/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5 <cprintf>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	55                   	push   %ebp$/;"	l
f01039b6	obj/kern/kernel.asm	/^f01039b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01039bb	obj/kern/kernel.asm	/^f01039bb:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
f01039be	obj/kern/kernel.asm	/^f01039be:	50                   	push   %eax$/;"	l
f01039bf	obj/kern/kernel.asm	/^f01039bf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01039c2	obj/kern/kernel.asm	/^f01039c2:	e8 b7 ff ff ff       	call   f010397e <vcprintf>$/;"	l
f01039c7	obj/kern/kernel.asm	/^f01039c7:	c9                   	leave  $/;"	l
f01039c8	obj/kern/kernel.asm	/^f01039c8:	c3                   	ret    $/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9 <trap_init_percpu>:$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	55                   	push   %ebp$/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca:	89 e5                	mov    %esp,%ebp$/;"	l
f01039cc	obj/kern/kernel.asm	/^f01039cc:	57                   	push   %edi$/;"	l
f01039cd	obj/kern/kernel.asm	/^f01039cd:	56                   	push   %esi$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	53                   	push   %ebx$/;"	l
f01039cf	obj/kern/kernel.asm	/^f01039cf:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01039d2	obj/kern/kernel.asm	/^f01039d2:	e8 90 c7 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f01039d7	obj/kern/kernel.asm	/^f01039d7:	81 c3 49 c6 07 00    	add    $0x7c649,%ebx$/;"	l
f01039dd	obj/kern/kernel.asm	/^f01039dd:	c7 83 44 2b 00 00 00 	movl   $0xf0000000,0x2b44(%ebx)$/;"	l
f01039e4	obj/kern/kernel.asm	/^f01039e4:	00 00 f0 $/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	66 c7 83 48 2b 00 00 	movw   $0x10,0x2b48(%ebx)$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	10 00 $/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	66 c7 83 a6 2b 00 00 	movw   $0x68,0x2ba6(%ebx)$/;"	l
f01039f7	obj/kern/kernel.asm	/^f01039f7:	68 00 $/;"	l
f01039f9	obj/kern/kernel.asm	/^f01039f9:	c7 c0 00 b3 11 f0    	mov    $0xf011b300,%eax$/;"	l
f01039ff	obj/kern/kernel.asm	/^f01039ff:	66 c7 40 28 67 00    	movw   $0x67,0x28(%eax)$/;"	l
f0103a05	obj/kern/kernel.asm	/^f0103a05:	8d b3 40 2b 00 00    	lea    0x2b40(%ebx),%esi$/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	66 89 70 2a          	mov    %si,0x2a(%eax)$/;"	l
f0103a0f	obj/kern/kernel.asm	/^f0103a0f:	89 f2                	mov    %esi,%edx$/;"	l
f0103a11	obj/kern/kernel.asm	/^f0103a11:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103a14	obj/kern/kernel.asm	/^f0103a14:	88 50 2c             	mov    %dl,0x2c(%eax)$/;"	l
f0103a17	obj/kern/kernel.asm	/^f0103a17:	0f b6 50 2d          	movzbl 0x2d(%eax),%edx$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
f0103a1e	obj/kern/kernel.asm	/^f0103a1e:	83 ca 09             	or     $0x9,%edx$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
f0103a24	obj/kern/kernel.asm	/^f0103a24:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	88 55 f3             	mov    %dl,-0xd(%ebp)$/;"	l
f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	88 50 2d             	mov    %dl,0x2d(%eax)$/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	0f b6 48 2e          	movzbl 0x2e(%eax),%ecx$/;"	l
f0103a31	obj/kern/kernel.asm	/^f0103a31:	83 e1 c0             	and    $0xffffffc0,%ecx$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	83 c9 40             	or     $0x40,%ecx$/;"	l
f0103a37	obj/kern/kernel.asm	/^f0103a37:	83 e1 7f             	and    $0x7f,%ecx$/;"	l
f0103a3a	obj/kern/kernel.asm	/^f0103a3a:	88 48 2e             	mov    %cl,0x2e(%eax)$/;"	l
f0103a3d	obj/kern/kernel.asm	/^f0103a3d:	c1 ee 18             	shr    $0x18,%esi$/;"	l
f0103a40	obj/kern/kernel.asm	/^f0103a40:	89 f1                	mov    %esi,%ecx$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	88 48 2f             	mov    %cl,0x2f(%eax)$/;"	l
f0103a45	obj/kern/kernel.asm	/^f0103a45:	0f b6 55 f3          	movzbl -0xd(%ebp),%edx$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	88 50 2d             	mov    %dl,0x2d(%eax)$/;"	l
f0103a4f	obj/kern/kernel.asm	/^f0103a4f:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103a54	obj/kern/kernel.asm	/^f0103a54:	0f 00 d8             	ltr    %ax$/;"	l
f0103a57	obj/kern/kernel.asm	/^f0103a57:	8d 83 e8 1f 00 00    	lea    0x1fe8(%ebx),%eax$/;"	l
f0103a5d	obj/kern/kernel.asm	/^f0103a5d:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103a60	obj/kern/kernel.asm	/^f0103a60:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	5b                   	pop    %ebx$/;"	l
f0103a64	obj/kern/kernel.asm	/^f0103a64:	5e                   	pop    %esi$/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	5f                   	pop    %edi$/;"	l
f0103a66	obj/kern/kernel.asm	/^f0103a66:	5d                   	pop    %ebp$/;"	l
f0103a67	obj/kern/kernel.asm	/^f0103a67:	c3                   	ret    $/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68 <trap_init>:$/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68:	55                   	push   %ebp$/;"	l
f0103a69	obj/kern/kernel.asm	/^f0103a69:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	e8 99 cc ff ff       	call   f0100709 <__x86.get_pc_thunk.ax>$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	05 b0 c5 07 00       	add    $0x7c5b0,%eax$/;"	l
f0103a75	obj/kern/kernel.asm	/^f0103a75:	c7 c2 32 41 10 f0    	mov    $0xf0104132,%edx$/;"	l
f0103a7b	obj/kern/kernel.asm	/^f0103a7b:	66 89 90 20 23 00 00 	mov    %dx,0x2320(%eax)$/;"	l
f0103a82	obj/kern/kernel.asm	/^f0103a82:	66 c7 80 22 23 00 00 	movw   $0x8,0x2322(%eax)$/;"	l
f0103a89	obj/kern/kernel.asm	/^f0103a89:	08 00 $/;"	l
f0103a8b	obj/kern/kernel.asm	/^f0103a8b:	c6 80 24 23 00 00 00 	movb   $0x0,0x2324(%eax)$/;"	l
f0103a92	obj/kern/kernel.asm	/^f0103a92:	c6 80 25 23 00 00 8e 	movb   $0x8e,0x2325(%eax)$/;"	l
f0103a99	obj/kern/kernel.asm	/^f0103a99:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103a9c	obj/kern/kernel.asm	/^f0103a9c:	66 89 90 26 23 00 00 	mov    %dx,0x2326(%eax)$/;"	l
f0103aa3	obj/kern/kernel.asm	/^f0103aa3:	c7 c2 38 41 10 f0    	mov    $0xf0104138,%edx$/;"	l
f0103aa9	obj/kern/kernel.asm	/^f0103aa9:	66 89 90 28 23 00 00 	mov    %dx,0x2328(%eax)$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	66 c7 80 2a 23 00 00 	movw   $0x8,0x232a(%eax)$/;"	l
f0103ab7	obj/kern/kernel.asm	/^f0103ab7:	08 00 $/;"	l
f0103ab9	obj/kern/kernel.asm	/^f0103ab9:	c6 80 2c 23 00 00 00 	movb   $0x0,0x232c(%eax)$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	c6 80 2d 23 00 00 8e 	movb   $0x8e,0x232d(%eax)$/;"	l
f0103ac7	obj/kern/kernel.asm	/^f0103ac7:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103aca	obj/kern/kernel.asm	/^f0103aca:	66 89 90 2e 23 00 00 	mov    %dx,0x232e(%eax)$/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	c7 c2 3e 41 10 f0    	mov    $0xf010413e,%edx$/;"	l
f0103ad7	obj/kern/kernel.asm	/^f0103ad7:	66 89 90 38 23 00 00 	mov    %dx,0x2338(%eax)$/;"	l
f0103ade	obj/kern/kernel.asm	/^f0103ade:	66 c7 80 3a 23 00 00 	movw   $0x8,0x233a(%eax)$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	08 00 $/;"	l
f0103ae7	obj/kern/kernel.asm	/^f0103ae7:	c6 80 3c 23 00 00 00 	movb   $0x0,0x233c(%eax)$/;"	l
f0103aee	obj/kern/kernel.asm	/^f0103aee:	c6 80 3d 23 00 00 ee 	movb   $0xee,0x233d(%eax)$/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103af8	obj/kern/kernel.asm	/^f0103af8:	66 89 90 3e 23 00 00 	mov    %dx,0x233e(%eax)$/;"	l
f0103aff	obj/kern/kernel.asm	/^f0103aff:	c7 c2 44 41 10 f0    	mov    $0xf0104144,%edx$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	66 89 90 40 23 00 00 	mov    %dx,0x2340(%eax)$/;"	l
f0103b0c	obj/kern/kernel.asm	/^f0103b0c:	66 c7 80 42 23 00 00 	movw   $0x8,0x2342(%eax)$/;"	l
f0103b13	obj/kern/kernel.asm	/^f0103b13:	08 00 $/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	c6 80 44 23 00 00 00 	movb   $0x0,0x2344(%eax)$/;"	l
f0103b1c	obj/kern/kernel.asm	/^f0103b1c:	c6 80 45 23 00 00 8e 	movb   $0x8e,0x2345(%eax)$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103b26	obj/kern/kernel.asm	/^f0103b26:	66 89 90 46 23 00 00 	mov    %dx,0x2346(%eax)$/;"	l
f0103b2d	obj/kern/kernel.asm	/^f0103b2d:	c7 c2 4a 41 10 f0    	mov    $0xf010414a,%edx$/;"	l
f0103b33	obj/kern/kernel.asm	/^f0103b33:	66 89 90 48 23 00 00 	mov    %dx,0x2348(%eax)$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	66 c7 80 4a 23 00 00 	movw   $0x8,0x234a(%eax)$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	08 00 $/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	c6 80 4c 23 00 00 00 	movb   $0x0,0x234c(%eax)$/;"	l
f0103b4a	obj/kern/kernel.asm	/^f0103b4a:	c6 80 4d 23 00 00 8e 	movb   $0x8e,0x234d(%eax)$/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103b54	obj/kern/kernel.asm	/^f0103b54:	66 89 90 4e 23 00 00 	mov    %dx,0x234e(%eax)$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	c7 c2 50 41 10 f0    	mov    $0xf0104150,%edx$/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	66 89 90 50 23 00 00 	mov    %dx,0x2350(%eax)$/;"	l
f0103b68	obj/kern/kernel.asm	/^f0103b68:	66 c7 80 52 23 00 00 	movw   $0x8,0x2352(%eax)$/;"	l
f0103b6f	obj/kern/kernel.asm	/^f0103b6f:	08 00 $/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	c6 80 54 23 00 00 00 	movb   $0x0,0x2354(%eax)$/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	c6 80 55 23 00 00 8e 	movb   $0x8e,0x2355(%eax)$/;"	l
f0103b7f	obj/kern/kernel.asm	/^f0103b7f:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103b82	obj/kern/kernel.asm	/^f0103b82:	66 89 90 56 23 00 00 	mov    %dx,0x2356(%eax)$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	c7 c2 56 41 10 f0    	mov    $0xf0104156,%edx$/;"	l
f0103b8f	obj/kern/kernel.asm	/^f0103b8f:	66 89 90 58 23 00 00 	mov    %dx,0x2358(%eax)$/;"	l
f0103b96	obj/kern/kernel.asm	/^f0103b96:	66 c7 80 5a 23 00 00 	movw   $0x8,0x235a(%eax)$/;"	l
f0103b9d	obj/kern/kernel.asm	/^f0103b9d:	08 00 $/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	c6 80 5c 23 00 00 00 	movb   $0x0,0x235c(%eax)$/;"	l
f0103ba6	obj/kern/kernel.asm	/^f0103ba6:	c6 80 5d 23 00 00 8e 	movb   $0x8e,0x235d(%eax)$/;"	l
f0103bad	obj/kern/kernel.asm	/^f0103bad:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	66 89 90 5e 23 00 00 	mov    %dx,0x235e(%eax)$/;"	l
f0103bb7	obj/kern/kernel.asm	/^f0103bb7:	c7 c2 5c 41 10 f0    	mov    $0xf010415c,%edx$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	66 89 90 60 23 00 00 	mov    %dx,0x2360(%eax)$/;"	l
f0103bc4	obj/kern/kernel.asm	/^f0103bc4:	66 c7 80 62 23 00 00 	movw   $0x8,0x2362(%eax)$/;"	l
f0103bcb	obj/kern/kernel.asm	/^f0103bcb:	08 00 $/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	c6 80 64 23 00 00 00 	movb   $0x0,0x2364(%eax)$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	c6 80 65 23 00 00 8e 	movb   $0x8e,0x2365(%eax)$/;"	l
f0103bdb	obj/kern/kernel.asm	/^f0103bdb:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103bde	obj/kern/kernel.asm	/^f0103bde:	66 89 90 66 23 00 00 	mov    %dx,0x2366(%eax)$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	c7 c2 60 41 10 f0    	mov    $0xf0104160,%edx$/;"	l
f0103beb	obj/kern/kernel.asm	/^f0103beb:	66 89 90 68 23 00 00 	mov    %dx,0x2368(%eax)$/;"	l
f0103bf2	obj/kern/kernel.asm	/^f0103bf2:	66 c7 80 6a 23 00 00 	movw   $0x8,0x236a(%eax)$/;"	l
f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	08 00 $/;"	l
f0103bfb	obj/kern/kernel.asm	/^f0103bfb:	c6 80 6c 23 00 00 00 	movb   $0x0,0x236c(%eax)$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	c6 80 6d 23 00 00 8e 	movb   $0x8e,0x236d(%eax)$/;"	l
f0103c09	obj/kern/kernel.asm	/^f0103c09:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103c0c	obj/kern/kernel.asm	/^f0103c0c:	66 89 90 6e 23 00 00 	mov    %dx,0x236e(%eax)$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	c7 c2 66 41 10 f0    	mov    $0xf0104166,%edx$/;"	l
f0103c19	obj/kern/kernel.asm	/^f0103c19:	66 89 90 70 23 00 00 	mov    %dx,0x2370(%eax)$/;"	l
f0103c20	obj/kern/kernel.asm	/^f0103c20:	66 c7 80 72 23 00 00 	movw   $0x8,0x2372(%eax)$/;"	l
f0103c27	obj/kern/kernel.asm	/^f0103c27:	08 00 $/;"	l
f0103c29	obj/kern/kernel.asm	/^f0103c29:	c6 80 74 23 00 00 00 	movb   $0x0,0x2374(%eax)$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	c6 80 75 23 00 00 8e 	movb   $0x8e,0x2375(%eax)$/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103c3a	obj/kern/kernel.asm	/^f0103c3a:	66 89 90 76 23 00 00 	mov    %dx,0x2376(%eax)$/;"	l
f0103c41	obj/kern/kernel.asm	/^f0103c41:	c7 c2 6a 41 10 f0    	mov    $0xf010416a,%edx$/;"	l
f0103c47	obj/kern/kernel.asm	/^f0103c47:	66 89 90 78 23 00 00 	mov    %dx,0x2378(%eax)$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	66 c7 80 7a 23 00 00 	movw   $0x8,0x237a(%eax)$/;"	l
f0103c55	obj/kern/kernel.asm	/^f0103c55:	08 00 $/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	c6 80 7c 23 00 00 00 	movb   $0x0,0x237c(%eax)$/;"	l
f0103c5e	obj/kern/kernel.asm	/^f0103c5e:	c6 80 7d 23 00 00 8e 	movb   $0x8e,0x237d(%eax)$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	66 89 90 7e 23 00 00 	mov    %dx,0x237e(%eax)$/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	c7 c2 6e 41 10 f0    	mov    $0xf010416e,%edx$/;"	l
f0103c75	obj/kern/kernel.asm	/^f0103c75:	66 89 90 80 23 00 00 	mov    %dx,0x2380(%eax)$/;"	l
f0103c7c	obj/kern/kernel.asm	/^f0103c7c:	66 c7 80 82 23 00 00 	movw   $0x8,0x2382(%eax)$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	08 00 $/;"	l
f0103c85	obj/kern/kernel.asm	/^f0103c85:	c6 80 84 23 00 00 00 	movb   $0x0,0x2384(%eax)$/;"	l
f0103c8c	obj/kern/kernel.asm	/^f0103c8c:	c6 80 85 23 00 00 8e 	movb   $0x8e,0x2385(%eax)$/;"	l
f0103c93	obj/kern/kernel.asm	/^f0103c93:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103c96	obj/kern/kernel.asm	/^f0103c96:	66 89 90 86 23 00 00 	mov    %dx,0x2386(%eax)$/;"	l
f0103c9d	obj/kern/kernel.asm	/^f0103c9d:	c7 c2 72 41 10 f0    	mov    $0xf0104172,%edx$/;"	l
f0103ca3	obj/kern/kernel.asm	/^f0103ca3:	66 89 90 88 23 00 00 	mov    %dx,0x2388(%eax)$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	66 c7 80 8a 23 00 00 	movw   $0x8,0x238a(%eax)$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	08 00 $/;"	l
f0103cb3	obj/kern/kernel.asm	/^f0103cb3:	c6 80 8c 23 00 00 00 	movb   $0x0,0x238c(%eax)$/;"	l
f0103cba	obj/kern/kernel.asm	/^f0103cba:	c6 80 8d 23 00 00 8e 	movb   $0x8e,0x238d(%eax)$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	66 89 90 8e 23 00 00 	mov    %dx,0x238e(%eax)$/;"	l
f0103ccb	obj/kern/kernel.asm	/^f0103ccb:	c7 c2 76 41 10 f0    	mov    $0xf0104176,%edx$/;"	l
f0103cd1	obj/kern/kernel.asm	/^f0103cd1:	66 89 90 90 23 00 00 	mov    %dx,0x2390(%eax)$/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	66 c7 80 92 23 00 00 	movw   $0x8,0x2392(%eax)$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	08 00 $/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	c6 80 94 23 00 00 00 	movb   $0x0,0x2394(%eax)$/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	c6 80 95 23 00 00 8e 	movb   $0x8e,0x2395(%eax)$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	66 89 90 96 23 00 00 	mov    %dx,0x2396(%eax)$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	c7 c2 7a 41 10 f0    	mov    $0xf010417a,%edx$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff:	66 89 90 a0 23 00 00 	mov    %dx,0x23a0(%eax)$/;"	l
f0103d06	obj/kern/kernel.asm	/^f0103d06:	66 c7 80 a2 23 00 00 	movw   $0x8,0x23a2(%eax)$/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d:	08 00 $/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	c6 80 a4 23 00 00 00 	movb   $0x0,0x23a4(%eax)$/;"	l
f0103d16	obj/kern/kernel.asm	/^f0103d16:	c6 80 a5 23 00 00 8e 	movb   $0x8e,0x23a5(%eax)$/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103d20	obj/kern/kernel.asm	/^f0103d20:	66 89 90 a6 23 00 00 	mov    %dx,0x23a6(%eax)$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	e8 9d fc ff ff       	call   f01039c9 <trap_init_percpu>$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	5d                   	pop    %ebp$/;"	l
f0103d2d	obj/kern/kernel.asm	/^f0103d2d:	c3                   	ret    $/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e <print_regs>:$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	55                   	push   %ebp$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	56                   	push   %esi$/;"	l
f0103d32	obj/kern/kernel.asm	/^f0103d32:	53                   	push   %ebx$/;"	l
f0103d33	obj/kern/kernel.asm	/^f0103d33:	e8 2f c4 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	81 c3 e8 c2 07 00    	add    $0x7c2e8,%ebx$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	ff 36                	pushl  (%esi)$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	8d 83 fa 60 f8 ff    	lea    -0x79f06(%ebx),%eax$/;"	l
f0103d4c	obj/kern/kernel.asm	/^f0103d4c:	50                   	push   %eax$/;"	l
f0103d4d	obj/kern/kernel.asm	/^f0103d4d:	e8 63 fc ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103d52	obj/kern/kernel.asm	/^f0103d52:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d55	obj/kern/kernel.asm	/^f0103d55:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	8d 83 09 61 f8 ff    	lea    -0x79ef7(%ebx),%eax$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	50                   	push   %eax$/;"	l
f0103d5f	obj/kern/kernel.asm	/^f0103d5f:	e8 51 fc ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103d64	obj/kern/kernel.asm	/^f0103d64:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	ff 76 08             	pushl  0x8(%esi)$/;"	l
f0103d6a	obj/kern/kernel.asm	/^f0103d6a:	8d 83 18 61 f8 ff    	lea    -0x79ee8(%ebx),%eax$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	50                   	push   %eax$/;"	l
f0103d71	obj/kern/kernel.asm	/^f0103d71:	e8 3f fc ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103d76	obj/kern/kernel.asm	/^f0103d76:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	ff 76 0c             	pushl  0xc(%esi)$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	8d 83 27 61 f8 ff    	lea    -0x79ed9(%ebx),%eax$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	50                   	push   %eax$/;"	l
f0103d83	obj/kern/kernel.asm	/^f0103d83:	e8 2d fc ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103d88	obj/kern/kernel.asm	/^f0103d88:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	ff 76 10             	pushl  0x10(%esi)$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	8d 83 36 61 f8 ff    	lea    -0x79eca(%ebx),%eax$/;"	l
f0103d94	obj/kern/kernel.asm	/^f0103d94:	50                   	push   %eax$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	e8 1b fc ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103d9a	obj/kern/kernel.asm	/^f0103d9a:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	ff 76 14             	pushl  0x14(%esi)$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	8d 83 45 61 f8 ff    	lea    -0x79ebb(%ebx),%eax$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	50                   	push   %eax$/;"	l
f0103da7	obj/kern/kernel.asm	/^f0103da7:	e8 09 fc ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	ff 76 18             	pushl  0x18(%esi)$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	8d 83 54 61 f8 ff    	lea    -0x79eac(%ebx),%eax$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	50                   	push   %eax$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	e8 f7 fb ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	ff 76 1c             	pushl  0x1c(%esi)$/;"	l
f0103dc4	obj/kern/kernel.asm	/^f0103dc4:	8d 83 63 61 f8 ff    	lea    -0x79e9d(%ebx),%eax$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	50                   	push   %eax$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb:	e8 e5 fb ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103dd0	obj/kern/kernel.asm	/^f0103dd0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103dd3	obj/kern/kernel.asm	/^f0103dd3:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	5b                   	pop    %ebx$/;"	l
f0103dd7	obj/kern/kernel.asm	/^f0103dd7:	5e                   	pop    %esi$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	5d                   	pop    %ebp$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	c3                   	ret    $/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda <print_trapframe>:$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	55                   	push   %ebp$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	57                   	push   %edi$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	56                   	push   %esi$/;"	l
f0103ddf	obj/kern/kernel.asm	/^f0103ddf:	53                   	push   %ebx$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103de3	obj/kern/kernel.asm	/^f0103de3:	e8 7f c3 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	81 c3 38 c2 07 00    	add    $0x7c238,%ebx$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	56                   	push   %esi$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	8d 83 99 62 f8 ff    	lea    -0x79d67(%ebx),%eax$/;"	l
f0103df8	obj/kern/kernel.asm	/^f0103df8:	50                   	push   %eax$/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9:	e8 b7 fb ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103dfe	obj/kern/kernel.asm	/^f0103dfe:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103e01	obj/kern/kernel.asm	/^f0103e01:	e8 28 ff ff ff       	call   f0103d2e <print_regs>$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	0f b7 46 20          	movzwl 0x20(%esi),%eax$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	50                   	push   %eax$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	8d 83 b4 61 f8 ff    	lea    -0x79e4c(%ebx),%eax$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	50                   	push   %eax$/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15:	e8 9b fb ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103e1d	obj/kern/kernel.asm	/^f0103e1d:	0f b7 46 24          	movzwl 0x24(%esi),%eax$/;"	l
f0103e21	obj/kern/kernel.asm	/^f0103e21:	50                   	push   %eax$/;"	l
f0103e22	obj/kern/kernel.asm	/^f0103e22:	8d 83 c7 61 f8 ff    	lea    -0x79e39(%ebx),%eax$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	50                   	push   %eax$/;"	l
f0103e29	obj/kern/kernel.asm	/^f0103e29:	e8 87 fb ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103e2e	obj/kern/kernel.asm	/^f0103e2e:	8b 56 28             	mov    0x28(%esi),%edx$/;"	l
f0103e31	obj/kern/kernel.asm	/^f0103e31:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	83 fa 13             	cmp    $0x13,%edx$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	0f 86 e9 00 00 00    	jbe    f0103f26 <print_trapframe+0x14c>$/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	83 fa 30             	cmp    $0x30,%edx$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	8d 83 72 61 f8 ff    	lea    -0x79e8e(%ebx),%eax$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	8d 8b 7e 61 f8 ff    	lea    -0x79e82(%ebx),%ecx$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	0f 45 c1             	cmovne %ecx,%eax$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	50                   	push   %eax$/;"	l
f0103e53	obj/kern/kernel.asm	/^f0103e53:	52                   	push   %edx$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	8d 83 da 61 f8 ff    	lea    -0x79e26(%ebx),%eax$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	50                   	push   %eax$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	e8 55 fb ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e63	obj/kern/kernel.asm	/^f0103e63:	39 b3 20 2b 00 00    	cmp    %esi,0x2b20(%ebx)$/;"	l
f0103e69	obj/kern/kernel.asm	/^f0103e69:	0f 84 c3 00 00 00    	je     f0103f32 <print_trapframe+0x158>$/;"	l
f0103e6f	obj/kern/kernel.asm	/^f0103e6f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	ff 76 2c             	pushl  0x2c(%esi)$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	8d 83 fb 61 f8 ff    	lea    -0x79e05(%ebx),%eax$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	50                   	push   %eax$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	e8 34 fb ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	83 7e 28 0e          	cmpl   $0xe,0x28(%esi)$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	0f 85 c9 00 00 00    	jne    f0103f57 <print_trapframe+0x17d>$/;"	l
f0103e8e	obj/kern/kernel.asm	/^f0103e8e:	8b 46 2c             	mov    0x2c(%esi),%eax$/;"	l
f0103e91	obj/kern/kernel.asm	/^f0103e91:	89 c2                	mov    %eax,%edx$/;"	l
f0103e93	obj/kern/kernel.asm	/^f0103e93:	83 e2 01             	and    $0x1,%edx$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	8d 8b 8d 61 f8 ff    	lea    -0x79e73(%ebx),%ecx$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	8d 93 98 61 f8 ff    	lea    -0x79e68(%ebx),%edx$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0103ea5	obj/kern/kernel.asm	/^f0103ea5:	89 c2                	mov    %eax,%edx$/;"	l
f0103ea7	obj/kern/kernel.asm	/^f0103ea7:	83 e2 02             	and    $0x2,%edx$/;"	l
f0103eaa	obj/kern/kernel.asm	/^f0103eaa:	8d 93 a4 61 f8 ff    	lea    -0x79e5c(%ebx),%edx$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	8d bb aa 61 f8 ff    	lea    -0x79e56(%ebx),%edi$/;"	l
f0103eb6	obj/kern/kernel.asm	/^f0103eb6:	0f 44 d7             	cmove  %edi,%edx$/;"	l
f0103eb9	obj/kern/kernel.asm	/^f0103eb9:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	8d 83 af 61 f8 ff    	lea    -0x79e51(%ebx),%eax$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	8d bb c4 62 f8 ff    	lea    -0x79d3c(%ebx),%edi$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	0f 44 c7             	cmove  %edi,%eax$/;"	l
f0103ecb	obj/kern/kernel.asm	/^f0103ecb:	51                   	push   %ecx$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	52                   	push   %edx$/;"	l
f0103ecd	obj/kern/kernel.asm	/^f0103ecd:	50                   	push   %eax$/;"	l
f0103ece	obj/kern/kernel.asm	/^f0103ece:	8d 83 09 62 f8 ff    	lea    -0x79df7(%ebx),%eax$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	50                   	push   %eax$/;"	l
f0103ed5	obj/kern/kernel.asm	/^f0103ed5:	e8 db fa ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103eda	obj/kern/kernel.asm	/^f0103eda:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103edd	obj/kern/kernel.asm	/^f0103edd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103ee0	obj/kern/kernel.asm	/^f0103ee0:	ff 76 30             	pushl  0x30(%esi)$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	8d 83 18 62 f8 ff    	lea    -0x79de8(%ebx),%eax$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	50                   	push   %eax$/;"	l
f0103eea	obj/kern/kernel.asm	/^f0103eea:	e8 c6 fa ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103ef2	obj/kern/kernel.asm	/^f0103ef2:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	50                   	push   %eax$/;"	l
f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	8d 83 27 62 f8 ff    	lea    -0x79dd9(%ebx),%eax$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	50                   	push   %eax$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	e8 b2 fa ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	ff 76 38             	pushl  0x38(%esi)$/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09:	8d 83 3a 62 f8 ff    	lea    -0x79dc6(%ebx),%eax$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	50                   	push   %eax$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	e8 a0 fa ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103f15	obj/kern/kernel.asm	/^f0103f15:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f18	obj/kern/kernel.asm	/^f0103f18:	f6 46 34 03          	testb  $0x3,0x34(%esi)$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	75 50                	jne    f0103f6e <print_trapframe+0x194>$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	5b                   	pop    %ebx$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	5e                   	pop    %esi$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	5f                   	pop    %edi$/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	5d                   	pop    %ebp$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	c3                   	ret    $/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	8b 84 93 40 20 00 00 	mov    0x2040(%ebx,%edx,4),%eax$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	e9 1d ff ff ff       	jmp    f0103e4f <print_trapframe+0x75>$/;"	l
f0103f32	obj/kern/kernel.asm	/^f0103f32:	83 7e 28 0e          	cmpl   $0xe,0x28(%esi)$/;"	l
f0103f36	obj/kern/kernel.asm	/^f0103f36:	0f 85 33 ff ff ff    	jne    f0103e6f <print_trapframe+0x95>$/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103f42	obj/kern/kernel.asm	/^f0103f42:	50                   	push   %eax$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	8d 83 ec 61 f8 ff    	lea    -0x79e14(%ebx),%eax$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	50                   	push   %eax$/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	e8 66 fa ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f52	obj/kern/kernel.asm	/^f0103f52:	e9 18 ff ff ff       	jmp    f0103e6f <print_trapframe+0x95>$/;"	l
f0103f57	obj/kern/kernel.asm	/^f0103f57:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	8d 83 2a 60 f8 ff    	lea    -0x79fd6(%ebx),%eax$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	50                   	push   %eax$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	e8 4f fa ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f69	obj/kern/kernel.asm	/^f0103f69:	e9 6f ff ff ff       	jmp    f0103edd <print_trapframe+0x103>$/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103f71	obj/kern/kernel.asm	/^f0103f71:	ff 76 3c             	pushl  0x3c(%esi)$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	8d 83 49 62 f8 ff    	lea    -0x79db7(%ebx),%eax$/;"	l
f0103f7a	obj/kern/kernel.asm	/^f0103f7a:	50                   	push   %eax$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	e8 35 fa ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103f83	obj/kern/kernel.asm	/^f0103f83:	0f b7 46 40          	movzwl 0x40(%esi),%eax$/;"	l
f0103f87	obj/kern/kernel.asm	/^f0103f87:	50                   	push   %eax$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	8d 83 58 62 f8 ff    	lea    -0x79da8(%ebx),%eax$/;"	l
f0103f8e	obj/kern/kernel.asm	/^f0103f8e:	50                   	push   %eax$/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f:	e8 21 fa ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f97	obj/kern/kernel.asm	/^f0103f97:	eb 85                	jmp    f0103f1e <print_trapframe+0x144>$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99 <page_fault_handler>:$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	55                   	push   %ebp$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	57                   	push   %edi$/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	56                   	push   %esi$/;"	l
f0103f9e	obj/kern/kernel.asm	/^f0103f9e:	53                   	push   %ebx$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103fa2	obj/kern/kernel.asm	/^f0103fa2:	e8 c0 c1 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	81 c3 79 c0 07 00    	add    $0x7c079,%ebx$/;"	l
f0103fad	obj/kern/kernel.asm	/^f0103fad:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0103fb3	obj/kern/kernel.asm	/^f0103fb3:	ff 77 30             	pushl  0x30(%edi)$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	50                   	push   %eax$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	c7 c6 24 23 18 f0    	mov    $0xf0182324,%esi$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	8b 06                	mov    (%esi),%eax$/;"	l
f0103fbf	obj/kern/kernel.asm	/^f0103fbf:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0103fc2	obj/kern/kernel.asm	/^f0103fc2:	8d 83 10 64 f8 ff    	lea    -0x79bf0(%ebx),%eax$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	50                   	push   %eax$/;"	l
f0103fc9	obj/kern/kernel.asm	/^f0103fc9:	e8 e7 f9 ff ff       	call   f01039b5 <cprintf>$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0103fd1	obj/kern/kernel.asm	/^f0103fd1:	e8 04 fe ff ff       	call   f0103dda <print_trapframe>$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	ff 36                	pushl  (%esi)$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	e8 84 f8 ff ff       	call   f0103864 <env_destroy>$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	5b                   	pop    %ebx$/;"	l
f0103fe7	obj/kern/kernel.asm	/^f0103fe7:	5e                   	pop    %esi$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	5f                   	pop    %edi$/;"	l
f0103fe9	obj/kern/kernel.asm	/^f0103fe9:	5d                   	pop    %ebp$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	c3                   	ret    $/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb <trap>:$/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	55                   	push   %ebp$/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fee	obj/kern/kernel.asm	/^f0103fee:	57                   	push   %edi$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	56                   	push   %esi$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	53                   	push   %ebx$/;"	l
f0103ff1	obj/kern/kernel.asm	/^f0103ff1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103ff4	obj/kern/kernel.asm	/^f0103ff4:	e8 6e c1 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	81 c3 27 c0 07 00    	add    $0x7c027,%ebx$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104002	obj/kern/kernel.asm	/^f0104002:	fc                   	cld    $/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
f0104003	obj/kern/kernel.asm	/^f0104003:	9c                   	pushf  $/;"	l
f0104004	obj/kern/kernel.asm	/^f0104004:	58                   	pop    %eax$/;"	l
f0104005	obj/kern/kernel.asm	/^f0104005:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	74 1f                	je     f0104029 <trap+0x3e>$/;"	l
f010400a	obj/kern/kernel.asm	/^f010400a:	8d 83 6b 62 f8 ff    	lea    -0x79d95(%ebx),%eax$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	50                   	push   %eax$/;"	l
f0104011	obj/kern/kernel.asm	/^f0104011:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	50                   	push   %eax$/;"	l
f0104018	obj/kern/kernel.asm	/^f0104018:	68 cf 00 00 00       	push   $0xcf$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	8d 83 84 62 f8 ff    	lea    -0x79d7c(%ebx),%eax$/;"	l
f0104023	obj/kern/kernel.asm	/^f0104023:	50                   	push   %eax$/;"	l
f0104024	obj/kern/kernel.asm	/^f0104024:	e8 88 c0 ff ff       	call   f01000b1 <_panic>$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	56                   	push   %esi$/;"	l
f010402d	obj/kern/kernel.asm	/^f010402d:	8d 83 90 62 f8 ff    	lea    -0x79d70(%ebx),%eax$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	50                   	push   %eax$/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	e8 7c f9 ff ff       	call   f01039b5 <cprintf>$/;"	l
f0104039	obj/kern/kernel.asm	/^f0104039:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104043	obj/kern/kernel.asm	/^f0104043:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	75 1d                	jne    f0104066 <trap+0x7b>$/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	c7 c0 24 23 18 f0    	mov    $0xf0182324,%eax$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	8b 00                	mov    (%eax),%eax$/;"	l
f0104051	obj/kern/kernel.asm	/^f0104051:	85 c0                	test   %eax,%eax$/;"	l
f0104053	obj/kern/kernel.asm	/^f0104053:	74 78                	je     f01040cd <trap+0xe2>$/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	89 c7                	mov    %eax,%edi$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
f010405e	obj/kern/kernel.asm	/^f010405e:	c7 c0 24 23 18 f0    	mov    $0xf0182324,%eax$/;"	l
f0104064	obj/kern/kernel.asm	/^f0104064:	8b 30                	mov    (%eax),%esi$/;"	l
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
f0104066	obj/kern/kernel.asm	/^f0104066:	89 b3 20 2b 00 00    	mov    %esi,0x2b20(%ebx)$/;"	l
f010406c	obj/kern/kernel.asm	/^f010406c:	83 7e 28 0e          	cmpl   $0xe,0x28(%esi)$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	74 7a                	je     f01040ec <trap+0x101>$/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	83 7e 28 03          	cmpl   $0x3,0x28(%esi)$/;"	l
f0104076	obj/kern/kernel.asm	/^f0104076:	0f 84 81 00 00 00    	je     f01040fd <trap+0x112>$/;"	l
f010407c	obj/kern/kernel.asm	/^f010407c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	56                   	push   %esi$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	e8 55 fd ff ff       	call   f0103dda <print_trapframe>$/;"	l
f0104085	obj/kern/kernel.asm	/^f0104085:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f010408d	obj/kern/kernel.asm	/^f010408d:	74 7f                	je     f010410e <trap+0x123>$/;"	l
f010408f	obj/kern/kernel.asm	/^f010408f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	c7 c6 24 23 18 f0    	mov    $0xf0182324,%esi$/;"	l
f0104098	obj/kern/kernel.asm	/^f0104098:	ff 36                	pushl  (%esi)$/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	e8 c5 f7 ff ff       	call   f0103864 <env_destroy>$/;"	l
f010409f	obj/kern/kernel.asm	/^f010409f:	8b 06                	mov    (%esi),%eax$/;"	l
f01040a1	obj/kern/kernel.asm	/^f01040a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	85 c0                	test   %eax,%eax$/;"	l
f01040a6	obj/kern/kernel.asm	/^f01040a6:	74 06                	je     f01040ae <trap+0xc3>$/;"	l
f01040a8	obj/kern/kernel.asm	/^f01040a8:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01040ac	obj/kern/kernel.asm	/^f01040ac:	74 7b                	je     f0104129 <trap+0x13e>$/;"	l
f01040ae	obj/kern/kernel.asm	/^f01040ae:	8d 83 34 64 f8 ff    	lea    -0x79bcc(%ebx),%eax$/;"	l
f01040b4	obj/kern/kernel.asm	/^f01040b4:	50                   	push   %eax$/;"	l
f01040b5	obj/kern/kernel.asm	/^f01040b5:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	50                   	push   %eax$/;"	l
f01040bc	obj/kern/kernel.asm	/^f01040bc:	68 e7 00 00 00       	push   $0xe7$/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	8d 83 84 62 f8 ff    	lea    -0x79d7c(%ebx),%eax$/;"	l
f01040c7	obj/kern/kernel.asm	/^f01040c7:	50                   	push   %eax$/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	e8 e4 bf ff ff       	call   f01000b1 <_panic>$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	8d 83 ab 62 f8 ff    	lea    -0x79d55(%ebx),%eax$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	50                   	push   %eax$/;"	l
f01040d4	obj/kern/kernel.asm	/^f01040d4:	8d 83 8a 5d f8 ff    	lea    -0x7a276(%ebx),%eax$/;"	l
f01040da	obj/kern/kernel.asm	/^f01040da:	50                   	push   %eax$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	68 d5 00 00 00       	push   $0xd5$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	8d 83 84 62 f8 ff    	lea    -0x79d7c(%ebx),%eax$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	50                   	push   %eax$/;"	l
f01040e7	obj/kern/kernel.asm	/^f01040e7:	e8 c5 bf ff ff       	call   f01000b1 <_panic>$/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01040ef	obj/kern/kernel.asm	/^f01040ef:	56                   	push   %esi$/;"	l
f01040f0	obj/kern/kernel.asm	/^f01040f0:	e8 a4 fe ff ff       	call   f0103f99 <page_fault_handler>$/;"	l
f01040f5	obj/kern/kernel.asm	/^f01040f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	e9 75 ff ff ff       	jmp    f0104072 <trap+0x87>$/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104100	obj/kern/kernel.asm	/^f0104100:	56                   	push   %esi$/;"	l
f0104101	obj/kern/kernel.asm	/^f0104101:	e8 32 c7 ff ff       	call   f0100838 <monitor>$/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	e9 6e ff ff ff       	jmp    f010407c <trap+0x91>$/;"	l
f010410e	obj/kern/kernel.asm	/^f010410e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	8d 83 b2 62 f8 ff    	lea    -0x79d4e(%ebx),%eax$/;"	l
f0104117	obj/kern/kernel.asm	/^f0104117:	50                   	push   %eax$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	68 be 00 00 00       	push   $0xbe$/;"	l
f010411d	obj/kern/kernel.asm	/^f010411d:	8d 83 84 62 f8 ff    	lea    -0x79d7c(%ebx),%eax$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	50                   	push   %eax$/;"	l
f0104124	obj/kern/kernel.asm	/^f0104124:	e8 88 bf ff ff       	call   f01000b1 <_panic>$/;"	l
f0104129	obj/kern/kernel.asm	/^f0104129:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	50                   	push   %eax$/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	e8 a0 f7 ff ff       	call   f01038d2 <env_run>$/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132 <th0>:$/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132:	6a 00                	push   $0x0$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	6a 00                	push   $0x0$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	eb 48                	jmp    f0104180 <_alltraps>$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138 <th1>:$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	6a 00                	push   $0x0$/;"	l
f010413a	obj/kern/kernel.asm	/^f010413a:	6a 01                	push   $0x1$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	eb 42                	jmp    f0104180 <_alltraps>$/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e <th3>:$/;"	l
f010413e	obj/kern/kernel.asm	/^f010413e:	6a 00                	push   $0x0$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	6a 03                	push   $0x3$/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	eb 3c                	jmp    f0104180 <_alltraps>$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144 <th4>:$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	6a 00                	push   $0x0$/;"	l
f0104146	obj/kern/kernel.asm	/^f0104146:	6a 04                	push   $0x4$/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	eb 36                	jmp    f0104180 <_alltraps>$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a <th5>:$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	6a 00                	push   $0x0$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	6a 05                	push   $0x5$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	eb 30                	jmp    f0104180 <_alltraps>$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150 <th6>:$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	6a 00                	push   $0x0$/;"	l
f0104152	obj/kern/kernel.asm	/^f0104152:	6a 06                	push   $0x6$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154:	eb 2a                	jmp    f0104180 <_alltraps>$/;"	l
f0104156	obj/kern/kernel.asm	/^f0104156 <th7>:$/;"	l
f0104156	obj/kern/kernel.asm	/^f0104156:	6a 00                	push   $0x0$/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	6a 07                	push   $0x7$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	eb 24                	jmp    f0104180 <_alltraps>$/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c <th8>:$/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c:	6a 08                	push   $0x8$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	eb 20                	jmp    f0104180 <_alltraps>$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160 <th9>:$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	6a 00                	push   $0x0$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	6a 09                	push   $0x9$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	eb 1a                	jmp    f0104180 <_alltraps>$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166 <th10>:$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	6a 0a                	push   $0xa$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	eb 16                	jmp    f0104180 <_alltraps>$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a <th11>:$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	6a 0b                	push   $0xb$/;"	l
f010416c	obj/kern/kernel.asm	/^f010416c:	eb 12                	jmp    f0104180 <_alltraps>$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e <th12>:$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e:	6a 0c                	push   $0xc$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	eb 0e                	jmp    f0104180 <_alltraps>$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172 <th13>:$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	6a 0d                	push   $0xd$/;"	l
f0104174	obj/kern/kernel.asm	/^f0104174:	eb 0a                	jmp    f0104180 <_alltraps>$/;"	l
f0104176	obj/kern/kernel.asm	/^f0104176 <th14>:$/;"	l
f0104176	obj/kern/kernel.asm	/^f0104176:	6a 0e                	push   $0xe$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	eb 06                	jmp    f0104180 <_alltraps>$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a <th16>:$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	6a 00                	push   $0x0$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	6a 10                	push   $0x10$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	eb 00                	jmp    f0104180 <_alltraps>$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180 <_alltraps>:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:	$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	1e                   	push   %ds$/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	06                   	push   %es$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	60                   	pusha  $/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	6a 10                	push   $0x10$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	1f                   	pop    %ds$/;"	l
f0104186	obj/kern/kernel.asm	/^f0104186:	6a 10                	push   $0x10$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	07                   	pop    %es$/;"	l
f0104189	obj/kern/kernel.asm	/^f0104189:	54                   	push   %esp$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	e8 5c fe ff ff       	call   f0103feb <trap>$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f <syscall>:$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f:	55                   	push   %ebp$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	89 e5                	mov    %esp,%ebp$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192:	53                   	push   %ebx$/;"	l
f0104193	obj/kern/kernel.asm	/^f0104193:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104196	obj/kern/kernel.asm	/^f0104196:	e8 cc bf ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f010419b	obj/kern/kernel.asm	/^f010419b:	81 c3 85 be 07 00    	add    $0x7be85,%ebx$/;"	l
f01041a1	obj/kern/kernel.asm	/^f01041a1:	8d 83 60 64 f8 ff    	lea    -0x79ba0(%ebx),%eax$/;"	l
f01041a7	obj/kern/kernel.asm	/^f01041a7:	50                   	push   %eax$/;"	l
f01041a8	obj/kern/kernel.asm	/^f01041a8:	6a 49                	push   $0x49$/;"	l
f01041aa	obj/kern/kernel.asm	/^f01041aa:	8d 83 78 64 f8 ff    	lea    -0x79b88(%ebx),%eax$/;"	l
f01041b0	obj/kern/kernel.asm	/^f01041b0:	50                   	push   %eax$/;"	l
f01041b1	obj/kern/kernel.asm	/^f01041b1:	e8 fb be ff ff       	call   f01000b1 <_panic>$/;"	l
f01041b6	obj/kern/kernel.asm	/^f01041b6 <stab_binsearch>:$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
f01041b6	obj/kern/kernel.asm	/^f01041b6:	55                   	push   %ebp$/;"	l
f01041b7	obj/kern/kernel.asm	/^f01041b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01041b9	obj/kern/kernel.asm	/^f01041b9:	57                   	push   %edi$/;"	l
f01041ba	obj/kern/kernel.asm	/^f01041ba:	56                   	push   %esi$/;"	l
f01041bb	obj/kern/kernel.asm	/^f01041bb:	53                   	push   %ebx$/;"	l
f01041bc	obj/kern/kernel.asm	/^f01041bc:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01041bf	obj/kern/kernel.asm	/^f01041bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01041c5	obj/kern/kernel.asm	/^f01041c5:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01041cb	obj/kern/kernel.asm	/^f01041cb:	8b 32                	mov    (%edx),%esi$/;"	l
f01041cd	obj/kern/kernel.asm	/^f01041cd:	8b 01                	mov    (%ecx),%eax$/;"	l
f01041cf	obj/kern/kernel.asm	/^f01041cf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01041d2	obj/kern/kernel.asm	/^f01041d2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f01041d9	obj/kern/kernel.asm	/^f01041d9:	eb 2f                	jmp    f010420a <stab_binsearch+0x54>$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de:	39 c6                	cmp    %eax,%esi$/;"	l
f01041e0	obj/kern/kernel.asm	/^f01041e0:	7f 49                	jg     f010422b <stab_binsearch+0x75>$/;"	l
f01041e2	obj/kern/kernel.asm	/^f01041e2:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01041e5	obj/kern/kernel.asm	/^f01041e5:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01041e8	obj/kern/kernel.asm	/^f01041e8:	39 f9                	cmp    %edi,%ecx$/;"	l
f01041ea	obj/kern/kernel.asm	/^f01041ea:	75 ef                	jne    f01041db <stab_binsearch+0x25>$/;"	l
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
f01041ec	obj/kern/kernel.asm	/^f01041ec:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01041ef	obj/kern/kernel.asm	/^f01041ef:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01041f2	obj/kern/kernel.asm	/^f01041f2:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f01041f6	obj/kern/kernel.asm	/^f01041f6:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f01041f9	obj/kern/kernel.asm	/^f01041f9:	73 35                	jae    f0104230 <stab_binsearch+0x7a>$/;"	l
f01041fb	obj/kern/kernel.asm	/^f01041fb:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	89 06                	mov    %eax,(%esi)$/;"	l
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
f0104200	obj/kern/kernel.asm	/^f0104200:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
f0104203	obj/kern/kernel.asm	/^f0104203:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010420a	obj/kern/kernel.asm	/^f010420a:	3b 75 f0             	cmp    -0x10(%ebp),%esi$/;"	l
f010420d	obj/kern/kernel.asm	/^f010420d:	7f 4e                	jg     f010425d <stab_binsearch+0xa7>$/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212:	01 f0                	add    %esi,%eax$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	89 c3                	mov    %eax,%ebx$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	c1 eb 1f             	shr    $0x1f,%ebx$/;"	l
f0104219	obj/kern/kernel.asm	/^f0104219:	01 c3                	add    %eax,%ebx$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	d1 fb                	sar    %ebx$/;"	d
f010421d	obj/kern/kernel.asm	/^f010421d:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0104223	obj/kern/kernel.asm	/^f0104223:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f0104227	obj/kern/kernel.asm	/^f0104227:	89 d8                	mov    %ebx,%eax$/;"	l
f0104229	obj/kern/kernel.asm	/^f0104229:	eb b3                	jmp    f01041de <stab_binsearch+0x28>$/;"	l
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
f010422b	obj/kern/kernel.asm	/^f010422b:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	eb da                	jmp    f010420a <stab_binsearch+0x54>$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	76 14                	jbe    f0104249 <stab_binsearch+0x93>$/;"	l
f0104235	obj/kern/kernel.asm	/^f0104235:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010423b	obj/kern/kernel.asm	/^f010423b:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	89 03                	mov    %eax,(%ebx)$/;"	l
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
f0104240	obj/kern/kernel.asm	/^f0104240:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247:	eb c1                	jmp    f010420a <stab_binsearch+0x54>$/;"	l
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
f0104249	obj/kern/kernel.asm	/^f0104249:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	89 06                	mov    %eax,(%esi)$/;"	l
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
f010424e	obj/kern/kernel.asm	/^f010424e:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	89 c6                	mov    %eax,%esi$/;"	l
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
f0104254	obj/kern/kernel.asm	/^f0104254:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f010425b	obj/kern/kernel.asm	/^f010425b:	eb ad                	jmp    f010420a <stab_binsearch+0x54>$/;"	l
f010425d	obj/kern/kernel.asm	/^f010425d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	74 16                	je     f0104279 <stab_binsearch+0xc3>$/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104266	obj/kern/kernel.asm	/^f0104266:	8b 00                	mov    (%eax),%eax$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f010426b	obj/kern/kernel.asm	/^f010426b:	8b 0e                	mov    (%esi),%ecx$/;"	l
f010426d	obj/kern/kernel.asm	/^f010426d:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0104273	obj/kern/kernel.asm	/^f0104273:	8d 54 96 04          	lea    0x4(%esi,%edx,4),%edx$/;"	l
f0104277	obj/kern/kernel.asm	/^f0104277:	eb 12                	jmp    f010428b <stab_binsearch+0xd5>$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	8b 00                	mov    (%eax),%eax$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104281	obj/kern/kernel.asm	/^f0104281:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	89 07                	mov    %eax,(%edi)$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	eb 16                	jmp    f010429e <stab_binsearch+0xe8>$/;"	l
f0104288	obj/kern/kernel.asm	/^f0104288:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	39 c1                	cmp    %eax,%ecx$/;"	l
f010428d	obj/kern/kernel.asm	/^f010428d:	7d 0a                	jge    f0104299 <stab_binsearch+0xe3>$/;"	l
f010428f	obj/kern/kernel.asm	/^f010428f:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0104292	obj/kern/kernel.asm	/^f0104292:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104295	obj/kern/kernel.asm	/^f0104295:	39 fb                	cmp    %edi,%ebx$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	75 ef                	jne    f0104288 <stab_binsearch+0xd2>$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	89 07                	mov    %eax,(%edi)$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	83 c4 14             	add    $0x14,%esp$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	5b                   	pop    %ebx$/;"	l
f01042a2	obj/kern/kernel.asm	/^f01042a2:	5e                   	pop    %esi$/;"	l
f01042a3	obj/kern/kernel.asm	/^f01042a3:	5f                   	pop    %edi$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	5d                   	pop    %ebp$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	c3                   	ret    $/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6 <debuginfo_eip>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	55                   	push   %ebp$/;"	l
f01042a7	obj/kern/kernel.asm	/^f01042a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01042a9	obj/kern/kernel.asm	/^f01042a9:	57                   	push   %edi$/;"	l
f01042aa	obj/kern/kernel.asm	/^f01042aa:	56                   	push   %esi$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	53                   	push   %ebx$/;"	l
f01042ac	obj/kern/kernel.asm	/^f01042ac:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01042af	obj/kern/kernel.asm	/^f01042af:	e8 b3 be ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	81 c3 6c bd 07 00    	add    $0x7bd6c,%ebx$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
f01042bd	obj/kern/kernel.asm	/^f01042bd:	8d 83 87 64 f8 ff    	lea    -0x79b79(%ebx),%eax$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	89 07                	mov    %eax,(%edi)$/;"	l
f01042c5	obj/kern/kernel.asm	/^f01042c5:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)$/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	89 47 08             	mov    %eax,0x8(%edi)$/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01042d9	obj/kern/kernel.asm	/^f01042d9:	89 47 10             	mov    %eax,0x10(%edi)$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	3d ff ff 7f ef       	cmp    $0xef7fffff,%eax$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8:	77 21                	ja     f010430b <debuginfo_eip+0x65>$/;"	l
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
f01042ea	obj/kern/kernel.asm	/^f01042ea:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
f01042f2	obj/kern/kernel.asm	/^f01042f2:	a1 04 00 20 00       	mov    0x200004,%eax$/;"	l
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
f01042f7	obj/kern/kernel.asm	/^f01042f7:	8b 35 08 00 20 00    	mov    0x200008,%esi$/;"	l
f01042fd	obj/kern/kernel.asm	/^f01042fd:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
f0104300	obj/kern/kernel.asm	/^f0104300:	8b 35 0c 00 20 00    	mov    0x20000c,%esi$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	eb 21                	jmp    f010432c <debuginfo_eip+0x86>$/;"	l
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
f010430b	obj/kern/kernel.asm	/^f010430b:	c7 c0 52 17 11 f0    	mov    $0xf0111752,%eax$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
f0104314	obj/kern/kernel.asm	/^f0104314:	c7 c0 15 ed 10 f0    	mov    $0xf010ed15,%eax$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
f010431d	obj/kern/kernel.asm	/^f010431d:	c7 c0 14 ed 10 f0    	mov    $0xf010ed14,%eax$/;"	l
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
f0104323	obj/kern/kernel.asm	/^f0104323:	c7 c6 a4 66 10 f0    	mov    $0xf01066a4,%esi$/;"	l
f0104329	obj/kern/kernel.asm	/^f0104329:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f010432f	obj/kern/kernel.asm	/^f010432f:	39 4d cc             	cmp    %ecx,-0x34(%ebp)$/;"	l
f0104332	obj/kern/kernel.asm	/^f0104332:	0f 83 30 01 00 00    	jae    f0104468 <debuginfo_eip+0x1c2>$/;"	l
f0104338	obj/kern/kernel.asm	/^f0104338:	80 79 ff 00          	cmpb   $0x0,-0x1(%ecx)$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	0f 85 2d 01 00 00    	jne    f010446f <debuginfo_eip+0x1c9>$/;"	l
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
f0104342	obj/kern/kernel.asm	/^f0104342:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
f0104349	obj/kern/kernel.asm	/^f0104349:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f010434c	obj/kern/kernel.asm	/^f010434c:	29 f0                	sub    %esi,%eax$/;"	l
f010434e	obj/kern/kernel.asm	/^f010434e:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0104351	obj/kern/kernel.asm	/^f0104351:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010435a	obj/kern/kernel.asm	/^f010435a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010435d	obj/kern/kernel.asm	/^f010435d:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104366	obj/kern/kernel.asm	/^f0104366:	6a 64                	push   $0x64$/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368:	89 f0                	mov    %esi,%eax$/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	e8 47 fe ff ff       	call   f01041b6 <stab_binsearch>$/;"	l
f010436f	obj/kern/kernel.asm	/^f010436f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104372	obj/kern/kernel.asm	/^f0104372:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	85 c0                	test   %eax,%eax$/;"	l
f0104377	obj/kern/kernel.asm	/^f0104377:	0f 84 f9 00 00 00    	je     f0104476 <debuginfo_eip+0x1d0>$/;"	l
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
f010437d	obj/kern/kernel.asm	/^f010437d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
f0104380	obj/kern/kernel.asm	/^f0104380:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104383	obj/kern/kernel.asm	/^f0104383:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104386	obj/kern/kernel.asm	/^f0104386:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f010438c	obj/kern/kernel.asm	/^f010438c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010438f	obj/kern/kernel.asm	/^f010438f:	6a 24                	push   $0x24$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0104394	obj/kern/kernel.asm	/^f0104394:	89 f0                	mov    %esi,%eax$/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	e8 1b fe ff ff       	call   f01041b6 <stab_binsearch>$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	83 c4 08             	add    $0x8,%esp$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	3b 75 d8             	cmp    -0x28(%ebp),%esi$/;"	l
f01043a4	obj/kern/kernel.asm	/^f01043a4:	7f 46                	jg     f01043ec <debuginfo_eip+0x146>$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f01043a9	obj/kern/kernel.asm	/^f01043a9:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01043ac	obj/kern/kernel.asm	/^f01043ac:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f01043af	obj/kern/kernel.asm	/^f01043af:	8b 02                	mov    (%edx),%eax$/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01043b4	obj/kern/kernel.asm	/^f01043b4:	2b 4d cc             	sub    -0x34(%ebp),%ecx$/;"	l
f01043b7	obj/kern/kernel.asm	/^f01043b7:	39 c8                	cmp    %ecx,%eax$/;"	l
f01043b9	obj/kern/kernel.asm	/^f01043b9:	73 06                	jae    f01043c1 <debuginfo_eip+0x11b>$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	03 45 cc             	add    -0x34(%ebp),%eax$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	89 47 08             	mov    %eax,0x8(%edi)$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	8b 42 08             	mov    0x8(%edx),%eax$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	89 47 10             	mov    %eax,0x10(%edi)$/;"	l
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
f01043c7	obj/kern/kernel.asm	/^f01043c7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01043ca	obj/kern/kernel.asm	/^f01043ca:	6a 3a                	push   $0x3a$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	ff 77 08             	pushl  0x8(%edi)$/;"	l
f01043cf	obj/kern/kernel.asm	/^f01043cf:	e8 ea 08 00 00       	call   f0104cbe <strfind>$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	2b 47 08             	sub    0x8(%edi),%eax$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	89 47 0c             	mov    %eax,0xc(%edi)$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01043e3	obj/kern/kernel.asm	/^f01043e3:	8d 44 81 04          	lea    0x4(%ecx,%eax,4),%eax$/;"	l
f01043e7	obj/kern/kernel.asm	/^f01043e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043ea	obj/kern/kernel.asm	/^f01043ea:	eb 11                	jmp    f01043fd <debuginfo_eip+0x157>$/;"	l
f01043ec	obj/kern/kernel.asm	/^f01043ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01043ef	obj/kern/kernel.asm	/^f01043ef:	89 47 10             	mov    %eax,0x10(%edi)$/;"	l
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
f01043f2	obj/kern/kernel.asm	/^f01043f2:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01043f5	obj/kern/kernel.asm	/^f01043f5:	eb d0                	jmp    f01043c7 <debuginfo_eip+0x121>$/;"	l
f01043f7	obj/kern/kernel.asm	/^f01043f7:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f01043fd	obj/kern/kernel.asm	/^f01043fd:	39 f3                	cmp    %esi,%ebx$/;"	l
f01043ff	obj/kern/kernel.asm	/^f01043ff:	7f 2e                	jg     f010442f <debuginfo_eip+0x189>$/;"	l
f0104401	obj/kern/kernel.asm	/^f0104401:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0104404	obj/kern/kernel.asm	/^f0104404:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f0104407	obj/kern/kernel.asm	/^f0104407:	74 0b                	je     f0104414 <debuginfo_eip+0x16e>$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	75 e9                	jne    f01043f7 <debuginfo_eip+0x151>$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	83 78 04 00          	cmpl   $0x0,0x4(%eax)$/;"	l
f0104412	obj/kern/kernel.asm	/^f0104412:	74 e3                	je     f01043f7 <debuginfo_eip+0x151>$/;"	l
f0104414	obj/kern/kernel.asm	/^f0104414:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0104417	obj/kern/kernel.asm	/^f0104417:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	8b 14 83             	mov    (%ebx,%eax,4),%edx$/;"	l
f010441d	obj/kern/kernel.asm	/^f010441d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0104420	obj/kern/kernel.asm	/^f0104420:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0104423	obj/kern/kernel.asm	/^f0104423:	29 d8                	sub    %ebx,%eax$/;"	l
f0104425	obj/kern/kernel.asm	/^f0104425:	39 c2                	cmp    %eax,%edx$/;"	l
f0104427	obj/kern/kernel.asm	/^f0104427:	73 06                	jae    f010442f <debuginfo_eip+0x189>$/;"	l
f0104429	obj/kern/kernel.asm	/^f0104429:	89 d8                	mov    %ebx,%eax$/;"	l
f010442b	obj/kern/kernel.asm	/^f010442b:	01 d0                	add    %edx,%eax$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	89 07                	mov    %eax,(%edi)$/;"	l
f010442f	obj/kern/kernel.asm	/^f010442f:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0104435	obj/kern/kernel.asm	/^f0104435:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	39 cb                	cmp    %ecx,%ebx$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	7d 44                	jge    f0104482 <debuginfo_eip+0x1dc>$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f0104441	obj/kern/kernel.asm	/^f0104441:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0104444	obj/kern/kernel.asm	/^f0104444:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	8d 44 83 10          	lea    0x10(%ebx,%eax,4),%eax$/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	eb 07                	jmp    f0104454 <debuginfo_eip+0x1ae>$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	83 47 14 01          	addl   $0x1,0x14(%edi)$/;"	l
f0104451	obj/kern/kernel.asm	/^f0104451:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	39 d1                	cmp    %edx,%ecx$/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456:	74 25                	je     f010447d <debuginfo_eip+0x1d7>$/;"	l
f0104458	obj/kern/kernel.asm	/^f0104458:	83 c0 0c             	add    $0xc,%eax$/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	80 78 f4 a0          	cmpb   $0xa0,-0xc(%eax)$/;"	l
f010445f	obj/kern/kernel.asm	/^f010445f:	74 ec                	je     f010444d <debuginfo_eip+0x1a7>$/;"	l
f0104461	obj/kern/kernel.asm	/^f0104461:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104466	obj/kern/kernel.asm	/^f0104466:	eb 1a                	jmp    f0104482 <debuginfo_eip+0x1dc>$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010446d	obj/kern/kernel.asm	/^f010446d:	eb 13                	jmp    f0104482 <debuginfo_eip+0x1dc>$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	eb 0c                	jmp    f0104482 <debuginfo_eip+0x1dc>$/;"	l
f0104476	obj/kern/kernel.asm	/^f0104476:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010447b	obj/kern/kernel.asm	/^f010447b:	eb 05                	jmp    f0104482 <debuginfo_eip+0x1dc>$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	5b                   	pop    %ebx$/;"	l
f0104486	obj/kern/kernel.asm	/^f0104486:	5e                   	pop    %esi$/;"	l
f0104487	obj/kern/kernel.asm	/^f0104487:	5f                   	pop    %edi$/;"	l
f0104488	obj/kern/kernel.asm	/^f0104488:	5d                   	pop    %ebp$/;"	l
f0104489	obj/kern/kernel.asm	/^f0104489:	c3                   	ret    $/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a <printnum>:$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	55                   	push   %ebp$/;"	l
f010448b	obj/kern/kernel.asm	/^f010448b:	89 e5                	mov    %esp,%ebp$/;"	l
f010448d	obj/kern/kernel.asm	/^f010448d:	57                   	push   %edi$/;"	l
f010448e	obj/kern/kernel.asm	/^f010448e:	56                   	push   %esi$/;"	l
f010448f	obj/kern/kernel.asm	/^f010448f:	53                   	push   %ebx$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	e8 46 ed ff ff       	call   f01031de <__x86.get_pc_thunk.cx>$/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	81 c1 88 bb 07 00    	add    $0x7bb88,%ecx$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01044a1	obj/kern/kernel.asm	/^f01044a1:	89 c7                	mov    %eax,%edi$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	89 d6                	mov    %edx,%esi$/;"	l
f01044a5	obj/kern/kernel.asm	/^f01044a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01044ab	obj/kern/kernel.asm	/^f01044ab:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01044ae	obj/kern/kernel.asm	/^f01044ae:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01044b9	obj/kern/kernel.asm	/^f01044b9:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	89 5d dc             	mov    %ebx,-0x24(%ebp)$/;"	l
f01044bf	obj/kern/kernel.asm	/^f01044bf:	39 d3                	cmp    %edx,%ebx$/;"	l
f01044c1	obj/kern/kernel.asm	/^f01044c1:	72 09                	jb     f01044cc <printnum+0x42>$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f01044c6	obj/kern/kernel.asm	/^f01044c6:	0f 87 83 00 00 00    	ja     f010454f <printnum+0xc5>$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01044cf	obj/kern/kernel.asm	/^f01044cf:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01044d2	obj/kern/kernel.asm	/^f01044d2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01044d5	obj/kern/kernel.asm	/^f01044d5:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	53                   	push   %ebx$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01044df	obj/kern/kernel.asm	/^f01044df:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01044e5	obj/kern/kernel.asm	/^f01044e5:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01044eb	obj/kern/kernel.asm	/^f01044eb:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	e8 ed 09 00 00       	call   f0104ee0 <__udivdi3>$/;"	l
f01044f3	obj/kern/kernel.asm	/^f01044f3:	83 c4 18             	add    $0x18,%esp$/;"	l
f01044f6	obj/kern/kernel.asm	/^f01044f6:	52                   	push   %edx$/;"	l
f01044f7	obj/kern/kernel.asm	/^f01044f7:	50                   	push   %eax$/;"	l
f01044f8	obj/kern/kernel.asm	/^f01044f8:	89 f2                	mov    %esi,%edx$/;"	l
f01044fa	obj/kern/kernel.asm	/^f01044fa:	89 f8                	mov    %edi,%eax$/;"	l
f01044fc	obj/kern/kernel.asm	/^f01044fc:	e8 89 ff ff ff       	call   f010448a <printnum>$/;"	l
f0104501	obj/kern/kernel.asm	/^f0104501:	83 c4 20             	add    $0x20,%esp$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	eb 13                	jmp    f0104519 <printnum+0x8f>$/;"	l
f0104506	obj/kern/kernel.asm	/^f0104506:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104509	obj/kern/kernel.asm	/^f0104509:	56                   	push   %esi$/;"	l
f010450a	obj/kern/kernel.asm	/^f010450a:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f010450d	obj/kern/kernel.asm	/^f010450d:	ff d7                	call   *%edi$/;"	l
f010450f	obj/kern/kernel.asm	/^f010450f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104515	obj/kern/kernel.asm	/^f0104515:	85 db                	test   %ebx,%ebx$/;"	l
f0104517	obj/kern/kernel.asm	/^f0104517:	7f ed                	jg     f0104506 <printnum+0x7c>$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	56                   	push   %esi$/;"	l
f010451d	obj/kern/kernel.asm	/^f010451d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0104523	obj/kern/kernel.asm	/^f0104523:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0104526	obj/kern/kernel.asm	/^f0104526:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f010452c	obj/kern/kernel.asm	/^f010452c:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f010452f	obj/kern/kernel.asm	/^f010452f:	89 f3                	mov    %esi,%ebx$/;"	l
f0104531	obj/kern/kernel.asm	/^f0104531:	e8 ca 0a 00 00       	call   f0105000 <__umoddi3>$/;"	l
f0104536	obj/kern/kernel.asm	/^f0104536:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539:	0f be 84 06 91 64 f8 	movsbl -0x79b6f(%esi,%eax,1),%eax$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	ff $/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	50                   	push   %eax$/;"	l
f0104542	obj/kern/kernel.asm	/^f0104542:	ff d7                	call   *%edi$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010454a	obj/kern/kernel.asm	/^f010454a:	5b                   	pop    %ebx$/;"	l
f010454b	obj/kern/kernel.asm	/^f010454b:	5e                   	pop    %esi$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	5f                   	pop    %edi$/;"	l
f010454d	obj/kern/kernel.asm	/^f010454d:	5d                   	pop    %ebp$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	c3                   	ret    $/;"	l
f010454f	obj/kern/kernel.asm	/^f010454f:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0104552	obj/kern/kernel.asm	/^f0104552:	eb be                	jmp    f0104512 <printnum+0x88>$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554 <sprintputch>:$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	55                   	push   %ebp$/;"	l
f0104555	obj/kern/kernel.asm	/^f0104555:	89 e5                	mov    %esp,%ebp$/;"	l
f0104557	obj/kern/kernel.asm	/^f0104557:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f010455e	obj/kern/kernel.asm	/^f010455e:	8b 10                	mov    (%eax),%edx$/;"	l
f0104560	obj/kern/kernel.asm	/^f0104560:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0104563	obj/kern/kernel.asm	/^f0104563:	73 0a                	jae    f010456f <sprintputch+0x1b>$/;"	l
f0104565	obj/kern/kernel.asm	/^f0104565:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	89 08                	mov    %ecx,(%eax)$/;"	l
f010456a	obj/kern/kernel.asm	/^f010456a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010456d	obj/kern/kernel.asm	/^f010456d:	88 02                	mov    %al,(%edx)$/;"	l
f010456f	obj/kern/kernel.asm	/^f010456f:	5d                   	pop    %ebp$/;"	l
f0104570	obj/kern/kernel.asm	/^f0104570:	c3                   	ret    $/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571 <printfmt>:$/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571:	55                   	push   %ebp$/;"	l
f0104572	obj/kern/kernel.asm	/^f0104572:	89 e5                	mov    %esp,%ebp$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	50                   	push   %eax$/;"	l
f010457b	obj/kern/kernel.asm	/^f010457b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010457e	obj/kern/kernel.asm	/^f010457e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104584	obj/kern/kernel.asm	/^f0104584:	e8 05 00 00 00       	call   f010458e <vprintfmt>$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	83 c4 10             	add    $0x10,%esp$/;"	l
f010458c	obj/kern/kernel.asm	/^f010458c:	c9                   	leave  $/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	c3                   	ret    $/;"	l
f010458e	obj/kern/kernel.asm	/^f010458e <vprintfmt>:$/;"	l
f010458e	obj/kern/kernel.asm	/^f010458e:	55                   	push   %ebp$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104591	obj/kern/kernel.asm	/^f0104591:	57                   	push   %edi$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	56                   	push   %esi$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	53                   	push   %ebx$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104597	obj/kern/kernel.asm	/^f0104597:	e8 cb bb ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f010459c	obj/kern/kernel.asm	/^f010459c:	81 c3 84 ba 07 00    	add    $0x7ba84,%ebx$/;"	l
f01045a2	obj/kern/kernel.asm	/^f01045a2:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01045a8	obj/kern/kernel.asm	/^f01045a8:	e9 8e 03 00 00       	jmp    f010493b <.L35+0x48>$/;"	l
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
f01045ad	obj/kern/kernel.asm	/^f01045ad:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
f01045b1	obj/kern/kernel.asm	/^f01045b1:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
f01045b8	obj/kern/kernel.asm	/^f01045b8:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
f01045bf	obj/kern/kernel.asm	/^f01045bf:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
f01045c6	obj/kern/kernel.asm	/^f01045c6:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f01045d1	obj/kern/kernel.asm	/^f01045d1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01045d4	obj/kern/kernel.asm	/^f01045d4:	0f b6 17             	movzbl (%edi),%edx$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	8d 42 dd             	lea    -0x23(%edx),%eax$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	3c 55                	cmp    $0x55,%al$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	0f 87 e1 03 00 00    	ja     f01049c3 <.L22>$/;"	l
f01045e2	obj/kern/kernel.asm	/^f01045e2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	89 d9                	mov    %ebx,%ecx$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	03 8c 83 1c 65 f8 ff 	add    -0x79ae4(%ebx,%eax,4),%ecx$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	ff e1                	jmp    *%ecx$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0 <.L67>:$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
f01045f3	obj/kern/kernel.asm	/^f01045f3:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f01045f7	obj/kern/kernel.asm	/^f01045f7:	eb d5                	jmp    f01045ce <vprintfmt+0x40>$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9 <.L28>:$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
f01045fc	obj/kern/kernel.asm	/^f01045fc:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	eb cc                	jmp    f01045ce <vprintfmt+0x40>$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602 <.L29>:$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104608	obj/kern/kernel.asm	/^f0104608:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
f010460d	obj/kern/kernel.asm	/^f010460d:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax$/;"	l
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
f0104614	obj/kern/kernel.asm	/^f0104614:	0f be 17             	movsbl (%edi),%edx$/;"	l
f0104617	obj/kern/kernel.asm	/^f0104617:	8d 4a d0             	lea    -0x30(%edx),%ecx$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f010461d	obj/kern/kernel.asm	/^f010461d:	77 55                	ja     f0104674 <.L23+0xf>$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	83 c7 01             	add    $0x1,%edi$/;"	l
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
f0104622	obj/kern/kernel.asm	/^f0104622:	eb e9                	jmp    f010460d <.L29+0xb>$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624 <.L26>:$/;"	l
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
f0104624	obj/kern/kernel.asm	/^f0104624:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104627	obj/kern/kernel.asm	/^f0104627:	8b 00                	mov    (%eax),%eax$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0104632	obj/kern/kernel.asm	/^f0104632:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104638	obj/kern/kernel.asm	/^f0104638:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f010463c	obj/kern/kernel.asm	/^f010463c:	79 90                	jns    f01045ce <vprintfmt+0x40>$/;"	l
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
f010463e	obj/kern/kernel.asm	/^f010463e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0104641	obj/kern/kernel.asm	/^f0104641:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104644	obj/kern/kernel.asm	/^f0104644:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	eb 81                	jmp    f01045ce <vprintfmt+0x40>$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d <.L27>:$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	85 c0                	test   %eax,%eax$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	e9 69 ff ff ff       	jmp    f01045ce <vprintfmt+0x40>$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665 <.L23>:$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
f0104668	obj/kern/kernel.asm	/^f0104668:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f010466f	obj/kern/kernel.asm	/^f010466f:	e9 5a ff ff ff       	jmp    f01045ce <vprintfmt+0x40>$/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	eb bf                	jmp    f0104638 <.L26+0x14>$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679 <.L33>:$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
f010467d	obj/kern/kernel.asm	/^f010467d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104680	obj/kern/kernel.asm	/^f0104680:	e9 49 ff ff ff       	jmp    f01045ce <vprintfmt+0x40>$/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685 <.L30>:$/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010468e	obj/kern/kernel.asm	/^f010468e:	56                   	push   %esi$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	ff 30                	pushl  (%eax)$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104697	obj/kern/kernel.asm	/^f0104697:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	e9 99 02 00 00       	jmp    f0104938 <.L35+0x45>$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f <.L32>:$/;"	l
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
f010469f	obj/kern/kernel.asm	/^f010469f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	8b 00                	mov    (%eax),%eax$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	99                   	cltd   $/;"	l
f01046a8	obj/kern/kernel.asm	/^f01046a8:	31 d0                	xor    %edx,%eax$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	29 d0                	sub    %edx,%eax$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f01046af	obj/kern/kernel.asm	/^f01046af:	7f 27                	jg     f01046d8 <.L32+0x39>$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	8b 94 83 90 20 00 00 	mov    0x2090(%ebx,%eax,4),%edx$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	85 d2                	test   %edx,%edx$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	74 1c                	je     f01046d8 <.L32+0x39>$/;"	l
f01046bc	obj/kern/kernel.asm	/^f01046bc:	52                   	push   %edx$/;"	l
f01046bd	obj/kern/kernel.asm	/^f01046bd:	8d 83 9c 5d f8 ff    	lea    -0x7a264(%ebx),%eax$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	50                   	push   %eax$/;"	l
f01046c4	obj/kern/kernel.asm	/^f01046c4:	56                   	push   %esi$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01046c8	obj/kern/kernel.asm	/^f01046c8:	e8 a4 fe ff ff       	call   f0104571 <printfmt>$/;"	l
f01046cd	obj/kern/kernel.asm	/^f01046cd:	83 c4 10             	add    $0x10,%esp$/;"	l
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
f01046d0	obj/kern/kernel.asm	/^f01046d0:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f01046d3	obj/kern/kernel.asm	/^f01046d3:	e9 60 02 00 00       	jmp    f0104938 <.L35+0x45>$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	50                   	push   %eax$/;"	l
f01046d9	obj/kern/kernel.asm	/^f01046d9:	8d 83 a9 64 f8 ff    	lea    -0x79b57(%ebx),%eax$/;"	l
f01046df	obj/kern/kernel.asm	/^f01046df:	50                   	push   %eax$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	56                   	push   %esi$/;"	l
f01046e1	obj/kern/kernel.asm	/^f01046e1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	e8 88 fe ff ff       	call   f0104571 <printfmt>$/;"	l
f01046e9	obj/kern/kernel.asm	/^f01046e9:	83 c4 10             	add    $0x10,%esp$/;"	l
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
f01046ec	obj/kern/kernel.asm	/^f01046ec:	89 7d 14             	mov    %edi,0x14(%ebp)$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	e9 44 02 00 00       	jmp    f0104938 <.L35+0x45>$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4 <.L36>:$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	83 c0 04             	add    $0x4,%eax$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01046fd	obj/kern/kernel.asm	/^f01046fd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104700	obj/kern/kernel.asm	/^f0104700:	8b 38                	mov    (%eax),%edi$/;"	l
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
f0104702	obj/kern/kernel.asm	/^f0104702:	85 ff                	test   %edi,%edi$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	8d 83 a2 64 f8 ff    	lea    -0x79b5e(%ebx),%eax$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0104711	obj/kern/kernel.asm	/^f0104711:	0f 8e b5 00 00 00    	jle    f01047cc <.L36+0xd8>$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f010471b	obj/kern/kernel.asm	/^f010471b:	75 08                	jne    f0104725 <.L36+0x31>$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f0104720	obj/kern/kernel.asm	/^f0104720:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0104723	obj/kern/kernel.asm	/^f0104723:	eb 6d                	jmp    f0104792 <.L36+0x9e>$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104728	obj/kern/kernel.asm	/^f0104728:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	57                   	push   %edi$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	e8 49 04 00 00       	call   f0104b7a <strnlen>$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	29 c2                	sub    %eax,%edx$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	83 c4 10             	add    $0x10,%esp$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104743	obj/kern/kernel.asm	/^f0104743:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0104746	obj/kern/kernel.asm	/^f0104746:	89 d7                	mov    %edx,%edi$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	eb 10                	jmp    f010475a <.L36+0x66>$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010474d	obj/kern/kernel.asm	/^f010474d:	56                   	push   %esi$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0104757	obj/kern/kernel.asm	/^f0104757:	83 c4 10             	add    $0x10,%esp$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	85 ff                	test   %edi,%edi$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	7f ec                	jg     f010474a <.L36+0x56>$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0104761	obj/kern/kernel.asm	/^f0104761:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0104764	obj/kern/kernel.asm	/^f0104764:	85 d2                	test   %edx,%edx$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	0f 49 c2             	cmovns %edx,%eax$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	29 c2                	sub    %eax,%edx$/;"	l
f0104770	obj/kern/kernel.asm	/^f0104770:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	eb 17                	jmp    f0104792 <.L36+0x9e>$/;"	l
f010477b	obj/kern/kernel.asm	/^f010477b:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	75 30                	jne    f01047b1 <.L36+0xbd>$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	50                   	push   %eax$/;"	l
f0104788	obj/kern/kernel.asm	/^f0104788:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010478b	obj/kern/kernel.asm	/^f010478b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)$/;"	l
f0104792	obj/kern/kernel.asm	/^f0104792:	83 c7 01             	add    $0x1,%edi$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	0f b6 57 ff          	movzbl -0x1(%edi),%edx$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	0f be c2             	movsbl %dl,%eax$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	85 c0                	test   %eax,%eax$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	74 52                	je     f01047f2 <.L36+0xfe>$/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	85 f6                	test   %esi,%esi$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	78 d7                	js     f010477b <.L36+0x87>$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01047a7	obj/kern/kernel.asm	/^f01047a7:	79 d2                	jns    f010477b <.L36+0x87>$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01047af	obj/kern/kernel.asm	/^f01047af:	eb 32                	jmp    f01047e3 <.L36+0xef>$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	0f be d2             	movsbl %dl,%edx$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	83 ea 20             	sub    $0x20,%edx$/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f01047ba	obj/kern/kernel.asm	/^f01047ba:	76 c5                	jbe    f0104781 <.L36+0x8d>$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	6a 3f                	push   $0x3f$/;"	l
f01047c4	obj/kern/kernel.asm	/^f01047c4:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047ca	obj/kern/kernel.asm	/^f01047ca:	eb c2                	jmp    f010478e <.L36+0x9a>$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	89 75 0c             	mov    %esi,0xc(%ebp)$/;"	l
f01047cf	obj/kern/kernel.asm	/^f01047cf:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	eb be                	jmp    f0104792 <.L36+0x9e>$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01047d7	obj/kern/kernel.asm	/^f01047d7:	56                   	push   %esi$/;"	l
f01047d8	obj/kern/kernel.asm	/^f01047d8:	6a 20                	push   $0x20$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047e3	obj/kern/kernel.asm	/^f01047e3:	85 ff                	test   %edi,%edi$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	7f ed                	jg     f01047d4 <.L36+0xe0>$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed:	e9 46 01 00 00       	jmp    f0104938 <.L35+0x45>$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01047f5	obj/kern/kernel.asm	/^f01047f5:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	eb e9                	jmp    f01047e3 <.L36+0xef>$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa <.L31>:$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	7e 40                	jle    f0104842 <.L31+0x48>$/;"	l
f0104802	obj/kern/kernel.asm	/^f0104802:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	8b 00                	mov    (%eax),%eax$/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104810	obj/kern/kernel.asm	/^f0104810:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f010481d	obj/kern/kernel.asm	/^f010481d:	79 55                	jns    f0104874 <.L31+0x7a>$/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	56                   	push   %esi$/;"	l
f0104823	obj/kern/kernel.asm	/^f0104823:	6a 2d                	push   $0x2d$/;"	l
f0104825	obj/kern/kernel.asm	/^f0104825:	ff 55 08             	call   *0x8(%ebp)$/;"	l
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
f0104828	obj/kern/kernel.asm	/^f0104828:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	f7 da                	neg    %edx$/;"	l
f0104830	obj/kern/kernel.asm	/^f0104830:	83 d1 00             	adc    $0x0,%ecx$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	f7 d9                	neg    %ecx$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	83 c4 10             	add    $0x10,%esp$/;"	l
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
f0104838	obj/kern/kernel.asm	/^f0104838:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010483d	obj/kern/kernel.asm	/^f010483d:	e9 db 00 00 00       	jmp    f010491d <.L35+0x2a>$/;"	l
f0104842	obj/kern/kernel.asm	/^f0104842:	85 c9                	test   %ecx,%ecx$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	75 17                	jne    f010485d <.L31+0x63>$/;"	l
f0104846	obj/kern/kernel.asm	/^f0104846:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104849	obj/kern/kernel.asm	/^f0104849:	8b 00                	mov    (%eax),%eax$/;"	l
f010484b	obj/kern/kernel.asm	/^f010484b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010484e	obj/kern/kernel.asm	/^f010484e:	99                   	cltd   $/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104855	obj/kern/kernel.asm	/^f0104855:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	eb bc                	jmp    f0104819 <.L31+0x1f>$/;"	l
f010485d	obj/kern/kernel.asm	/^f010485d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104860	obj/kern/kernel.asm	/^f0104860:	8b 00                	mov    (%eax),%eax$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104865	obj/kern/kernel.asm	/^f0104865:	99                   	cltd   $/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104869	obj/kern/kernel.asm	/^f0104869:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010486c	obj/kern/kernel.asm	/^f010486c:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
f0104872	obj/kern/kernel.asm	/^f0104872:	eb a5                	jmp    f0104819 <.L31+0x1f>$/;"	l
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
f0104874	obj/kern/kernel.asm	/^f0104874:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104877	obj/kern/kernel.asm	/^f0104877:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
f010487a	obj/kern/kernel.asm	/^f010487a:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	e9 99 00 00 00       	jmp    f010491d <.L35+0x2a>$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884 <.L37>:$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	7e 15                	jle    f01048a1 <.L37+0x1d>$/;"	l
f010488c	obj/kern/kernel.asm	/^f010488c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	8b 10                	mov    (%eax),%edx$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0104894	obj/kern/kernel.asm	/^f0104894:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0104897	obj/kern/kernel.asm	/^f0104897:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
f010489a	obj/kern/kernel.asm	/^f010489a:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	eb 7c                	jmp    f010491d <.L35+0x2a>$/;"	l
f01048a1	obj/kern/kernel.asm	/^f01048a1:	85 c9                	test   %ecx,%ecx$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	75 17                	jne    f01048bc <.L37+0x38>$/;"	l
f01048a5	obj/kern/kernel.asm	/^f01048a5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	8b 10                	mov    (%eax),%edx$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01048af	obj/kern/kernel.asm	/^f01048af:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
f01048b5	obj/kern/kernel.asm	/^f01048b5:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01048ba	obj/kern/kernel.asm	/^f01048ba:	eb 61                	jmp    f010491d <.L35+0x2a>$/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	8b 10                	mov    (%eax),%edx$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01048c9	obj/kern/kernel.asm	/^f01048c9:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
f01048cc	obj/kern/kernel.asm	/^f01048cc:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	eb 4a                	jmp    f010491d <.L35+0x2a>$/;"	l
f01048d3	obj/kern/kernel.asm	/^f01048d3 <.L34>:$/;"	l
f01048d3	obj/kern/kernel.asm	/^f01048d3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01048d6	obj/kern/kernel.asm	/^f01048d6:	56                   	push   %esi$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	6a 58                	push   $0x58$/;"	l
f01048d9	obj/kern/kernel.asm	/^f01048d9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01048dc	obj/kern/kernel.asm	/^f01048dc:	83 c4 08             	add    $0x8,%esp$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	56                   	push   %esi$/;"	l
f01048e0	obj/kern/kernel.asm	/^f01048e0:	6a 58                	push   $0x58$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01048e5	obj/kern/kernel.asm	/^f01048e5:	83 c4 08             	add    $0x8,%esp$/;"	l
f01048e8	obj/kern/kernel.asm	/^f01048e8:	56                   	push   %esi$/;"	l
f01048e9	obj/kern/kernel.asm	/^f01048e9:	6a 58                	push   $0x58$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01048ee	obj/kern/kernel.asm	/^f01048ee:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	eb 45                	jmp    f0104938 <.L35+0x45>$/;"	l
f01048f3	obj/kern/kernel.asm	/^f01048f3 <.L35>:$/;"	l
f01048f3	obj/kern/kernel.asm	/^f01048f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01048f6	obj/kern/kernel.asm	/^f01048f6:	56                   	push   %esi$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	6a 30                	push   $0x30$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	83 c4 08             	add    $0x8,%esp$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	56                   	push   %esi$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	6a 78                	push   $0x78$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	ff 55 08             	call   *0x8(%ebp)$/;"	l
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
f0104905	obj/kern/kernel.asm	/^f0104905:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	8b 10                	mov    (%eax),%edx$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
f0104918	obj/kern/kernel.asm	/^f0104918:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104920	obj/kern/kernel.asm	/^f0104920:	0f be 7d d4          	movsbl -0x2c(%ebp),%edi$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	57                   	push   %edi$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	50                   	push   %eax$/;"	l
f0104929	obj/kern/kernel.asm	/^f0104929:	51                   	push   %ecx$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	52                   	push   %edx$/;"	l
f010492b	obj/kern/kernel.asm	/^f010492b:	89 f2                	mov    %esi,%edx$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104930	obj/kern/kernel.asm	/^f0104930:	e8 55 fb ff ff       	call   f010448a <printnum>$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	83 c4 20             	add    $0x20,%esp$/;"	l
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
f0104938	obj/kern/kernel.asm	/^f0104938:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010493b	obj/kern/kernel.asm	/^f010493b:	83 c7 01             	add    $0x1,%edi$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	0f b6 47 ff          	movzbl -0x1(%edi),%eax$/;"	l
f0104942	obj/kern/kernel.asm	/^f0104942:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	0f 84 62 fc ff ff    	je     f01045ad <vprintfmt+0x1f>$/;"	l
f010494b	obj/kern/kernel.asm	/^f010494b:	85 c0                	test   %eax,%eax$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	0f 84 91 00 00 00    	je     f01049e4 <.L22+0x21>$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	56                   	push   %esi$/;"	l
f0104957	obj/kern/kernel.asm	/^f0104957:	50                   	push   %eax$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010495b	obj/kern/kernel.asm	/^f010495b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	eb db                	jmp    f010493b <.L35+0x48>$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960 <.L38>:$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0104963	obj/kern/kernel.asm	/^f0104963:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	7e 15                	jle    f010497d <.L38+0x1d>$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010496b	obj/kern/kernel.asm	/^f010496b:	8b 10                	mov    (%eax),%edx$/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	8d 40 08             	lea    0x8(%eax),%eax$/;"	l
f0104973	obj/kern/kernel.asm	/^f0104973:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
f0104976	obj/kern/kernel.asm	/^f0104976:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010497b	obj/kern/kernel.asm	/^f010497b:	eb a0                	jmp    f010491d <.L35+0x2a>$/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	85 c9                	test   %ecx,%ecx$/;"	l
f010497f	obj/kern/kernel.asm	/^f010497f:	75 17                	jne    f0104998 <.L38+0x38>$/;"	l
f0104981	obj/kern/kernel.asm	/^f0104981:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104984	obj/kern/kernel.asm	/^f0104984:	8b 10                	mov    (%eax),%edx$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010498b	obj/kern/kernel.asm	/^f010498b:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
f0104991	obj/kern/kernel.asm	/^f0104991:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	eb 85                	jmp    f010491d <.L35+0x2a>$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010499b	obj/kern/kernel.asm	/^f010499b:	8b 10                	mov    (%eax),%edx$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01049a2	obj/kern/kernel.asm	/^f01049a2:	8d 40 04             	lea    0x4(%eax),%eax$/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
f01049a8	obj/kern/kernel.asm	/^f01049a8:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	e9 6b ff ff ff       	jmp    f010491d <.L35+0x2a>$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2 <.L25>:$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	56                   	push   %esi$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	6a 25                	push   $0x25$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01049bb	obj/kern/kernel.asm	/^f01049bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049be	obj/kern/kernel.asm	/^f01049be:	e9 75 ff ff ff       	jmp    f0104938 <.L35+0x45>$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3 <.L22>:$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	56                   	push   %esi$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	6a 25                	push   $0x25$/;"	l
f01049c9	obj/kern/kernel.asm	/^f01049c9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	89 f8                	mov    %edi,%eax$/;"	l
f01049d1	obj/kern/kernel.asm	/^f01049d1:	eb 03                	jmp    f01049d6 <.L22+0x13>$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01049d6	obj/kern/kernel.asm	/^f01049d6:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	75 f7                	jne    f01049d3 <.L22+0x10>$/;"	l
f01049dc	obj/kern/kernel.asm	/^f01049dc:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01049df	obj/kern/kernel.asm	/^f01049df:	e9 54 ff ff ff       	jmp    f0104938 <.L35+0x45>$/;"	l
f01049e4	obj/kern/kernel.asm	/^f01049e4:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01049e7	obj/kern/kernel.asm	/^f01049e7:	5b                   	pop    %ebx$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	5e                   	pop    %esi$/;"	l
f01049e9	obj/kern/kernel.asm	/^f01049e9:	5f                   	pop    %edi$/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	5d                   	pop    %ebp$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	c3                   	ret    $/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec <vsnprintf>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec:	55                   	push   %ebp$/;"	l
f01049ed	obj/kern/kernel.asm	/^f01049ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01049ef	obj/kern/kernel.asm	/^f01049ef:	53                   	push   %ebx$/;"	l
f01049f0	obj/kern/kernel.asm	/^f01049f0:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01049f3	obj/kern/kernel.asm	/^f01049f3:	e8 6f b7 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8:	81 c3 28 b6 07 00    	add    $0x7b628,%ebx$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104a07	obj/kern/kernel.asm	/^f0104a07:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	85 c0                	test   %eax,%eax$/;"	l
f0104a17	obj/kern/kernel.asm	/^f0104a17:	74 2b                	je     f0104a44 <vsnprintf+0x58>$/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	85 d2                	test   %edx,%edx$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	7e 27                	jle    f0104a44 <vsnprintf+0x58>$/;"	l
f0104a1d	obj/kern/kernel.asm	/^f0104a1d:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	50                   	push   %eax$/;"	l
f0104a27	obj/kern/kernel.asm	/^f0104a27:	8d 83 34 45 f8 ff    	lea    -0x7bacc(%ebx),%eax$/;"	l
f0104a2d	obj/kern/kernel.asm	/^f0104a2d:	50                   	push   %eax$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	e8 5b fb ff ff       	call   f010458e <vprintfmt>$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0104a42	obj/kern/kernel.asm	/^f0104a42:	c9                   	leave  $/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	c3                   	ret    $/;"	l
f0104a44	obj/kern/kernel.asm	/^f0104a44:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104a49	obj/kern/kernel.asm	/^f0104a49:	eb f4                	jmp    f0104a3f <vsnprintf+0x53>$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b <snprintf>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	55                   	push   %ebp$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a4e	obj/kern/kernel.asm	/^f0104a4e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104a51	obj/kern/kernel.asm	/^f0104a51:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
f0104a54	obj/kern/kernel.asm	/^f0104a54:	50                   	push   %eax$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104a58	obj/kern/kernel.asm	/^f0104a58:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104a5b	obj/kern/kernel.asm	/^f0104a5b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104a5e	obj/kern/kernel.asm	/^f0104a5e:	e8 89 ff ff ff       	call   f01049ec <vsnprintf>$/;"	l
f0104a63	obj/kern/kernel.asm	/^f0104a63:	c9                   	leave  $/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	c3                   	ret    $/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65 <readline>:$/;"	l
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	55                   	push   %ebp$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	57                   	push   %edi$/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	56                   	push   %esi$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	53                   	push   %ebx$/;"	l
f0104a6b	obj/kern/kernel.asm	/^f0104a6b:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104a6e	obj/kern/kernel.asm	/^f0104a6e:	e8 f4 b6 ff ff       	call   f0100167 <__x86.get_pc_thunk.bx>$/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	81 c3 ad b5 07 00    	add    $0x7b5ad,%ebx$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	85 c0                	test   %eax,%eax$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	74 13                	je     f0104a93 <readline+0x2e>$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	50                   	push   %eax$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	8d 83 9c 5d f8 ff    	lea    -0x7a264(%ebx),%eax$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	50                   	push   %eax$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	e8 25 ef ff ff       	call   f01039b5 <cprintf>$/;"	l
f0104a90	obj/kern/kernel.asm	/^f0104a90:	83 c4 10             	add    $0x10,%esp$/;"	l
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
f0104a93	obj/kern/kernel.asm	/^f0104a93:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	6a 00                	push   $0x0$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	e8 62 bc ff ff       	call   f01006ff <iscons>$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	83 c4 10             	add    $0x10,%esp$/;"	l
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104aa8	obj/kern/kernel.asm	/^f0104aa8:	eb 46                	jmp    f0104af0 <readline+0x8b>$/;"	l
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104aad	obj/kern/kernel.asm	/^f0104aad:	50                   	push   %eax$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	8d 83 74 66 f8 ff    	lea    -0x7998c(%ebx),%eax$/;"	l
f0104ab4	obj/kern/kernel.asm	/^f0104ab4:	50                   	push   %eax$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	e8 fb ee ff ff       	call   f01039b5 <cprintf>$/;"	l
f0104aba	obj/kern/kernel.asm	/^f0104aba:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104abd	obj/kern/kernel.asm	/^f0104abd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104ac2	obj/kern/kernel.asm	/^f0104ac2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	5b                   	pop    %ebx$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	5e                   	pop    %esi$/;"	l
f0104ac7	obj/kern/kernel.asm	/^f0104ac7:	5f                   	pop    %edi$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	5d                   	pop    %ebp$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	c3                   	ret    $/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104ace	obj/kern/kernel.asm	/^f0104ace:	75 05                	jne    f0104ad5 <readline+0x70>$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0104ad3	obj/kern/kernel.asm	/^f0104ad3:	eb 1b                	jmp    f0104af0 <readline+0x8b>$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	6a 08                	push   $0x8$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	e8 ff bb ff ff       	call   f01006de <cputchar>$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ae2	obj/kern/kernel.asm	/^f0104ae2:	eb ec                	jmp    f0104ad0 <readline+0x6b>$/;"	l
f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	89 f0                	mov    %esi,%eax$/;"	l
f0104ae6	obj/kern/kernel.asm	/^f0104ae6:	88 84 3b c0 2b 00 00 	mov    %al,0x2bc0(%ebx,%edi,1)$/;"	l
f0104aed	obj/kern/kernel.asm	/^f0104aed:	8d 7f 01             	lea    0x1(%edi),%edi$/;"	l
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
f0104af0	obj/kern/kernel.asm	/^f0104af0:	e8 f9 bb ff ff       	call   f01006ee <getchar>$/;"	l
f0104af5	obj/kern/kernel.asm	/^f0104af5:	89 c6                	mov    %eax,%esi$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	85 c0                	test   %eax,%eax$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	78 af                	js     f0104aaa <readline+0x45>$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0104afe	obj/kern/kernel.asm	/^f0104afe:	0f 94 c2             	sete   %dl$/;"	l
f0104b01	obj/kern/kernel.asm	/^f0104b01:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0104b04	obj/kern/kernel.asm	/^f0104b04:	0f 94 c0             	sete   %al$/;"	l
f0104b07	obj/kern/kernel.asm	/^f0104b07:	08 c2                	or     %al,%dl$/;"	l
f0104b09	obj/kern/kernel.asm	/^f0104b09:	74 04                	je     f0104b0f <readline+0xaa>$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	85 ff                	test   %edi,%edi$/;"	l
f0104b0d	obj/kern/kernel.asm	/^f0104b0d:	7f bb                	jg     f0104aca <readline+0x65>$/;"	l
f0104b0f	obj/kern/kernel.asm	/^f0104b0f:	83 fe 1f             	cmp    $0x1f,%esi$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	7e 1c                	jle    f0104b30 <readline+0xcb>$/;"	l
f0104b14	obj/kern/kernel.asm	/^f0104b14:	81 ff fe 03 00 00    	cmp    $0x3fe,%edi$/;"	l
f0104b1a	obj/kern/kernel.asm	/^f0104b1a:	7f 14                	jg     f0104b30 <readline+0xcb>$/;"	l
f0104b1c	obj/kern/kernel.asm	/^f0104b1c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	74 c2                	je     f0104ae4 <readline+0x7f>$/;"	l
f0104b22	obj/kern/kernel.asm	/^f0104b22:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	56                   	push   %esi$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	e8 b3 bb ff ff       	call   f01006de <cputchar>$/;"	l
f0104b2b	obj/kern/kernel.asm	/^f0104b2b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	eb b4                	jmp    f0104ae4 <readline+0x7f>$/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30:	83 fe 0a             	cmp    $0xa,%esi$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	74 05                	je     f0104b3a <readline+0xd5>$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	83 fe 0d             	cmp    $0xd,%esi$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	75 b6                	jne    f0104af0 <readline+0x8b>$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	75 13                	jne    f0104b53 <readline+0xee>$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	c6 84 3b c0 2b 00 00 	movb   $0x0,0x2bc0(%ebx,%edi,1)$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	00 $/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	8d 83 c0 2b 00 00    	lea    0x2bc0(%ebx),%eax$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	e9 6f ff ff ff       	jmp    f0104ac2 <readline+0x5d>$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104b56	obj/kern/kernel.asm	/^f0104b56:	6a 0a                	push   $0xa$/;"	l
f0104b58	obj/kern/kernel.asm	/^f0104b58:	e8 81 bb ff ff       	call   f01006de <cputchar>$/;"	l
f0104b5d	obj/kern/kernel.asm	/^f0104b5d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b60	obj/kern/kernel.asm	/^f0104b60:	eb de                	jmp    f0104b40 <readline+0xdb>$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62 <strlen>:$/;"	l
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
int	obj/kern/kernel.asm	/^int$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62:	55                   	push   %ebp$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b65	obj/kern/kernel.asm	/^f0104b65:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b6d	obj/kern/kernel.asm	/^f0104b6d:	eb 03                	jmp    f0104b72 <strlen+0x10>$/;"	l
f0104b6f	obj/kern/kernel.asm	/^f0104b6f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	75 f7                	jne    f0104b6f <strlen+0xd>$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	5d                   	pop    %ebp$/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	c3                   	ret    $/;"	l
f0104b7a	obj/kern/kernel.asm	/^f0104b7a <strnlen>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f0104b7a	obj/kern/kernel.asm	/^f0104b7a:	55                   	push   %ebp$/;"	l
f0104b7b	obj/kern/kernel.asm	/^f0104b7b:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b7d	obj/kern/kernel.asm	/^f0104b7d:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104b80	obj/kern/kernel.asm	/^f0104b80:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104b83	obj/kern/kernel.asm	/^f0104b83:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	eb 03                	jmp    f0104b8d <strnlen+0x13>$/;"	l
f0104b8a	obj/kern/kernel.asm	/^f0104b8a:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104b8d	obj/kern/kernel.asm	/^f0104b8d:	39 d0                	cmp    %edx,%eax$/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	74 06                	je     f0104b97 <strnlen+0x1d>$/;"	l
f0104b91	obj/kern/kernel.asm	/^f0104b91:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f0104b95	obj/kern/kernel.asm	/^f0104b95:	75 f3                	jne    f0104b8a <strnlen+0x10>$/;"	l
f0104b97	obj/kern/kernel.asm	/^f0104b97:	5d                   	pop    %ebp$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	c3                   	ret    $/;"	l
f0104b99	obj/kern/kernel.asm	/^f0104b99 <strcpy>:$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
f0104b99	obj/kern/kernel.asm	/^f0104b99:	55                   	push   %ebp$/;"	l
f0104b9a	obj/kern/kernel.asm	/^f0104b9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	53                   	push   %ebx$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ba0	obj/kern/kernel.asm	/^f0104ba0:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	89 c2                	mov    %eax,%edx$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104ba8	obj/kern/kernel.asm	/^f0104ba8:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	84 db                	test   %bl,%bl$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	75 ef                	jne    f0104ba5 <strcpy+0xc>$/;"	l
f0104bb6	obj/kern/kernel.asm	/^f0104bb6:	5b                   	pop    %ebx$/;"	l
f0104bb7	obj/kern/kernel.asm	/^f0104bb7:	5d                   	pop    %ebp$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	c3                   	ret    $/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9 <strcat>:$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	55                   	push   %ebp$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	89 e5                	mov    %esp,%ebp$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	53                   	push   %ebx$/;"	l
f0104bbd	obj/kern/kernel.asm	/^f0104bbd:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	53                   	push   %ebx$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	e8 9c ff ff ff       	call   f0104b62 <strlen>$/;"	l
f0104bc6	obj/kern/kernel.asm	/^f0104bc6:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	01 d8                	add    %ebx,%eax$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	50                   	push   %eax$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	e8 c5 ff ff ff       	call   f0104b99 <strcpy>$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	89 d8                	mov    %ebx,%eax$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	c9                   	leave  $/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	c3                   	ret    $/;"	l
f0104bdb	obj/kern/kernel.asm	/^f0104bdb <strncpy>:$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
f0104bdb	obj/kern/kernel.asm	/^f0104bdb:	55                   	push   %ebp$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	89 e5                	mov    %esp,%ebp$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	56                   	push   %esi$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	53                   	push   %ebx$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104be3	obj/kern/kernel.asm	/^f0104be3:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	89 f3                	mov    %esi,%ebx$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
f0104beb	obj/kern/kernel.asm	/^f0104beb:	89 f2                	mov    %esi,%edx$/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	eb 0f                	jmp    f0104bfe <strncpy+0x23>$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f0104bf8	obj/kern/kernel.asm	/^f0104bf8:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0104bfb	obj/kern/kernel.asm	/^f0104bfb:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	39 da                	cmp    %ebx,%edx$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	75 ed                	jne    f0104bef <strncpy+0x14>$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	89 f0                	mov    %esi,%eax$/;"	l
f0104c04	obj/kern/kernel.asm	/^f0104c04:	5b                   	pop    %ebx$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	5e                   	pop    %esi$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	5d                   	pop    %ebp$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	c3                   	ret    $/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08 <strlcpy>:$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	55                   	push   %ebp$/;"	l
f0104c09	obj/kern/kernel.asm	/^f0104c09:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c0b	obj/kern/kernel.asm	/^f0104c0b:	56                   	push   %esi$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	53                   	push   %ebx$/;"	l
f0104c0d	obj/kern/kernel.asm	/^f0104c0d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104c13	obj/kern/kernel.asm	/^f0104c13:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104c16	obj/kern/kernel.asm	/^f0104c16:	89 f0                	mov    %esi,%eax$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	85 c9                	test   %ecx,%ecx$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	75 0b                	jne    f0104c2b <strlcpy+0x23>$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	eb 17                	jmp    f0104c39 <strlcpy+0x31>$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104c28	obj/kern/kernel.asm	/^f0104c28:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	39 d8                	cmp    %ebx,%eax$/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d:	74 07                	je     f0104c36 <strlcpy+0x2e>$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32:	84 c9                	test   %cl,%cl$/;"	l
f0104c34	obj/kern/kernel.asm	/^f0104c34:	75 ec                	jne    f0104c22 <strlcpy+0x1a>$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	29 f0                	sub    %esi,%eax$/;"	l
f0104c3b	obj/kern/kernel.asm	/^f0104c3b:	5b                   	pop    %ebx$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c:	5e                   	pop    %esi$/;"	l
f0104c3d	obj/kern/kernel.asm	/^f0104c3d:	5d                   	pop    %ebp$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	c3                   	ret    $/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f <strcmp>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	55                   	push   %ebp$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48:	eb 06                	jmp    f0104c50 <strcmp+0x11>$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	84 c0                	test   %al,%al$/;"	l
f0104c55	obj/kern/kernel.asm	/^f0104c55:	74 04                	je     f0104c5b <strcmp+0x1c>$/;"	l
f0104c57	obj/kern/kernel.asm	/^f0104c57:	3a 02                	cmp    (%edx),%al$/;"	l
f0104c59	obj/kern/kernel.asm	/^f0104c59:	74 ef                	je     f0104c4a <strcmp+0xb>$/;"	l
f0104c5b	obj/kern/kernel.asm	/^f0104c5b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0104c61	obj/kern/kernel.asm	/^f0104c61:	29 d0                	sub    %edx,%eax$/;"	l
f0104c63	obj/kern/kernel.asm	/^f0104c63:	5d                   	pop    %ebp$/;"	l
f0104c64	obj/kern/kernel.asm	/^f0104c64:	c3                   	ret    $/;"	l
f0104c65	obj/kern/kernel.asm	/^f0104c65 <strncmp>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f0104c65	obj/kern/kernel.asm	/^f0104c65:	55                   	push   %ebp$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	53                   	push   %ebx$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	89 c3                	mov    %eax,%ebx$/;"	l
f0104c71	obj/kern/kernel.asm	/^f0104c71:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	eb 06                	jmp    f0104c7c <strncmp+0x17>$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104c79	obj/kern/kernel.asm	/^f0104c79:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	39 d8                	cmp    %ebx,%eax$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	74 16                	je     f0104c96 <strncmp+0x31>$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0104c83	obj/kern/kernel.asm	/^f0104c83:	84 c9                	test   %cl,%cl$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	74 04                	je     f0104c8b <strncmp+0x26>$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	74 eb                	je     f0104c76 <strncmp+0x11>$/;"	l
f0104c8b	obj/kern/kernel.asm	/^f0104c8b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	29 d0                	sub    %edx,%eax$/;"	l
f0104c93	obj/kern/kernel.asm	/^f0104c93:	5b                   	pop    %ebx$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	5d                   	pop    %ebp$/;"	l
f0104c95	obj/kern/kernel.asm	/^f0104c95:	c3                   	ret    $/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104c9b	obj/kern/kernel.asm	/^f0104c9b:	eb f6                	jmp    f0104c93 <strncmp+0x2e>$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d <strchr>:$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	55                   	push   %ebp$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0104ca7	obj/kern/kernel.asm	/^f0104ca7:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	84 d2                	test   %dl,%dl$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	74 09                	je     f0104cb7 <strchr+0x1a>$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae:	38 ca                	cmp    %cl,%dl$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	74 0a                	je     f0104cbc <strchr+0x1f>$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104cb5	obj/kern/kernel.asm	/^f0104cb5:	eb f0                	jmp    f0104ca7 <strchr+0xa>$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	5d                   	pop    %ebp$/;"	l
f0104cbd	obj/kern/kernel.asm	/^f0104cbd:	c3                   	ret    $/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe <strfind>:$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	55                   	push   %ebp$/;"	l
f0104cbf	obj/kern/kernel.asm	/^f0104cbf:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104cc4	obj/kern/kernel.asm	/^f0104cc4:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0104cc8	obj/kern/kernel.asm	/^f0104cc8:	eb 03                	jmp    f0104ccd <strfind+0xf>$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104ccd	obj/kern/kernel.asm	/^f0104ccd:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	38 ca                	cmp    %cl,%dl$/;"	l
f0104cd2	obj/kern/kernel.asm	/^f0104cd2:	74 04                	je     f0104cd8 <strfind+0x1a>$/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4:	84 d2                	test   %dl,%dl$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	75 f2                	jne    f0104cca <strfind+0xc>$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	5d                   	pop    %ebp$/;"	l
f0104cd9	obj/kern/kernel.asm	/^f0104cd9:	c3                   	ret    $/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda <memset>:$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	55                   	push   %ebp$/;"	l
f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cdd	obj/kern/kernel.asm	/^f0104cdd:	57                   	push   %edi$/;"	l
f0104cde	obj/kern/kernel.asm	/^f0104cde:	56                   	push   %esi$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	53                   	push   %ebx$/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104ce3	obj/kern/kernel.asm	/^f0104ce3:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	85 c9                	test   %ecx,%ecx$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	74 13                	je     f0104cfd <memset+0x23>$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	75 05                	jne    f0104cf7 <memset+0x1d>$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104cf5	obj/kern/kernel.asm	/^f0104cf5:	74 0d                	je     f0104d04 <memset+0x2a>$/;"	l
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
f0104cf7	obj/kern/kernel.asm	/^f0104cf7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104cfa	obj/kern/kernel.asm	/^f0104cfa:	fc                   	cld    $/;"	l
f0104cfb	obj/kern/kernel.asm	/^f0104cfb:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	89 f8                	mov    %edi,%eax$/;"	l
f0104cff	obj/kern/kernel.asm	/^f0104cff:	5b                   	pop    %ebx$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	5e                   	pop    %esi$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	5f                   	pop    %edi$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	5d                   	pop    %ebp$/;"	l
f0104d03	obj/kern/kernel.asm	/^f0104d03:	c3                   	ret    $/;"	l
f0104d04	obj/kern/kernel.asm	/^f0104d04:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
f0104d08	obj/kern/kernel.asm	/^f0104d08:	89 d3                	mov    %edx,%ebx$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	89 d0                	mov    %edx,%eax$/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	89 d6                	mov    %edx,%esi$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	c1 e6 10             	shl    $0x10,%esi$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	09 f0                	or     %esi,%eax$/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	09 c2                	or     %eax,%edx$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	09 da                	or     %ebx,%edx$/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	89 d0                	mov    %edx,%eax$/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22:	fc                   	cld    $/;"	l
f0104d23	obj/kern/kernel.asm	/^f0104d23:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	eb d6                	jmp    f0104cfd <memset+0x23>$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27 <memmove>:$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	55                   	push   %ebp$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	57                   	push   %edi$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	56                   	push   %esi$/;"	l
f0104d2c	obj/kern/kernel.asm	/^f0104d2c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
f0104d35	obj/kern/kernel.asm	/^f0104d35:	39 c6                	cmp    %eax,%esi$/;"	l
f0104d37	obj/kern/kernel.asm	/^f0104d37:	73 35                	jae    f0104d6e <memmove+0x47>$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	39 c2                	cmp    %eax,%edx$/;"	l
f0104d3e	obj/kern/kernel.asm	/^f0104d3e:	76 2e                	jbe    f0104d6e <memmove+0x47>$/;"	l
f0104d40	obj/kern/kernel.asm	/^f0104d40:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	89 d6                	mov    %edx,%esi$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	09 fe                	or     %edi,%esi$/;"	l
f0104d47	obj/kern/kernel.asm	/^f0104d47:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	74 0c                	je     f0104d5b <memmove+0x34>$/;"	l
f0104d4f	obj/kern/kernel.asm	/^f0104d4f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0104d55	obj/kern/kernel.asm	/^f0104d55:	fd                   	std    $/;"	l
f0104d56	obj/kern/kernel.asm	/^f0104d56:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	fc                   	cld    $/;"	l
f0104d59	obj/kern/kernel.asm	/^f0104d59:	eb 21                	jmp    f0104d7c <memmove+0x55>$/;"	l
f0104d5b	obj/kern/kernel.asm	/^f0104d5b:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	75 ef                	jne    f0104d4f <memmove+0x28>$/;"	l
f0104d60	obj/kern/kernel.asm	/^f0104d60:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0104d63	obj/kern/kernel.asm	/^f0104d63:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	fd                   	std    $/;"	l
f0104d6a	obj/kern/kernel.asm	/^f0104d6a:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	eb ea                	jmp    f0104d58 <memmove+0x31>$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	89 f2                	mov    %esi,%edx$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	09 c2                	or     %eax,%edx$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	74 09                	je     f0104d80 <memmove+0x59>$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	89 c7                	mov    %eax,%edi$/;"	l
f0104d79	obj/kern/kernel.asm	/^f0104d79:	fc                   	cld    $/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	5e                   	pop    %esi$/;"	l
f0104d7d	obj/kern/kernel.asm	/^f0104d7d:	5f                   	pop    %edi$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	5d                   	pop    %ebp$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	c3                   	ret    $/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	75 f2                	jne    f0104d77 <memmove+0x50>$/;"	l
f0104d85	obj/kern/kernel.asm	/^f0104d85:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	89 c7                	mov    %eax,%edi$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	fc                   	cld    $/;"	l
f0104d8b	obj/kern/kernel.asm	/^f0104d8b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104d8d	obj/kern/kernel.asm	/^f0104d8d:	eb ed                	jmp    f0104d7c <memmove+0x55>$/;"	l
f0104d8f	obj/kern/kernel.asm	/^f0104d8f <memcpy>:$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
f0104d8f	obj/kern/kernel.asm	/^f0104d8f:	55                   	push   %ebp$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104d95	obj/kern/kernel.asm	/^f0104d95:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104d9b	obj/kern/kernel.asm	/^f0104d9b:	e8 87 ff ff ff       	call   f0104d27 <memmove>$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0:	c9                   	leave  $/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	c3                   	ret    $/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2 <memcmp>:$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	55                   	push   %ebp$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	89 e5                	mov    %esp,%ebp$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	56                   	push   %esi$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	53                   	push   %ebx$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104dad	obj/kern/kernel.asm	/^f0104dad:	89 c6                	mov    %eax,%esi$/;"	l
f0104daf	obj/kern/kernel.asm	/^f0104daf:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	39 f0                	cmp    %esi,%eax$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	74 1c                	je     f0104dd2 <memcmp+0x30>$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	38 d9                	cmp    %bl,%cl$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	75 08                	jne    f0104dc8 <memcmp+0x26>$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104dc3	obj/kern/kernel.asm	/^f0104dc3:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	eb ea                	jmp    f0104db2 <memcmp+0x10>$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	29 d8                	sub    %ebx,%eax$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0:	eb 05                	jmp    f0104dd7 <memcmp+0x35>$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	5b                   	pop    %ebx$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	5e                   	pop    %esi$/;"	l
f0104dd9	obj/kern/kernel.asm	/^f0104dd9:	5d                   	pop    %ebp$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	c3                   	ret    $/;"	l
f0104ddb	obj/kern/kernel.asm	/^f0104ddb <memfind>:$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
f0104ddb	obj/kern/kernel.asm	/^f0104ddb:	55                   	push   %ebp$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	89 e5                	mov    %esp,%ebp$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	89 c2                	mov    %eax,%edx$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0104de9	obj/kern/kernel.asm	/^f0104de9:	39 d0                	cmp    %edx,%eax$/;"	l
f0104deb	obj/kern/kernel.asm	/^f0104deb:	73 09                	jae    f0104df6 <memfind+0x1b>$/;"	l
f0104ded	obj/kern/kernel.asm	/^f0104ded:	38 08                	cmp    %cl,(%eax)$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	74 05                	je     f0104df6 <memfind+0x1b>$/;"	l
f0104df1	obj/kern/kernel.asm	/^f0104df1:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	eb f3                	jmp    f0104de9 <memfind+0xe>$/;"	l
f0104df6	obj/kern/kernel.asm	/^f0104df6:	5d                   	pop    %ebp$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	c3                   	ret    $/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8 <strtol>:$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	55                   	push   %ebp$/;"	l
f0104df9	obj/kern/kernel.asm	/^f0104df9:	89 e5                	mov    %esp,%ebp$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	57                   	push   %edi$/;"	l
f0104dfc	obj/kern/kernel.asm	/^f0104dfc:	56                   	push   %esi$/;"	l
f0104dfd	obj/kern/kernel.asm	/^f0104dfd:	53                   	push   %ebx$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104e01	obj/kern/kernel.asm	/^f0104e01:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	eb 03                	jmp    f0104e09 <strtol+0x11>$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104e09	obj/kern/kernel.asm	/^f0104e09:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c:	3c 20                	cmp    $0x20,%al$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	74 f6                	je     f0104e06 <strtol+0xe>$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	3c 09                	cmp    $0x9,%al$/;"	l
f0104e12	obj/kern/kernel.asm	/^f0104e12:	74 f2                	je     f0104e06 <strtol+0xe>$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	74 2e                	je     f0104e46 <strtol+0x4e>$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	74 2f                	je     f0104e50 <strtol+0x58>$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	75 05                	jne    f0104e2e <strtol+0x36>$/;"	l
f0104e29	obj/kern/kernel.asm	/^f0104e29:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	74 2c                	je     f0104e5a <strtol+0x62>$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	85 db                	test   %ebx,%ebx$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30:	75 0a                	jne    f0104e3c <strtol+0x44>$/;"	l
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
f0104e32	obj/kern/kernel.asm	/^f0104e32:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0104e37	obj/kern/kernel.asm	/^f0104e37:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0104e3a	obj/kern/kernel.asm	/^f0104e3a:	74 28                	je     f0104e64 <strtol+0x6c>$/;"	l
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
f0104e3c	obj/kern/kernel.asm	/^f0104e3c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104e41	obj/kern/kernel.asm	/^f0104e41:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	eb 50                	jmp    f0104e96 <strtol+0x9e>$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	eb d1                	jmp    f0104e21 <strtol+0x29>$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0104e58	obj/kern/kernel.asm	/^f0104e58:	eb c7                	jmp    f0104e21 <strtol+0x29>$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	74 0e                	je     f0104e6e <strtol+0x76>$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	85 db                	test   %ebx,%ebx$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	75 d8                	jne    f0104e3c <strtol+0x44>$/;"	l
f0104e64	obj/kern/kernel.asm	/^f0104e64:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0104e6c	obj/kern/kernel.asm	/^f0104e6c:	eb ce                	jmp    f0104e3c <strtol+0x44>$/;"	l
f0104e6e	obj/kern/kernel.asm	/^f0104e6e:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0104e76	obj/kern/kernel.asm	/^f0104e76:	eb c4                	jmp    f0104e3c <strtol+0x44>$/;"	l
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
f0104e78	obj/kern/kernel.asm	/^f0104e78:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b:	89 f3                	mov    %esi,%ebx$/;"	l
f0104e7d	obj/kern/kernel.asm	/^f0104e7d:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0104e80	obj/kern/kernel.asm	/^f0104e80:	77 29                	ja     f0104eab <strtol+0xb3>$/;"	l
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
f0104e82	obj/kern/kernel.asm	/^f0104e82:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104e85	obj/kern/kernel.asm	/^f0104e85:	83 ea 57             	sub    $0x57,%edx$/;"	l
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
f0104e88	obj/kern/kernel.asm	/^f0104e88:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	7d 30                	jge    f0104ebd <strtol+0xc5>$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f0104e94	obj/kern/kernel.asm	/^f0104e94:	01 d0                	add    %edx,%eax$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0104e99	obj/kern/kernel.asm	/^f0104e99:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	89 f3                	mov    %esi,%ebx$/;"	l
f0104e9e	obj/kern/kernel.asm	/^f0104e9e:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1:	77 d5                	ja     f0104e78 <strtol+0x80>$/;"	l
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104ea6	obj/kern/kernel.asm	/^f0104ea6:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	eb dd                	jmp    f0104e88 <strtol+0x90>$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f0104eae	obj/kern/kernel.asm	/^f0104eae:	89 f3                	mov    %esi,%ebx$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	77 08                	ja     f0104ebd <strtol+0xc5>$/;"	l
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	0f be d2             	movsbl %dl,%edx$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	83 ea 37             	sub    $0x37,%edx$/;"	l
f0104ebb	obj/kern/kernel.asm	/^f0104ebb:	eb cb                	jmp    f0104e88 <strtol+0x90>$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0104ec1	obj/kern/kernel.asm	/^f0104ec1:	74 05                	je     f0104ec8 <strtol+0xd0>$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104ec6	obj/kern/kernel.asm	/^f0104ec6:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	89 c2                	mov    %eax,%edx$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	f7 da                	neg    %edx$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	85 ff                	test   %edi,%edi$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	5b                   	pop    %ebx$/;"	l
f0104ed2	obj/kern/kernel.asm	/^f0104ed2:	5e                   	pop    %esi$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	5f                   	pop    %edi$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	5d                   	pop    %ebp$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	c3                   	ret    $/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	66 90                	xchg   %ax,%ax$/;"	l
f0104ed8	obj/kern/kernel.asm	/^f0104ed8:	66 90                	xchg   %ax,%ax$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	66 90                	xchg   %ax,%ax$/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	66 90                	xchg   %ax,%ax$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	66 90                	xchg   %ax,%ax$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0 <__udivdi3>:$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	55                   	push   %ebp$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	57                   	push   %edi$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2:	56                   	push   %esi$/;"	l
f0104ee3	obj/kern/kernel.asm	/^f0104ee3:	53                   	push   %ebx$/;"	l
f0104ee4	obj/kern/kernel.asm	/^f0104ee4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	8b 6c 24 30          	mov    0x30(%esp),%ebp$/;"	l
f0104eef	obj/kern/kernel.asm	/^f0104eef:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	8b 5c 24 38          	mov    0x38(%esp),%ebx$/;"	l
f0104ef7	obj/kern/kernel.asm	/^f0104ef7:	85 d2                	test   %edx,%edx$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	75 35                	jne    f0104f30 <__udivdi3+0x50>$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	39 f3                	cmp    %esi,%ebx$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	0f 87 bd 00 00 00    	ja     f0104fc0 <__udivdi3+0xe0>$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	85 db                	test   %ebx,%ebx$/;"	l
f0104f05	obj/kern/kernel.asm	/^f0104f05:	89 d9                	mov    %ebx,%ecx$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	75 0b                	jne    f0104f14 <__udivdi3+0x34>$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104f0e	obj/kern/kernel.asm	/^f0104f0e:	31 d2                	xor    %edx,%edx$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	f7 f3                	div    %ebx$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	89 c1                	mov    %eax,%ecx$/;"	l
f0104f14	obj/kern/kernel.asm	/^f0104f14:	31 d2                	xor    %edx,%edx$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	89 f0                	mov    %esi,%eax$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	f7 f1                	div    %ecx$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	89 c6                	mov    %eax,%esi$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	89 e8                	mov    %ebp,%eax$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	89 f7                	mov    %esi,%edi$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	f7 f1                	div    %ecx$/;"	l
f0104f22	obj/kern/kernel.asm	/^f0104f22:	89 fa                	mov    %edi,%edx$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	5b                   	pop    %ebx$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	5e                   	pop    %esi$/;"	l
f0104f29	obj/kern/kernel.asm	/^f0104f29:	5f                   	pop    %edi$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	5d                   	pop    %ebp$/;"	l
f0104f2b	obj/kern/kernel.asm	/^f0104f2b:	c3                   	ret    $/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30:	39 f2                	cmp    %esi,%edx$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	77 7c                	ja     f0104fb0 <__udivdi3+0xd0>$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	0f bd fa             	bsr    %edx,%edi$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	0f 84 98 00 00 00    	je     f0104fd8 <__udivdi3+0xf8>$/;"	l
f0104f40	obj/kern/kernel.asm	/^f0104f40:	89 f9                	mov    %edi,%ecx$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	29 f8                	sub    %edi,%eax$/;"	l
f0104f49	obj/kern/kernel.asm	/^f0104f49:	d3 e2                	shl    %cl,%edx$/;"	d
f0104f4b	obj/kern/kernel.asm	/^f0104f4b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104f4f	obj/kern/kernel.asm	/^f0104f4f:	89 c1                	mov    %eax,%ecx$/;"	l
f0104f51	obj/kern/kernel.asm	/^f0104f51:	89 da                	mov    %ebx,%edx$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	d3 ea                	shr    %cl,%edx$/;"	d
f0104f55	obj/kern/kernel.asm	/^f0104f55:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0104f59	obj/kern/kernel.asm	/^f0104f59:	09 d1                	or     %edx,%ecx$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	89 f2                	mov    %esi,%edx$/;"	l
f0104f5d	obj/kern/kernel.asm	/^f0104f5d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0104f61	obj/kern/kernel.asm	/^f0104f61:	89 f9                	mov    %edi,%ecx$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	d3 e3                	shl    %cl,%ebx$/;"	d
f0104f65	obj/kern/kernel.asm	/^f0104f65:	89 c1                	mov    %eax,%ecx$/;"	l
f0104f67	obj/kern/kernel.asm	/^f0104f67:	d3 ea                	shr    %cl,%edx$/;"	d
f0104f69	obj/kern/kernel.asm	/^f0104f69:	89 f9                	mov    %edi,%ecx$/;"	l
f0104f6b	obj/kern/kernel.asm	/^f0104f6b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	d3 e6                	shl    %cl,%esi$/;"	d
f0104f71	obj/kern/kernel.asm	/^f0104f71:	89 eb                	mov    %ebp,%ebx$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	89 c1                	mov    %eax,%ecx$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	d3 eb                	shr    %cl,%ebx$/;"	d
f0104f77	obj/kern/kernel.asm	/^f0104f77:	09 de                	or     %ebx,%esi$/;"	l
f0104f79	obj/kern/kernel.asm	/^f0104f79:	89 f0                	mov    %esi,%eax$/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	89 d6                	mov    %edx,%esi$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	89 c3                	mov    %eax,%ebx$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0104f87	obj/kern/kernel.asm	/^f0104f87:	39 d6                	cmp    %edx,%esi$/;"	l
f0104f89	obj/kern/kernel.asm	/^f0104f89:	72 0c                	jb     f0104f97 <__udivdi3+0xb7>$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	89 f9                	mov    %edi,%ecx$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	d3 e5                	shl    %cl,%ebp$/;"	d
f0104f8f	obj/kern/kernel.asm	/^f0104f8f:	39 c5                	cmp    %eax,%ebp$/;"	l
f0104f91	obj/kern/kernel.asm	/^f0104f91:	73 5d                	jae    f0104ff0 <__udivdi3+0x110>$/;"	l
f0104f93	obj/kern/kernel.asm	/^f0104f93:	39 d6                	cmp    %edx,%esi$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	75 59                	jne    f0104ff0 <__udivdi3+0x110>$/;"	l
f0104f97	obj/kern/kernel.asm	/^f0104f97:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	31 ff                	xor    %edi,%edi$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c:	89 fa                	mov    %edi,%edx$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104fa1	obj/kern/kernel.asm	/^f0104fa1:	5b                   	pop    %ebx$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	5e                   	pop    %esi$/;"	l
f0104fa3	obj/kern/kernel.asm	/^f0104fa3:	5f                   	pop    %edi$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	5d                   	pop    %ebp$/;"	l
f0104fa5	obj/kern/kernel.asm	/^f0104fa5:	c3                   	ret    $/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104fa9	obj/kern/kernel.asm	/^f0104fa9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0:	31 ff                	xor    %edi,%edi$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	31 c0                	xor    %eax,%eax$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	89 fa                	mov    %edi,%edx$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	5b                   	pop    %ebx$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba:	5e                   	pop    %esi$/;"	l
f0104fbb	obj/kern/kernel.asm	/^f0104fbb:	5f                   	pop    %edi$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	5d                   	pop    %ebp$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	c3                   	ret    $/;"	l
f0104fbe	obj/kern/kernel.asm	/^f0104fbe:	66 90                	xchg   %ax,%ax$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	31 ff                	xor    %edi,%edi$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	89 e8                	mov    %ebp,%eax$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4:	89 f2                	mov    %esi,%edx$/;"	l
f0104fc6	obj/kern/kernel.asm	/^f0104fc6:	f7 f3                	div    %ebx$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	89 fa                	mov    %edi,%edx$/;"	l
f0104fca	obj/kern/kernel.asm	/^f0104fca:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104fcd	obj/kern/kernel.asm	/^f0104fcd:	5b                   	pop    %ebx$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	5e                   	pop    %esi$/;"	l
f0104fcf	obj/kern/kernel.asm	/^f0104fcf:	5f                   	pop    %edi$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	5d                   	pop    %ebp$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	c3                   	ret    $/;"	l
f0104fd2	obj/kern/kernel.asm	/^f0104fd2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	39 f2                	cmp    %esi,%edx$/;"	l
f0104fda	obj/kern/kernel.asm	/^f0104fda:	72 06                	jb     f0104fe2 <__udivdi3+0x102>$/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	31 c0                	xor    %eax,%eax$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	39 eb                	cmp    %ebp,%ebx$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	77 d2                	ja     f0104fb4 <__udivdi3+0xd4>$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104fe7	obj/kern/kernel.asm	/^f0104fe7:	eb cb                	jmp    f0104fb4 <__udivdi3+0xd4>$/;"	l
f0104fe9	obj/kern/kernel.asm	/^f0104fe9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104ff0	obj/kern/kernel.asm	/^f0104ff0:	89 d8                	mov    %ebx,%eax$/;"	l
f0104ff2	obj/kern/kernel.asm	/^f0104ff2:	31 ff                	xor    %edi,%edi$/;"	l
f0104ff4	obj/kern/kernel.asm	/^f0104ff4:	eb be                	jmp    f0104fb4 <__udivdi3+0xd4>$/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6:	66 90                	xchg   %ax,%ax$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	66 90                	xchg   %ax,%ax$/;"	l
f0104ffa	obj/kern/kernel.asm	/^f0104ffa:	66 90                	xchg   %ax,%ax$/;"	l
f0104ffc	obj/kern/kernel.asm	/^f0104ffc:	66 90                	xchg   %ax,%ax$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	66 90                	xchg   %ax,%ax$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000 <__umoddi3>:$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	55                   	push   %ebp$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	57                   	push   %edi$/;"	l
f0105002	obj/kern/kernel.asm	/^f0105002:	56                   	push   %esi$/;"	l
f0105003	obj/kern/kernel.asm	/^f0105003:	53                   	push   %ebx$/;"	l
f0105004	obj/kern/kernel.asm	/^f0105004:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	8b 74 24 30          	mov    0x30(%esp),%esi$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	8b 5c 24 34          	mov    0x34(%esp),%ebx$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	85 ed                	test   %ebp,%ebp$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	89 f0                	mov    %esi,%eax$/;"	l
f010501b	obj/kern/kernel.asm	/^f010501b:	89 da                	mov    %ebx,%edx$/;"	l
f010501d	obj/kern/kernel.asm	/^f010501d:	75 19                	jne    f0105038 <__umoddi3+0x38>$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	39 df                	cmp    %ebx,%edi$/;"	l
f0105021	obj/kern/kernel.asm	/^f0105021:	0f 86 b1 00 00 00    	jbe    f01050d8 <__umoddi3+0xd8>$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	f7 f7                	div    %edi$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	89 d0                	mov    %edx,%eax$/;"	l
f010502b	obj/kern/kernel.asm	/^f010502b:	31 d2                	xor    %edx,%edx$/;"	l
f010502d	obj/kern/kernel.asm	/^f010502d:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105030	obj/kern/kernel.asm	/^f0105030:	5b                   	pop    %ebx$/;"	l
f0105031	obj/kern/kernel.asm	/^f0105031:	5e                   	pop    %esi$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032:	5f                   	pop    %edi$/;"	l
f0105033	obj/kern/kernel.asm	/^f0105033:	5d                   	pop    %ebp$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	c3                   	ret    $/;"	l
f0105035	obj/kern/kernel.asm	/^f0105035:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105038	obj/kern/kernel.asm	/^f0105038:	39 dd                	cmp    %ebx,%ebp$/;"	l
f010503a	obj/kern/kernel.asm	/^f010503a:	77 f1                	ja     f010502d <__umoddi3+0x2d>$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c:	0f bd cd             	bsr    %ebp,%ecx$/;"	l
f010503f	obj/kern/kernel.asm	/^f010503f:	83 f1 1f             	xor    $0x1f,%ecx$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046:	0f 84 b4 00 00 00    	je     f0105100 <__umoddi3+0x100>$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	89 c2                	mov    %eax,%edx$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0105057	obj/kern/kernel.asm	/^f0105057:	29 c2                	sub    %eax,%edx$/;"	l
f0105059	obj/kern/kernel.asm	/^f0105059:	89 c1                	mov    %eax,%ecx$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	89 f8                	mov    %edi,%eax$/;"	l
f010505d	obj/kern/kernel.asm	/^f010505d:	d3 e5                	shl    %cl,%ebp$/;"	d
f010505f	obj/kern/kernel.asm	/^f010505f:	89 d1                	mov    %edx,%ecx$/;"	l
f0105061	obj/kern/kernel.asm	/^f0105061:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	d3 e8                	shr    %cl,%eax$/;"	d
f0105067	obj/kern/kernel.asm	/^f0105067:	09 c5                	or     %eax,%ebp$/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	89 c1                	mov    %eax,%ecx$/;"	l
f010506f	obj/kern/kernel.asm	/^f010506f:	d3 e7                	shl    %cl,%edi$/;"	d
f0105071	obj/kern/kernel.asm	/^f0105071:	89 d1                	mov    %edx,%ecx$/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	89 df                	mov    %ebx,%edi$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	d3 ef                	shr    %cl,%edi$/;"	d
f010507b	obj/kern/kernel.asm	/^f010507b:	89 c1                	mov    %eax,%ecx$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	89 f0                	mov    %esi,%eax$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	d3 e3                	shl    %cl,%ebx$/;"	d
f0105081	obj/kern/kernel.asm	/^f0105081:	89 d1                	mov    %edx,%ecx$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	89 fa                	mov    %edi,%edx$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	d3 e8                	shr    %cl,%eax$/;"	d
f0105087	obj/kern/kernel.asm	/^f0105087:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	09 d8                	or     %ebx,%eax$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	f7 f5                	div    %ebp$/;"	l
f0105090	obj/kern/kernel.asm	/^f0105090:	d3 e6                	shl    %cl,%esi$/;"	d
f0105092	obj/kern/kernel.asm	/^f0105092:	89 d1                	mov    %edx,%ecx$/;"	l
f0105094	obj/kern/kernel.asm	/^f0105094:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	39 d1                	cmp    %edx,%ecx$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	89 c3                	mov    %eax,%ebx$/;"	l
f010509c	obj/kern/kernel.asm	/^f010509c:	89 d7                	mov    %edx,%edi$/;"	l
f010509e	obj/kern/kernel.asm	/^f010509e:	72 06                	jb     f01050a6 <__umoddi3+0xa6>$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	75 0e                	jne    f01050b0 <__umoddi3+0xb0>$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	39 c6                	cmp    %eax,%esi$/;"	l
f01050a4	obj/kern/kernel.asm	/^f01050a4:	73 0a                	jae    f01050b0 <__umoddi3+0xb0>$/;"	l
f01050a6	obj/kern/kernel.asm	/^f01050a6:	2b 44 24 08          	sub    0x8(%esp),%eax$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	19 ea                	sbb    %ebp,%edx$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	89 d7                	mov    %edx,%edi$/;"	l
f01050ae	obj/kern/kernel.asm	/^f01050ae:	89 c3                	mov    %eax,%ebx$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	89 ca                	mov    %ecx,%edx$/;"	l
f01050b2	obj/kern/kernel.asm	/^f01050b2:	0f b6 4c 24 0c       	movzbl 0xc(%esp),%ecx$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	29 de                	sub    %ebx,%esi$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	19 fa                	sbb    %edi,%edx$/;"	l
f01050bb	obj/kern/kernel.asm	/^f01050bb:	8b 5c 24 04          	mov    0x4(%esp),%ebx$/;"	l
f01050bf	obj/kern/kernel.asm	/^f01050bf:	89 d0                	mov    %edx,%eax$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	d3 e0                	shl    %cl,%eax$/;"	d
f01050c3	obj/kern/kernel.asm	/^f01050c3:	89 d9                	mov    %ebx,%ecx$/;"	l
f01050c5	obj/kern/kernel.asm	/^f01050c5:	d3 ee                	shr    %cl,%esi$/;"	d
f01050c7	obj/kern/kernel.asm	/^f01050c7:	d3 ea                	shr    %cl,%edx$/;"	d
f01050c9	obj/kern/kernel.asm	/^f01050c9:	09 f0                	or     %esi,%eax$/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	5b                   	pop    %ebx$/;"	l
f01050cf	obj/kern/kernel.asm	/^f01050cf:	5e                   	pop    %esi$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	5f                   	pop    %edi$/;"	l
f01050d1	obj/kern/kernel.asm	/^f01050d1:	5d                   	pop    %ebp$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	c3                   	ret    $/;"	l
f01050d3	obj/kern/kernel.asm	/^f01050d3:	90                   	nop$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	85 ff                	test   %edi,%edi$/;"	l
f01050da	obj/kern/kernel.asm	/^f01050da:	89 f9                	mov    %edi,%ecx$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	75 0b                	jne    f01050e9 <__umoddi3+0xe9>$/;"	l
f01050de	obj/kern/kernel.asm	/^f01050de:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01050e3	obj/kern/kernel.asm	/^f01050e3:	31 d2                	xor    %edx,%edx$/;"	l
f01050e5	obj/kern/kernel.asm	/^f01050e5:	f7 f7                	div    %edi$/;"	l
f01050e7	obj/kern/kernel.asm	/^f01050e7:	89 c1                	mov    %eax,%ecx$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	89 d8                	mov    %ebx,%eax$/;"	l
f01050eb	obj/kern/kernel.asm	/^f01050eb:	31 d2                	xor    %edx,%edx$/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	f7 f1                	div    %ecx$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	89 f0                	mov    %esi,%eax$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	f7 f1                	div    %ecx$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	e9 31 ff ff ff       	jmp    f0105029 <__umoddi3+0x29>$/;"	l
f01050f8	obj/kern/kernel.asm	/^f01050f8:	90                   	nop$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	39 dd                	cmp    %ebx,%ebp$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	72 08                	jb     f010510c <__umoddi3+0x10c>$/;"	l
f0105104	obj/kern/kernel.asm	/^f0105104:	39 f7                	cmp    %esi,%edi$/;"	l
f0105106	obj/kern/kernel.asm	/^f0105106:	0f 87 21 ff ff ff    	ja     f010502d <__umoddi3+0x2d>$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	89 da                	mov    %ebx,%edx$/;"	l
f010510e	obj/kern/kernel.asm	/^f010510e:	89 f0                	mov    %esi,%eax$/;"	l
f0105110	obj/kern/kernel.asm	/^f0105110:	29 f8                	sub    %edi,%eax$/;"	l
f0105112	obj/kern/kernel.asm	/^f0105112:	19 ea                	sbb    %ebp,%edx$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	e9 14 ff ff ff       	jmp    f010502d <__umoddi3+0x2d>$/;"	l
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
static	obj/boot/boot.asm	/^static inline void$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
thisenv	obj/user/faultwrite.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
padc	obj/user/faultwrite.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/faultwrite.asm	/^void *$/;"	l
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
void	obj/user/faultwrite.asm	/^void *$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
thisenv	obj/user/hello.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/hello.asm	/^void$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
padc	obj/user/hello.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
size_t	obj/user/hello.asm	/^size_t$/;"	l
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/hello.asm	/^void *$/;"	l
s	obj/user/hello.asm	/^	s = src;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
void	obj/user/hello.asm	/^void *$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
void	obj/user/hello.asm	/^void$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
thisenv	obj/user/faultread.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/faultread.asm	/^void$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
padc	obj/user/faultread.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
size_t	obj/user/faultread.asm	/^size_t$/;"	l
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/faultread.asm	/^void *$/;"	l
s	obj/user/faultread.asm	/^	s = src;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
void	obj/user/faultread.asm	/^void *$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
void	obj/user/faultread.asm	/^void$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
thisenv	obj/user/evilhello.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
padc	obj/user/evilhello.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/evilhello.asm	/^void *$/;"	l
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
void	obj/user/evilhello.asm	/^void *$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
thisenv	obj/user/badsegment.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
padc	obj/user/badsegment.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/badsegment.asm	/^void *$/;"	l
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
void	obj/user/badsegment.asm	/^void *$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
thisenv	obj/user/divzero.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/divzero.asm	/^void$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
padc	obj/user/divzero.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
size_t	obj/user/divzero.asm	/^size_t$/;"	l
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/divzero.asm	/^void *$/;"	l
s	obj/user/divzero.asm	/^	s = src;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
void	obj/user/divzero.asm	/^void *$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
void	obj/user/divzero.asm	/^void$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/faultreadkernel.asm	/^void$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
padc	obj/user/faultreadkernel.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
void	obj/user/faultreadkernel.asm	/^void$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
thisenv	obj/user/buggyhello2.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
padc	obj/user/buggyhello2.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/buggyhello2.asm	/^void *$/;"	l
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
void	obj/user/buggyhello2.asm	/^void *$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
padc	obj/user/faultwritekernel.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
thisenv	obj/user/softint.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
padc	obj/user/softint.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
size_t	obj/user/softint.asm	/^size_t$/;"	l
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/softint.asm	/^void *$/;"	l
s	obj/user/softint.asm	/^	s = src;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
void	obj/user/softint.asm	/^void *$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
thisenv	obj/user/breakpoint.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
padc	obj/user/breakpoint.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/breakpoint.asm	/^void *$/;"	l
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
void	obj/user/breakpoint.asm	/^void *$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
thisenv	obj/user/buggyhello.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
padc	obj/user/buggyhello.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/buggyhello.asm	/^void *$/;"	l
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
void	obj/user/buggyhello.asm	/^void *$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
thisenv	obj/user/testbss.asm	/^	thisenv = 0;$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
padc	obj/user/testbss.asm	/^		padc = ' ';$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
size_t	obj/user/testbss.asm	/^size_t$/;"	l
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
void	obj/user/testbss.asm	/^void *$/;"	l
s	obj/user/testbss.asm	/^	s = src;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
void	obj/user/testbss.asm	/^void *$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
void	obj/user/testbss.asm	/^void$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
__all__	gradelib.py	/^__all__ = []$/;"	v
TESTS	gradelib.py	/^TESTS = []$/;"	v
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
end_part	gradelib.py	/^def end_part(name):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
run_tests	gradelib.py	/^def run_tests():$/;"	f
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
pre_make	gradelib.py	/^def pre_make():$/;"	f
post_make	gradelib.py	/^def post_make():$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
color	gradelib.py	/^def color(name, text):$/;"	f
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
kill	gradelib.py	/^    def kill(self):$/;"	f
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Runner	gradelib.py	/^class Runner():$/;"	c
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
save	gradelib.py	/^def save(path):$/;"	f
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
name	kern/trapentry.S	/^	name:								\\$/;"	l
_alltraps	kern/trapentry.S	/^_alltraps:	$/;"	l
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
IO_RTC	kern/kclock.h	9;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
i386_init	kern/init.c	/^i386_init(void)$/;"	f
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
JOS_KERN_ENV_H	kern/env.h	4;"	d
ENV_PASTE3	kern/env.h	26;"	d
ENV_CREATE	kern/env.h	28;"	d
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
curenv	kern/env.c	/^struct Env *curenv = NULL;		\/\/ The current env$/;"	v	typeref:struct:Env
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
ENVGENSHIFT	kern/env.c	20;"	d	file:
gdt	kern/env.c	/^struct Segdesc gdt[] =$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
npages	kern/pmap1.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages_basemem	kern/pmap1.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
kern_pgdir	kern/pmap1.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
pages	kern/pmap1.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
page_free_list	kern/pmap1.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
nvram_read	kern/pmap1.c	/^nvram_read(int r)$/;"	f	file:
i386_detect_memory	kern/pmap1.c	/^i386_detect_memory(void)$/;"	f	file:
boot_alloc	kern/pmap1.c	/^boot_alloc(uint32_t n)$/;"	f	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
npages	kern/pmap(2).c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages_basemem	kern/pmap(2).c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
kern_pgdir	kern/pmap(2).c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
pages	kern/pmap(2).c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
page_free_list	kern/pmap(2).c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
nvram_read	kern/pmap(2).c	/^nvram_read(int r)$/;"	f	file:
i386_detect_memory	kern/pmap(2).c	/^i386_detect_memory(void)$/;"	f	file:
boot_alloc	kern/pmap(2).c	/^boot_alloc(uint32_t n)$/;"	f	file:
envs	kern/env1.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
curenv	kern/env1.c	/^struct Env *curenv = NULL;		\/\/ The current env$/;"	v	typeref:struct:Env
env_free_list	kern/env1.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
ENVGENSHIFT	kern/env1.c	20;"	d	file:
gdt	kern/env1.c	/^struct Segdesc gdt[] =$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/env1.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
envid2env	kern/env1.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
env_init	kern/env1.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env1.c	/^env_init_percpu(void)$/;"	f
env_setup_vm	kern/env1.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_alloc	kern/env1.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
region_alloc	kern/env1.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
load_icode	kern/env1.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
env_create	kern/env1.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_free	kern/env1.c	/^env_free(struct Env *e)$/;"	f
env_destroy	kern/env1.c	/^env_destroy(struct Env *e)$/;"	f
env_pop_tf	kern/env1.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env1.c	/^env_run(struct Env *e)$/;"	f
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
PADDR	kern/pmap.h	26;"	d
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
KADDR	kern/pmap.h	38;"	d
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon1
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
WHITESPACE	kern/monitor.c	69;"	d	file:
MAXARGS	kern/monitor.c	70;"	d	file:
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
delay	kern/console.c	/^delay(void)$/;"	f	file:
COM1	kern/console.c	26;"	d	file:
COM_RX	kern/console.c	28;"	d	file:
COM_TX	kern/console.c	29;"	d	file:
COM_DLL	kern/console.c	30;"	d	file:
COM_DLM	kern/console.c	31;"	d	file:
COM_IER	kern/console.c	32;"	d	file:
COM_IER_RDI	kern/console.c	33;"	d	file:
COM_IIR	kern/console.c	34;"	d	file:
COM_FCR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	36;"	d	file:
COM_LCR_DLAB	kern/console.c	37;"	d	file:
COM_LCR_WLEN8	kern/console.c	38;"	d	file:
COM_MCR	kern/console.c	39;"	d	file:
COM_MCR_RTS	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	41;"	d	file:
COM_MCR_OUT2	kern/console.c	42;"	d	file:
COM_LSR	kern/console.c	43;"	d	file:
COM_LSR_DATA	kern/console.c	44;"	d	file:
COM_LSR_TXRDY	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	46;"	d	file:
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
NO	kern/console.c	214;"	d	file:
SHIFT	kern/console.c	216;"	d	file:
CTL	kern/console.c	217;"	d	file:
ALT	kern/console.c	218;"	d	file:
CAPSLOCK	kern/console.c	220;"	d	file:
NUMLOCK	kern/console.c	221;"	d	file:
SCROLLLOCK	kern/console.c	222;"	d	file:
E0ESC	kern/console.c	224;"	d	file:
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
C	kern/console.c	285;"	d	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
CONSBUFSIZE	kern/console.c	385;"	d	file:
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon2	file:
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon2	file:
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon2	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon2	file:
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
_CONSOLE_H_	kern/console.h	4;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_SIZE	kern/console.h	18;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
entry	kern/entry.S	/^entry:$/;"	l
relocated	kern/entry.S	/^relocated:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
ts	kern/trap_1.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
last_tf	kern/trap_1.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
idt	kern/trap_1.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap_1.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
trapname	kern/trap_1.c	/^static const char *trapname(int trapno)$/;"	f	file:
trap_init	kern/trap_1.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap_1.c	/^trap_init_percpu(void)$/;"	f
print_trapframe	kern/trap_1.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
print_regs	kern/trap_1.c	/^print_regs(struct PushRegs *regs)$/;"	f
trap_dispatch	kern/trap_1.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap	kern/trap_1.c	/^trap(struct Trapframe *tf)$/;"	f
page_fault_handler	kern/trap_1.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
SECTSIZE	boot/main.c	32;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
bootmain	boot/main.c	/^bootmain(void)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
start	boot/boot.S	/^start:$/;"	l
protcseg	boot/boot.S	/^protcseg:$/;"	l
spin	boot/boot.S	/^spin:$/;"	l
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
warn	inc/assert.h	11;"	d
panic	inc/assert.h	12;"	d
assert	inc/assert.h	14;"	d
static_assert	inc/assert.h	18;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon3
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon3
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon3
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon3
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon3
JOS_INC_ENV_H	inc/env.h	4;"	d
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
LOG2NENV	inc/env.h	28;"	d
NENV	inc/env.h	29;"	d
ENVX	inc/env.h	30;"	d
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon4
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon4
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon4
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon4
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon4
EnvType	inc/env.h	/^enum EnvType {$/;"	g
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
Env	inc/env.h	/^struct Env {$/;"	s
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
NULL	inc/stdio.h	7;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
PGNUM	inc/mmu.h	30;"	d
PDX	inc/mmu.h	33;"	d
PTX	inc/mmu.h	36;"	d
PGOFF	inc/mmu.h	39;"	d
PGADDR	inc/mmu.h	42;"	d
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
PGSIZE	inc/mmu.h	48;"	d
PGSHIFT	inc/mmu.h	49;"	d
PTSIZE	inc/mmu.h	51;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_W	inc/mmu.h	59;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_D	inc/mmu.h	64;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_ADDR	inc/mmu.h	76;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_WP	inc/mmu.h	85;"	d
CR0_AM	inc/mmu.h	86;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_PG	inc/mmu.h	89;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_VME	inc/mmu.h	97;"	d
FL_CF	inc/mmu.h	100;"	d
FL_PF	inc/mmu.h	101;"	d
FL_AF	inc/mmu.h	102;"	d
FL_ZF	inc/mmu.h	103;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_IF	inc/mmu.h	106;"	d
FL_DF	inc/mmu.h	107;"	d
FL_OF	inc/mmu.h	108;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_NT	inc/mmu.h	114;"	d
FL_RF	inc/mmu.h	115;"	d
FL_VM	inc/mmu.h	116;"	d
FL_AC	inc/mmu.h	117;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_ID	inc/mmu.h	120;"	d
FEC_PR	inc/mmu.h	123;"	d
FEC_WR	inc/mmu.h	124;"	d
FEC_U	inc/mmu.h	125;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG	inc/mmu.h	142;"	d
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
SEG_NULL	inc/mmu.h	168;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
STA_X	inc/mmu.h	184;"	d
STA_E	inc/mmu.h	185;"	d
STA_C	inc/mmu.h	186;"	d
STA_W	inc/mmu.h	187;"	d
STA_R	inc/mmu.h	188;"	d
STA_A	inc/mmu.h	189;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_TG	inc/mmu.h	196;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_TG32	inc/mmu.h	203;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
SETGATE	inc/mmu.h	282;"	d
SETCALLGATE	inc/mmu.h	296;"	d
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_KD	inc/memlayout.h	16;"	d
GD_UT	inc/memlayout.h	17;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_TSS0	inc/memlayout.h	19;"	d
KERNBASE	inc/memlayout.h	87;"	d
IOPHYSMEM	inc/memlayout.h	92;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
KSTKGAP	inc/memlayout.h	98;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MMIOBASE	inc/memlayout.h	102;"	d
ULIM	inc/memlayout.h	104;"	d
UVPT	inc/memlayout.h	112;"	d
UPAGES	inc/memlayout.h	114;"	d
UENVS	inc/memlayout.h	116;"	d
UTOP	inc/memlayout.h	123;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEXT	inc/memlayout.h	131;"	d
UTEMP	inc/memlayout.h	134;"	d
PFTEMP	inc/memlayout.h	137;"	d
USTABDATA	inc/memlayout.h	139;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
JOS_INC_X86_H	inc/x86.h	2;"	d
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
inb	inc/x86.h	/^inb(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon5
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon5
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon5
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon5
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon5
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon5
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon5
JOS_STAB_H	inc/stab.h	2;"	d
N_GSYM	inc/stab.h	15;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_STSYM	inc/stab.h	18;"	d
N_LCSYM	inc/stab.h	19;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_DSLINE	inc/stab.h	24;"	d
N_BSLINE	inc/stab.h	25;"	d
N_SSYM	inc/stab.h	26;"	d
N_SO	inc/stab.h	27;"	d
N_LSYM	inc/stab.h	28;"	d
N_BINCL	inc/stab.h	29;"	d
N_SOL	inc/stab.h	30;"	d
N_PSYM	inc/stab.h	31;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_LBRAC	inc/stab.h	34;"	d
N_EXCL	inc/stab.h	35;"	d
N_RBRAC	inc/stab.h	36;"	d
N_BCOMM	inc/stab.h	37;"	d
N_ECOMM	inc/stab.h	38;"	d
N_ECOML	inc/stab.h	39;"	d
N_LENG	inc/stab.h	40;"	d
Stab	inc/stab.h	/^struct Stab {$/;"	s
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
JOS_INC_ELF_H	inc/elf.h	2;"	d
ELF_MAGIC	inc/elf.h	4;"	d
Elf	inc/elf.h	/^struct Elf {$/;"	s
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
USED	inc/lib.h	20;"	d
O_RDONLY	inc/lib.h	46;"	d
O_WRONLY	inc/lib.h	47;"	d
O_RDWR	inc/lib.h	48;"	d
O_ACCMODE	inc/lib.h	49;"	d
O_CREAT	inc/lib.h	51;"	d
O_TRUNC	inc/lib.h	52;"	d
O_EXCL	inc/lib.h	53;"	d
O_MKDIR	inc/lib.h	54;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_DEBUG	inc/trap.h	7;"	d
T_NMI	inc/trap.h	8;"	d
T_BRKPT	inc/trap.h	9;"	d
T_OFLOW	inc/trap.h	10;"	d
T_BOUND	inc/trap.h	11;"	d
T_ILLOP	inc/trap.h	12;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_TSS	inc/trap.h	16;"	d
T_SEGNP	inc/trap.h	17;"	d
T_STACK	inc/trap.h	18;"	d
T_GPFLT	inc/trap.h	19;"	d
T_PGFLT	inc/trap.h	20;"	d
T_FPERR	inc/trap.h	22;"	d
T_ALIGN	inc/trap.h	23;"	d
T_MCHK	inc/trap.h	24;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_DEFAULT	inc/trap.h	30;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_TIMER	inc/trap.h	35;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_ERROR	inc/trap.h	40;"	d
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_DEL	inc/kbdreg.h	14;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
CMDBYTE	inc/kbdreg.h	60;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
NULL	inc/types.h	5;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon6
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon6
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
MIN	inc/types.h	43;"	d
MAX	inc/types.h	49;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
ARRAY_SIZE	inc/types.h	70;"	d
offsetof	inc/types.h	73;"	d
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
TOP	GNUmakefile	/^TOP = .$/;"	m
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
GDB	GNUmakefile	/^GDB	:= $(GCCPREFIX)gdb$/;"	m
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2018\/handin.py$/;"	m
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2018\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
V	conf/env.mk	/^V = @$/;"	m
QEMU	conf/env.mk	/^ QEMU=\/home\/dsivalin\/Documents\/qemu\/x86_64-softmmu\/qemu-system-x86_64$/;"	m
LAB	conf/lab.mk	/^LAB=3$/;"	m
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Tue Sep 25 12:21:10 EDT 2018$/;"	m
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
fs_test	fs/test.c	/^fs_test(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
ASM	lib/string.c	9;"	d	file:
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
exit	lib/exit.c	/^exit(void)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
BUFLEN	lib/readline.c	4;"	d	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
_start	lib/entry.S	/^_start:$/;"	l
args_exist	lib/entry.S	/^args_exist:$/;"	l
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
zero	user/divzero.c	/^int zero;$/;"	v
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
ARRAYSIZE	user/testbss.c	5;"	d	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
